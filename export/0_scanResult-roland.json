{
    "workspaces": [
        {
            "id": "fe911311-e112-4359-a9fe-f5c44ef61d22",
            "name": "IFRS_Reporting [QA]",
            "type": "Workspace",
            "state": "Active",
            "isOnDedicatedCapacity": true,
            "capacityId": "A58B8154-A5DA-44CC-BC2E-3DCB22F05DD0",
            "defaultDatasetStorageFormat": "Small",
            "reports": [
                {
                    "reportType": "PowerBIReport",
                    "id": "89334339-d6af-4503-9cca-3e446cf0095f",
                    "name": "Sales Funnel & Order Book",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "createdDateTime": "2023-08-25T02:01:59.187",
                    "modifiedDateTime": "2023-09-14T06:17:03.907",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "bfc1ced6-b881-42bf-a6e2-e833e3f74b55",
                    "name": "[App] Sales Funnel & Order Book",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-25T02:06:25.917",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "89334339-d6af-4503-9cca-3e446cf0095f",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "d92920c2-5a39-48f8-ac3b-2e46db48832b",
                    "name": "Sales Funnel & Order Book - Platform Head (IN)",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "createdDateTime": "2023-08-25T02:25:39.97",
                    "modifiedDateTime": "2023-08-25T02:50:22.587",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "ce6bba38-5720-4665-90cc-c07500232084",
                    "name": "Sales Funnel & Order Book - Platform Head (FU)",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "createdDateTime": "2023-08-25T02:26:09.54",
                    "modifiedDateTime": "2023-08-25T02:49:12.843",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "683f4ef2-c8f0-4f2c-a52a-8bbf4cbf1c06",
                    "name": "Sales Funnel & Order Book - Platform Head DACH (IN)",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "createdDateTime": "2023-08-25T03:10:48.207",
                    "modifiedDateTime": "2023-08-25T03:10:48.207",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "585d4cf3-2d79-435d-8601-e3a848f124ac",
                    "name": "Sales Funnel & Order Book - Platform Head DACH (FU)",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "createdDateTime": "2023-08-25T03:11:22.627",
                    "modifiedDateTime": "2023-08-25T03:11:22.627",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "4b2c5f6e-c3a9-48d3-921c-b6dd7c44ccc3",
                    "name": "[App] Sales Funnel & Order Book - Platform Head (IN)",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-25T03:23:37.923",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "d92920c2-5a39-48f8-ac3b-2e46db48832b",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "9c8ae1e8-7f3d-4458-9d43-cab703f0cbb5",
                    "name": "[App] Sales Funnel & Order Book - Platform Head (FU)",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-25T03:23:37.923",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "ce6bba38-5720-4665-90cc-c07500232084",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "0d0ec7e3-c700-41bc-9aa3-fee1194f6615",
                    "name": "[App] Sales Funnel & Order Book - Platform Head DACH (IN)",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-25T03:23:37.923",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "683f4ef2-c8f0-4f2c-a52a-8bbf4cbf1c06",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "b9f2898e-e1e5-405e-80fd-d5ed63dec687",
                    "name": "[App] Sales Funnel & Order Book - Platform Head DACH (FU)",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-25T03:23:37.923",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "585d4cf3-2d79-435d-8601-e3a848f124ac",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "33f33825-68c6-49d0-9e59-f20a777d61b2",
                    "name": "Capacity & Utilization",
                    "datasetId": "8a698f63-ba8b-4d74-988d-dd57cd5b1643",
                    "createdDateTime": "2023-08-28T07:58:01.787",
                    "modifiedDateTime": "2023-08-31T10:46:41.057",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "201ee58c-e679-4932-9d3b-d56fc6f84d8f",
                    "name": "Capacity & Utilization - Platform Head",
                    "datasetId": "8a698f63-ba8b-4d74-988d-dd57cd5b1643",
                    "createdDateTime": "2023-08-28T08:00:32.6",
                    "modifiedDateTime": "2023-08-28T08:03:43.71",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "0e299c7e-84bf-434f-af8a-76487934a94e",
                    "name": "Capacity & Utilization - Platform Head DACH",
                    "datasetId": "8a698f63-ba8b-4d74-988d-dd57cd5b1643",
                    "createdDateTime": "2023-08-28T08:01:29.463",
                    "modifiedDateTime": "2023-08-28T08:04:30.343",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "01258e34-580a-42cd-8006-71b0a7c8ad8a",
                    "name": "[App] Capacity & Utilization",
                    "datasetId": "8a698f63-ba8b-4d74-988d-dd57cd5b1643",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-28T08:06:16.023",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "33f33825-68c6-49d0-9e59-f20a777d61b2",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "b0a92930-4eb3-424d-90b2-6e03bebf04ba",
                    "name": "[App] Capacity & Utilization - Platform Head",
                    "datasetId": "8a698f63-ba8b-4d74-988d-dd57cd5b1643",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-28T08:06:16.023",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "201ee58c-e679-4932-9d3b-d56fc6f84d8f",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814"
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "9db12a68-2076-406f-8b28-98f7bca2cb31",
                    "name": "[App] Capacity & Utilization - Platform Head DACH",
                    "datasetId": "8a698f63-ba8b-4d74-988d-dd57cd5b1643",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-28T08:06:16.023",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "0e299c7e-84bf-434f-af8a-76487934a94e",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "6e3829f6-1f5b-4814-8728-be378a7f6005",
                    "name": "Performance Summary - MD, Region Head, Country Head",
                    "datasetId": "dca84489-0b9c-453d-b6d2-7da9b03b5c1a",
                    "createdDateTime": "2023-08-28T08:55:38.657",
                    "modifiedDateTime": "2023-09-14T06:21:49.283",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "5f66a793-351a-4d60-903a-fdf0127094ec",
                    "name": "Performance Summary - Key Account Manager",
                    "datasetId": "110e933e-7c16-417a-986d-ad732de0725e",
                    "createdDateTime": "2023-08-28T08:56:01.343",
                    "modifiedDateTime": "2023-08-28T08:56:01.343",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "1818d6e2-f87f-4002-83b9-1b8070027b8c",
                    "name": "Performance Summary - Platform Head DACH",
                    "datasetId": "63acad8a-abcd-4201-b557-bfec35784975",
                    "createdDateTime": "2023-08-28T08:56:18.937",
                    "modifiedDateTime": "2023-08-28T08:56:18.937",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "1abed93b-f405-4b00-8fe1-5dedbaa51962",
                    "name": "Performance Summary - Platform Head",
                    "datasetId": "ac14893d-4a76-4dec-af44-9450354094f6",
                    "createdDateTime": "2023-08-28T08:56:42.937",
                    "modifiedDateTime": "2023-08-28T08:56:42.937",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "a374656c-fd36-43b7-adda-183dbffc39be",
                    "name": "[App] Performance Summary - MD, Region Head, Country Head",
                    "datasetId": "dca84489-0b9c-453d-b6d2-7da9b03b5c1a",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-28T08:58:41.577",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "6e3829f6-1f5b-4814-8728-be378a7f6005",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "a4ced56c-0c58-432d-8482-d180bd48a329",
                    "name": "[App] Performance Summary - Key Account Manager",
                    "datasetId": "110e933e-7c16-417a-986d-ad732de0725e",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-28T08:58:41.577",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "5f66a793-351a-4d60-903a-fdf0127094ec",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814"
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "caba3c1b-88b4-4a34-b59c-0ecbae9c0d10",
                    "name": "[App] Performance Summary - Platform Head DACH",
                    "datasetId": "63acad8a-abcd-4201-b557-bfec35784975",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-28T08:58:41.577",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "1818d6e2-f87f-4002-83b9-1b8070027b8c",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "fddfa302-6dae-4569-aa33-d96e54478eec",
                    "name": "[App] Performance Summary - Platform Head",
                    "datasetId": "ac14893d-4a76-4dec-af44-9450354094f6",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-28T08:58:41.577",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "1abed93b-f405-4b00-8fe1-5dedbaa51962",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "eb3a7c1e-c885-4179-9301-1eb9e60d7c6f",
                    "name": "Capacity & Utilization - MD, Region Head, Country Head",
                    "datasetId": "76ace5c0-e3ae-439b-b23b-0235ea9bf054",
                    "createdDateTime": "2023-08-28T13:03:00.02",
                    "modifiedDateTime": "2023-09-14T05:27:20.137",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "6ad2607e-e00d-465c-a110-a837ad80fef1",
                    "name": "[App] Capacity & Utilization - MD, Region Head, Country Head",
                    "datasetId": "76ace5c0-e3ae-439b-b23b-0235ea9bf054",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-28T13:05:27.123",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "eb3a7c1e-c885-4179-9301-1eb9e60d7c6f",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "21b538b9-ab38-4b3d-a5b0-94b5dcb60d60",
                    "name": "Performance Summary",
                    "datasetId": "9a48e7fe-5b1a-4c14-a70c-c9d3c7afaa77",
                    "createdDateTime": "2023-08-28T18:33:49.6",
                    "modifiedDateTime": "2023-08-29T11:47:46.36",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "ac8f4204-083b-42ce-ab91-0de3d35e4c56",
                    "name": "[App] Performance Summary",
                    "datasetId": "9a48e7fe-5b1a-4c14-a70c-c9d3c7afaa77",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-08-28T18:36:28.66",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "21b538b9-ab38-4b3d-a5b0-94b5dcb60d60",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "af716bd1-226c-47b4-8125-554b0128f0d7",
                    "name": "Project Status Report",
                    "datasetId": "2b06ef8b-2943-4a9a-9e7d-0d7ae3c7568c",
                    "createdDateTime": "2023-09-05T20:23:14.533",
                    "modifiedDateTime": "2023-09-06T13:23:37.843",
                    "modifiedBy": "Yi.Faber@rolandberger.com",
                    "createdBy": "Yi.Faber@rolandberger.com",
                    "modifiedById": "9265d727-f2f5-4266-8763-f44f81a3d433",
                    "createdById": "9265d727-f2f5-4266-8763-f44f81a3d433",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Read",
                            "emailAddress": "gabriele.hayek@rolandberger.com",
                            "displayName": "Gabriele Hayek",
                            "identifier": "gabriele.hayek@rolandberger.com",
                            "graphId": "7276f27d-4b78-48bd-97db-2e93a457c11c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "57350eed-73e5-4480-9286-d2e631c920bd",
                    "name": "PSR Multiple project view",
                    "datasetId": "4c500140-2399-4cca-b354-627b1ba8f673",
                    "createdDateTime": "2023-09-08T15:51:36.117",
                    "modifiedDateTime": "2023-09-08T16:06:00.2",
                    "modifiedBy": "Yi.Faber@rolandberger.com",
                    "createdBy": "Yi.Faber@rolandberger.com",
                    "modifiedById": "9265d727-f2f5-4266-8763-f44f81a3d433",
                    "createdById": "9265d727-f2f5-4266-8763-f44f81a3d433",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Read",
                            "emailAddress": "gabriele.hayek@rolandberger.com",
                            "displayName": "Gabriele Hayek",
                            "identifier": "gabriele.hayek@rolandberger.com",
                            "graphId": "7276f27d-4b78-48bd-97db-2e93a457c11c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "4c0f19c9-8220-4b9d-b3fb-482041a91107",
                    "name": "Capacity & Utilization - F&C",
                    "datasetId": "aa8098b8-0be3-47c4-b036-ffb5cdb2aae2",
                    "createdDateTime": "2023-09-11T13:51:52.79",
                    "modifiedDateTime": "2023-09-15T08:16:03.5",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "aa56d5e1-b116-4ce6-8a99-dbe359feafca",
                    "name": "[App] Capacity & Utilization - F&C",
                    "datasetId": "aa8098b8-0be3-47c4-b036-ffb5cdb2aae2",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-09-11T14:04:28.633",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "4c0f19c9-8220-4b9d-b3fb-482041a91107",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "6eda15bf-582f-4101-974f-d737c80df2a8",
                    "name": "Sales Funnel & Order Book - MD, Region Head, Country Head",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "createdDateTime": "2023-09-14T06:17:54.197",
                    "modifiedDateTime": "2023-09-14T06:17:54.197",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "Owner",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "reportType": "PowerBIReport",
                    "id": "8b8554d2-7ee9-4602-ab05-786f34e126b2",
                    "name": "[App] Sales Funnel & Order Book - MD, Region Head, Country Head",
                    "datasetId": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "appId": "c5533739-cb07-40a4-89ab-5c914f1993ae",
                    "createdDateTime": "2023-09-14T06:19:26.293",
                    "modifiedDateTime": "2023-09-14T06:22:18.83",
                    "originalReportObjectId": "6eda15bf-582f-4101-974f-d737c80df2a8",
                    "modifiedBy": "matthias.gessenay@org.rolandberger.com",
                    "createdBy": "matthias.gessenay@org.rolandberger.com",
                    "modifiedById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "createdById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "users": [
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "reportUserAccessRight": "ReadCopy",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                }
            ],
            "dashboards": [],
            "datasets": [
                {
                    "id": "5fab694f-fa03-4d74-a20b-d7afae9d0e2b",
                    "name": "Sales Funnel & Order Book",
                    "tables": [
                        {
                            "name": "msr v_hr_employee_job_matrix",
                            "columns": [
                                {
                                    "name": "key_date",
                                    "dataType": "DateTime",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "std_hours",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_code",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_hr_employee_job_matrix = datahub{[Schema=\"msr\",Item=\"v_hr_employee_job_matrix\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(msr_v_hr_employee_job_matrix, each Date.IsInCurrentYear([key_date]))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "rep v_hr_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "per_org",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_emp_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_full_name",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone_mobile",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "name_prefix",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_display",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nickname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_display_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_manager_level",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "gender",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "empl_class_descr",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "national_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "middle_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "maiden_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "modify_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id_ps",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "legal_entity",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Partner_count",
                                    "expression": "COUNTROWS(FILTER('rep v_hr_employee', FIND(\"Partner\", 'rep v_hr_employee'[jobcode],,0)>0))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_hr_employee = datahub{[Schema=\"rep\",Item=\"v_hr_employee\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(rep_v_hr_employee, each [ter_max_date] > #date(2022, 12, 31))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "pub dim_date",
                            "columns": [
                                {
                                    "name": "DateKey",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Day",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Weekday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekDayName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekOfYear",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "MonthName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthnumber",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ISOWeekOfYearNameInCal",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & 'pub dim_date'[WeekOfYear]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MonthNameShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "UpToCurrentMonth",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_month = MONTH(TODAY())\n    VAR result = IF('pub dim_date'[Date].[MonthNo] <= current_month, 1, 0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "QuarterNr",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Quarter",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "ActiveMonthList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[MonthNameShort] ),\n        'pub dim_date'[MonthNameShort],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDay",
                                    "expression": "TODAY()",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentWeek",
                                    "expression": "CALCULATE(\n                FIRSTNONBLANK('pub dim_date'[Calendarweek], \"\"), \n                FILTER(ALL('pub dim_date'), 'pub dim_date'[Date] = TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDayWeek",
                                    "expression": "[CurrentDay] & \" (\" & [CurrentWeek] & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentYear",
                                    "expression": "YEAR(TODAY())",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_dim_date = datahub{[Schema=\"pub\",Item=\"dim_date\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_dim_date, each Date.IsInCurrentYear([Date]) or Date.IsInPreviousYear([Date])),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"Date\", \"Day\", \"Weekday\", \"WeekDayName\", \"WeekOfYear\", \"Month\", \"MonthName\", \"Year\", \"YearMonthnumber\", \"FirstDayOfMonth\", \"YearMonthShort\", \"ISOWeekOfYearNameInCal\"}),\n    #\"Inserted First Characters\" = Table.AddColumn(#\"Removed Other Columns\", \"MonthNameShort\", each Text.Start([MonthName], 3), type text),\n    #\"Inserted Quarter\" = Table.AddColumn(#\"Inserted First Characters\", \"QuarterNr\", each Date.QuarterOfYear([Date]), type text),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Inserted Quarter\", \"Quarter\", each Text.Combine({\"Q\", Text.From([QuarterNr], \"de-DE\")}), type text),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"QuarterNr\", Int64.Type}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_total",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_previous",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_current",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "share",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_current_dax_formatted",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "DIVIDE('msr v_fc_order_income_accumulated'[order_income_current_dax], 1000)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "order_income_GROSS",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_GROSS_formatted",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "DIVIDE('msr v_fc_order_income_accumulated'[order_income_GROSS], 1000)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "industry_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_current_dax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH('msr v_fc_order_income_accumulated'[report_month_previous]) = 12, 'msr v_fc_order_income_accumulated'[order_income_total], 'msr v_fc_order_income_accumulated'[order_income_total] - 'msr v_fc_order_income_accumulated'[order_income_previous])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "rownumber",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_subplatform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "OI_Monthly",
                                    "expression": "CALCULATE(SUM('msr v_fc_order_income_accumulated'[order_income_current_dax]), MONTH('msr v_fc_order_income_accumulated'[report_month]) <= MONTH(TODAY())-1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Cumulated",
                                    "expression": "SUM('msr v_fc_order_income_accumulated'[order_income_total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD",
                                    "expression": "TOTALYTD('msr v_fc_order_income_accumulated'[OI_Monthly_for_YTD], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C",
                                    "expression": "SUM(OI_Budget_Countries[OI_Budget])\n//    var check_industry = calculate(isfiltered(platforms_industry[platform_1_name]) , allselected())\n//    var check_function = calculate(isfiltered(platforms_function[platform_1_name]) , allselected())\n//return\n//    if(check_industry || check_function, BLANK(), SUM(OI_Budget_Countries[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_C], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_PY",
                                    "expression": "CALCULATE([OI_Monthly], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_PY",
                                    "expression": "CALCULATE([OI_YTD], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_ΔBUD_C",
                                    "expression": "\n    VAR delta_BUD = DIVIDE([OI_Monthly], [OI_Monthly_BUD_C]) - 1\nRETURN\n    IF(delta_BUD < -0.9, \"\", delta_BUD)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_full_number",
                                    "expression": "[OI_YTD] * 1000",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_formatted",
                                    "expression": "DIVIDE([OI_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_PY_formatted",
                                    "expression": "DIVIDE([OI_YTD_PY], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_formatted",
                                    "expression": "DIVIDE([OI_YTD_BUD_C], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Spacer (act vs bud vs py)",
                                    "expression": "REPT(\"l\", 33)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_formatted_0.00",
                                    "expression": "DIVIDE([OI_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY",
                                    "expression": "CALCULATE([OI_Monthly], ALL('pub dim_date'[Date]), 'pub dim_date'[Year] = YEAR(TODAY())-1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_CY",
                                    "expression": "CALCULATE([OI_Monthly], 'pub dim_date'[Year] = YEAR(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_no_future",
                                    "expression": "CALCULATE([OI_Monthly_BUD_C], MONTH(OI_Budget_Countries[FirstDayOfMonth]) <= MONTH(TODAY())-1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_formatted",
                                    "expression": "DIVIDE([OI_PY], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Delta_%_PY",
                                    "expression": "([OI_Monthly] - [OI_Monthly_PY]) / [OI_Monthly_PY]",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Delta_%_BUD_C",
                                    "expression": "([OI_Monthly] - [OI_Monthly_BUD_C]) / [OI_Monthly_BUD_C]",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_no_future",
                                    "expression": "CALCULATE([OI_YTD], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY())-1)\n\n//IF(MAX('pub dim_date'[Date]) <= TODAY(), [OI_YTD], BLANK())",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_no_future_formatted",
                                    "expression": "DIVIDE([OI_YTD_no_future], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_function_operations",
                                    "expression": "CALCULATE([OI_Monthly_formatted], 'msr v_fc_order_income_accumulated'[function] = \"Operations\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_function_digital",
                                    "expression": "CALCULATE([OI_Monthly_formatted], 'msr v_fc_order_income_accumulated'[function] = \"Digital\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_function_investor_support",
                                    "expression": "CALCULATE([OI_Monthly_formatted], 'msr v_fc_order_income_accumulated'[function] = \"Investor Support\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_function_rpt",
                                    "expression": "CALCULATE([OI_Monthly_formatted], 'msr v_fc_order_income_accumulated'[function] = \"RPT\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_function_strategy_others",
                                    "expression": "CALCULATE([OI_Monthly_formatted], 'msr v_fc_order_income_accumulated'[function] = \"Strategy & Others\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_historical",
                                    "expression": "CALCULATE(SUM('msr v_fc_order_income_accumulated'[order_income_current]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY())-1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_historical_formatted",
                                    "expression": "DIVIDE([OI_YTD_historical], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_historical_2",
                                    "expression": "CALCULATE([OI_YTD], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_historical_2_formatted",
                                    "expression": "DIVIDE([OI_YTD_historical_2], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_historical_3",
                                    "expression": "CALCULATE(SUM('msr v_fc_order_income_accumulated'[order_income_current]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_industry_industrials",
                                    "expression": "CALCULATE([OI_Monthly_formatted], 'msr v_fc_order_income_accumulated'[industry] = \"Industrials\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_industry_regulated_infrastructure",
                                    "expression": "CALCULATE([OI_Monthly_formatted], 'msr v_fc_order_income_accumulated'[industry] = \"Regulated & Infrastructure\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_industry_health_consumer",
                                    "expression": "CALCULATE([OI_Monthly_formatted], 'msr v_fc_order_income_accumulated'[industry] = \"Health & Consumer\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_industry_services",
                                    "expression": "CALCULATE([OI_Monthly_formatted], 'msr v_fc_order_income_accumulated'[industry] = \"Services\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_formatted",
                                    "expression": "DIVIDE([OI_Monthly], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_C], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future_formatted",
                                    "expression": "DIVIDE([OI_YTD_BUD_C_no_future], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_no_future_formatted",
                                    "expression": "DIVIDE([OI_Monthly_BUD_C_no_future], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_formatted",
                                    "expression": "DIVIDE([OI_Monthly_BUD_C], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD",
                                    "expression": "CALCULATE([OI_Monthly], ALL('pub dim_date'[Date]), 'pub dim_date'[Year] = YEAR(TODAY())-1, 'pub dim_date'[Month] <= MONTH(TODAY())-1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P",
                                    "expression": "DIVIDE([OI_Monthly], [Partner_count])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD",
                                    "expression": "DIVIDE([OI_PY_YTD], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_test",
                                    "expression": "CALCULATE(DISTINCTCOUNT('msr v_fc_order_income_accumulated'[project_number]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_2",
                                    "expression": "CALCULATE(SUM(OI_Budget_Countries[OI_Budget]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_combined_YTD",
                                    "expression": "IF([OI_Monthly_BUD_combined_no_future] = \"\", BLANK(), DIVIDE([OI_Monthly_BUD_combined_no_future], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "order_income_GROSS_PY_formatted",
                                    "expression": "IF(SUM('msr v_fc_order_income_accumulated'[order_income_GROSS_formatted]) > 0, CALCULATE(SUM('msr v_fc_order_income_accumulated'[order_income_GROSS_formatted]), SAMEPERIODLASTYEAR('pub dim_date'[Date])), 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_absolute",
                                    "expression": "SUM('msr v_fc_order_income_accumulated'[order_income_current]) * 1000",
                                    "isHidden": false
                                },
                                {
                                    "name": "Measure 1",
                                    "expression": "\n    var check_industry = calculate(isfiltered('msr v_fc_order_income_accumulated'[industry]) , allselected())\n    var check_function = calculate(isfiltered('msr v_fc_order_income_accumulated'[function]) , allselected())\n\nreturn\n if(check_industry || check_function, BLANK(), 111)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_old",
                                    "expression": "SUM(OI_Budget_Countries[OI_Budget])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_DAX",
                                    "expression": "TOTALYTD(SUM('msr v_fc_order_income_accumulated'[order_income_current_dax]), 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_FP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_industry = calculate(isfiltered(platforms_industry[platform_1_name]) , allselected())\n    var check_subplatform_industry = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subplatform]), ALLSELECTED())\n    var check_subject_industry = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]), ALLSELECTED())\n    var check_subject_function = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]), ALLSELECTED())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_industry || check_subplatform_industry || check_subject_industry || check_subject_function, BLANK(), SUM(OI_Budget_Platforms_Function[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_IP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_function = calculate(isfiltered(platforms_function[platform_1_name]) , allselected())\n    var check_subplatform_industry = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subplatform]), ALLSELECTED())\n    var check_subject_industry = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]), ALLSELECTED())\n    var check_subject_function = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]), ALLSELECTED())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_function || check_subplatform_industry || check_subject_industry || check_subject_function, BLANK(), SUM(OI_Budget_Platforms_Industry[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_IP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_FP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_combined",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(platforms_industry[platform_1_name]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(platforms_function[platform_1_name]) , allselected()), \"F\", \"\")\n    var check_subplatform_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subplatform]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_function = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]), ALLSELECTED()), \"SF\", \"\")\n    var check_combination = check_region & check_industry & check_function & check_subplatform_industry & check_subject_industry & check_subject_function\nreturn\n    IF(check_combination = \"R\", [OI_Monthly_BUD_C_formatted], \n        IF(check_combination = \"\" || check_combination = \"I\", [OI_Monthly_BUD_IP],\n            IF(check_combination = \"F\", [OI_Monthly_BUD_FP], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_IP_no_future",
                                    "expression": "CALCULATE([OI_Monthly_BUD_IP], MONTH(OI_Budget_Platforms_Industry[FirstDayOfMonth]) <= MONTH(TODAY())-1)\n\n//IF(MAX('pub dim_date'[Date]) <= TODAY(), [OI_Monthly_BUD_IP], BLANK())",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_FP_no_future",
                                    "expression": "CALCULATE([OI_Monthly_BUD_FP], MONTH(OI_Budget_Platforms_Function[FirstDayOfMonth]) <= MONTH(TODAY())-1)\n\n//IF(MAX('pub dim_date'[Date]) <= TODAY(), [OI_Monthly_BUD_FP], BLANK())",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_combined",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(platforms_industry[platform_1_name]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(platforms_function[platform_1_name]) , allselected()), \"F\", \"\")\n    var check_subplatform_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subplatform]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_function = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]), ALLSELECTED()), \"SF\", \"\")\n    var check_combination = check_region & check_industry & check_function & check_subplatform_industry & check_subject_industry & check_subject_function\nreturn\n    IF(check_combination = \"R\", [OI_YTD_BUD_C_formatted], \n        IF(check_combination = \"\" || check_combination = \"I\", [OI_YTD_BUD_IP],\n            IF(check_combination = \"F\", [OI_YTD_BUD_FP], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_CY_formatted",
                                    "expression": "DIVIDE([OI_CY], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_combined_no_future",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(platforms_industry[platform_1_name]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(platforms_function[platform_1_name]) , allselected()), \"F\", \"\")\n    var check_subplatform_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subplatform]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_function = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]), ALLSELECTED()), \"SF\", \"\")\n    var check_combination = check_region & check_industry & check_function & check_subplatform_industry & check_subject_industry & check_subject_function\nreturn\n    IF(check_combination = \"R\", [OI_YTD_BUD_C_no_future_formatted], \n        IF(check_combination = \"\" || check_combination = \"I\", [OI_YTD_BUD_IP_no_future],\n            IF(check_combination = \"F\", [OI_YTD_BUD_FP_no_future], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_FP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_IP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_formatted",
                                    "expression": "DIVIDE([OI_per_P], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_C_YTD_formatted",
                                    "expression": "DIVIDE([OI_per_P_BUD_combined_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_per_P_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "aaa_monthly_unequal_ytd",
                                    "expression": "IF([OI_Monthly] <> CALCULATE(SUM('msr v_fc_order_income_accumulated'[order_income_total]), 'msr v_fc_order_income_accumulated'[report_month_id] = \"06.2023\"), 1, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "aaa_oi_07_2023",
                                    "expression": "CALCULATE(SUM('msr v_fc_order_income_accumulated'[order_income_total]), 'msr v_fc_order_income_accumulated'[report_month_id] = \"07.2023\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "aaa_7_but_no_6",
                                    "expression": "IF(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"07.2023\")) && NOT(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"06.2023\"))), 1, \n                    IF(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"06.2023\")) && NOT(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"05.2023\"))), 1,\n                    IF(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"05.2023\")) && NOT(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"04.2023\"))), 1,\n                    IF(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"04.2023\")) && NOT(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"03.2023\"))), 1,\n                    IF(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"03.2023\")) && NOT(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"02.2023\"))), 1,\n                    IF(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"02.2023\")) && NOT(ISBLANK(CALCULATE([aaa_sum_total], 'msr v_fc_order_income_accumulated'[report_month_id] = \"01.2023\"))), 1,\n                    0))))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "aaa_sum_total",
                                    "expression": "SUM('msr v_fc_order_income_accumulated'[order_income_total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_combined_no_future",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(platforms_industry[platform_1_name]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(platforms_function[platform_1_name]) , allselected()), \"F\", \"\")\n    var check_subplatform_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subplatform]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_function = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]), ALLSELECTED()), \"SF\", \"\")\n    var check_combination = check_region & check_industry & check_function & check_subplatform_industry & check_subject_industry & check_subject_function\nreturn\n    IF(check_combination = \"R\", [OI_Monthly_BUD_C_no_future_formatted], \n        IF(check_combination = \"\" || check_combination = \"I\", [OI_Monthly_BUD_IP_no_future],\n            IF(check_combination = \"F\", [OI_Monthly_BUD_FP_no_future], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_no_future_OLD",
                                    "expression": "IF(MAX('pub dim_date'[Date]) <= TODAY(), [OI_Monthly_BUD_C], BLANK())",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_PY_formatted",
                                    "expression": "DIVIDE([OI_Monthly_PY], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_PY_NEW",
                                    "expression": "TOTALYTD([OI_Monthly_for_YTD], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_PY_NEW_2",
                                    "expression": "CALCULATE([OI_YTD_PY_NEW], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_for_YTD",
                                    "expression": "SUM('msr v_fc_order_income_accumulated'[order_income_current_dax])",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_source\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([industry] <> \"Not assigned\")),\n    #\"Inserted Month\" = Table.AddColumn(#\"Filtered Rows\", \"Month\", each Date.Month([report_month]), Int64.Type),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Month\",{\"Month\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"report_month_previous\", each Date.AddMonths([report_month], -1), type date),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Added Custom\", \"report_month_previous_id\", each Text.AfterDelimiter(Text.From([report_month_previous], \"de-DE\"), \".\"), type text),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Inserted Text After Delimiter\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_previous_id\"}, #\"msr v_fc_order_income_accumulated_source\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_id\"}, \"msr v_fc_order_income_accumulated_source\", JoinKind.LeftOuter),\n    #\"Expanded msr v_fc_order_income_accumulated_source\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_fc_order_income_accumulated_source\", {\"order_income\"}, {\"order_income_previous\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded msr v_fc_order_income_accumulated_source\",null,0,Replacer.ReplaceValue,{\"order_income_previous\"}),\n    #\"Added Custom1\" = Table.AddColumn(#\"Replaced Value\", \"order_income_current\", each [order_income] - [order_income_previous], type number),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Custom1\",{{\"order_income\", \"order_income_total\"}}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Renamed Columns\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"industry\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"function\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"industry\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort2\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded platform_sort2\",{{\"platform_1_sort\", \"industry_sort\"}, {\"platform_1_name_short\", \"industry_name_short\"}}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Renamed Columns2\", {\"function\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Expanded platform_sort\",{{\"platform_1_sort\", \"function_sort\"}, {\"platform_1_name_short\", \"function_name_short\"}}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Renamed Columns3\", {\"project_number\", \"report_month_id\"}, #\"sec acp_orderIncome_byMonth\", {\"project_number\", \"report_month_id\"}, \"sec acp_orderIncome_byMonth\", JoinKind.LeftOuter),\n    #\"Expanded sec acp_orderIncome_byMonth\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"sec acp_orderIncome_byMonth\", {\"orderIncome\"}, {\"orderIncome\"}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded sec acp_orderIncome_byMonth\",{{\"orderIncome\", \"order_income_GROSS\"}}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Renamed Columns1\",\"Hongkong\",\"Hong Kong\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Middle East Bahr.\",\"Bahrain\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"PX America\",\"PXNorth America\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"PX Engineers\",\"PXEngineering\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"PX Partner\",\"PXPartner\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Rep. of Korea\",\"South Korea\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Singapur\",\"Singapore\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value9\",\"TMG\",\"Turnaround Management GmbH\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value10\",\"UK\",\"United Kingdom\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Merged Queries4\" = Table.NestedJoin(#\"Replaced Value11\", {\"industry_subject\"}, subplatforms_industry, {\"industry_subject\"}, \"subplatforms_industry\", JoinKind.LeftOuter),\n    #\"Expanded subplatforms_industry\" = Table.ExpandTableColumn(#\"Merged Queries4\", \"subplatforms_industry\", {\"industry_subplatform\"}, {\"industry_subplatform\"}),\n    #\"Replaced Value12\" = Table.ReplaceValue(#\"Expanded subplatforms_industry\",\"Turnaround Management GmbH\",\"TMG\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value13\" = Table.ReplaceValue(#\"Replaced Value12\",\"test12345\",\"test54321\",Replacer.ReplaceText,{\"project_number\"})\nin\n    #\"Replaced Value13\""
                                }
                            ]
                        },
                        {
                            "name": "Temp_values",
                            "columns": [
                                {
                                    "name": "Net_order_income",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Net_order_income_ΔBUD",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "expression": "405000",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Net_order_income_ΔPY",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "expression": "385000",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Net_order_income_per_P",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "expression": "6800",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Net_order_income_per_P_ΔBUD",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "expression": "6600",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Net_order_income_per_P_ΔPY",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "expression": "6900",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WMjQAAaXYWAA=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Net_order_income = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Net_order_income\", Int64.Type}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "Refresh_Timestamp",
                            "columns": [
                                {
                                    "name": "UTC timestamp",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Local timestamp with offset",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Last_refresh_local",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & WEEKNUM(Refresh_Timestamp[Last_refresh_local])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    StandardOffset = #duration(0, 1, 0, 0),\n    DaylightSavingTimeOffset = #duration(0, 2, 0, 0),\n\n    // get start and end of daylight saving time\n    // this code implements the rules of EU counties\n    // if it doesn't fill your expectations, visit https://en.wikipedia.org/wiki/Daylight_saving_time_by_country and implement your own function\n    fnDaylightSavingTimePeriod = (\n        now as datetime\n    ) as record => \n        let\n            // the daylight saving time starts on the last Sunday of March at 1am UTC\n            LastDayOfMarch = #date(Date.Year(now), 3, 31),\n            StartOfDaylightSavingTime = Date.AddDays(LastDayOfMarch, -Date.DayOfWeek(LastDayOfMarch)) & #time(1, 0, 0),\n            // the daylight saving time ends on the last Sunday in October at 1am UTC\n            LastDayOfOctober = #date(Date.Year(now), 10, 31),\n            EndOfDaylightSavingTime = Date.AddDays(LastDayOfOctober, -Date.DayOfWeek(LastDayOfOctober)) & #time(1, 0, 0)\n        in\n            [From = StartOfDaylightSavingTime, To = EndOfDaylightSavingTime],\n\n    // get a timestamp in UTC (with offset 00:00 all year long)\n    UtcNow = DateTimeZone.UtcNow(),\n    // convert UTC datetime with offset to datetime\n    UtcNowWithoutZone = DateTimeZone.RemoveZone(UtcNow),\n\n    // get daylight saving time period\n    DaylightSavingTimePeriod = fnDaylightSavingTimePeriod(UtcNowWithoutZone),\n\n    // convert UTC time to the local time with respect to current offset\n    LocalTimeWithOffset = \n        if UtcNowWithoutZone >= DaylightSavingTimePeriod[From] and UtcNowWithoutZone <= DaylightSavingTimePeriod[To] then\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(DaylightSavingTimeOffset), \n                Duration.Minutes(DaylightSavingTimeOffset)\n            )\n        else\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(StandardOffset), \n                Duration.Minutes(StandardOffset)\n            ),\n    \n    // current date time without offset\n    LocalTime = DateTimeZone.RemoveZone(LocalTimeWithOffset),\n\n    // result table\n    Result = #table(\n        type table\n        [\n            #\"UTC timestamp\" = datetime, \n            #\"UTC date\" = date,\n            #\"Local timestamp with offset\" = datetimezone,\n            #\"Local timestamp without offset\" = datetime\n        ], \n        {\n            {\n            UtcNowWithoutZone,\n            DateTime.Date(UtcNowWithoutZone),\n            LocalTimeWithOffset,\n            LocalTime\n            }\n        }\n    ),\n    #\"Inserted Date\" = Table.AddColumn(Result, \"Last_refresh_local\", each DateTime.Date([Local timestamp without offset]), type date),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Date\",{\"UTC date\", \"Local timestamp without offset\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "Temp_values_slicer",
                            "columns": [
                                {
                                    "name": "Peergroup_Comparison_Slicer",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Sort",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45Wcs4vzSspqlQoy0wtV9JRMlSK1YlWCshJLEnLL8qFiRpBRIvys1KTS2CCxmBBx6RiBX9PINcEzPX3VChILVIIAAqYggXOTXEKdVEFcs2g3IBIEM9cKTYWAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Peergroup_Comparison_Slicer = _t, Sort = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Peergroup_Comparison_Slicer\", type text}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Countries",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "RLS_country",
                                    "expression": "IF(SUM(RLS_active_role[role_id])=3, TRUE(), FALSE())",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Countries\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\", 6),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 29),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Bottom Rows\", {\"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\", \"Column17\", \"Column18\", \"Column19\", \"Column20\", \"Column21\", \"Column22\", \"Column23\", \"Column24\", \"Column25\", \"Column26\", \"Column27\", \"Column28\", \"Column29\", \"Column30\", \"Column31\", \"Column32\", \"Column33\", \"Column34\", \"Column35\", \"Column36\", \"Column37\", \"Column38\", \"Column39\", \"Column40\", \"Column41\", \"Column42\", \"Column43\", \"Column44\", \"Column45\", \"Column46\", \"Column47\", \"Column48\", \"Column49\", \"Column50\", \"Column51\", \"Column52\", \"Column53\", \"Column54\", \"Column55\", \"Column56\", \"Column57\", \"Column58\", \"Column59\", \"Column60\", \"Column61\", \"Column62\"}),\n    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> \"\")),\n    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Other Columns\", each not List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_)))),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Blank Rows\", [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", type number}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type number}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", type number}, {\"SEA\", type number}, {\"IDN\", type number}, {\"MMR\", type number}, {\"MYS\", type number}, {\"SGP\", type number}, {\"THA\", type number}, {\"VNM\", type number}, {\"Asia\", type number}, {\"Polarix\", type number}, {\"PX Partner\", type number}, {\"PX Engineers\", type number}, {\"PX America\", type number}, {\"TMG\", type number}, {\"Other RB companies\", type number}, {\"Subtotal\", type number}, {\"HOL\", type number}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"Country\", \"Period\"}, {\"Column60\", \"Global Adjustment\"}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"BHR/KSA/UAE\", \"OLD CHE\", \"EMEA\", \"Americas\", \"CHN_1\", \"HKG\", \"Asia\", \"Other RB companies\", \"Subtotal\", \"HOL\", \"Subtotal_2\", \"Total\", \"ME\", \"SEA\", \"DACH\"}),\n    #\"Removed Bottom Rows1\" = Table.RemoveLastN(#\"Removed Columns\",1),\n    #\"Added Year\" = Table.AddColumn(#\"Removed Bottom Rows1\", \"Year\", each Text.BeforeDelimiter([Period], \"_\"), type text),\n    #\"Added MonthName\" = Table.AddColumn(#\"Added Year\", \"MonthName\", each Text.BetweenDelimiters([Period], \"_\", \"_\", 1, 0), type text),\n    #\"Added Month\" = Table.AddColumn(#\"Added MonthName\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Added Month\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type1\",{\"Period\", \"Year\", \"MonthName\", \"Month\"}),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Removed Columns1\", {\"FirstDayOfMonth\"}, \"Attribute\", \"Value\"),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Unpivoted Other Columns\",{{\"Attribute\", \"Country\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",\"GER\",\"DEU\",Replacer.ReplaceText,{\"Country\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"UK\",\"GBR\",Replacer.ReplaceValue,{\"Country\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"UAE\",\"ARE\",Replacer.ReplaceText,{\"Country\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value2\",\"MOR\",\"MAR\",Replacer.ReplaceText,{\"Country\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"KSA\",\"SAU\",Replacer.ReplaceText,{\"Country\"}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"NOR\",\"SWE\",Replacer.ReplaceText,{\"Country\"})\nin\n    #\"Replaced Value5\""
                                }
                            ]
                        },
                        {
                            "name": "pub v_ll_company_to_region",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mapping_budget",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF('pub v_ll_company_to_region'[company] = \"RB Int\", \"Global Adjustment\", IF('pub v_ll_company_to_region'[region_reporting_level1] IN {\"Non-operational companies\", \"Other RB companies\", \"Holding\"}, BLANK(), 'pub v_ll_company_to_region'[country_code_iso3]))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    pub_v_ll_company_to_region = Source{[Schema=\"pub\",Item=\"v_ll_company_to_region\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_v_ll_company_to_region, each ([company_id] <> \"77\")),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows\",\"polariXpartner\",\"PXPartner\",Replacer.ReplaceText,{\"region_reporting_level3\"}),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Replaced Value\", \"region_reporting_level1_sort\", each if [region_reporting_level1] = \"EMEA\" then 1 else if [region_reporting_level1] = \"Non-operational companies\" then 6 else if [region_reporting_level1] = \"Holding\" then 5 else if [region_reporting_level1] = \"Other RB companies\" then 4 else if [region_reporting_level1] = \"Americas\" then 2 else if [region_reporting_level1] = \"Asia\" then 3 else if [region_reporting_level1] = \"RUS\" then 7 else null, type number)\nin\n    #\"Added Conditional Column\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_project_data",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_client",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_planned_start",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_planned_end",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_closedate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dm_cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dm_cc",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dm_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "delivery_manager",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pm_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_manager",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_accounting_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_accounting",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_master",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_unit_cou_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_unit_cou_country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "source",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_order_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_unit_cou_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_unit_cou",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "has_success_fee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_unit_byd_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_client_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(CONTAINSSTRING('msr v_fc_project_data'[project_client], \"Roland Berger\"), LOOKUPVALUE('pub v_ll_company_to_region'[region_reporting_level3], 'pub v_ll_company_to_region'[org_unit_id], 'msr v_fc_project_data'[responsible_unit_byd_id]), 'msr v_fc_project_data'[project_client])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "delivery_manager_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    msr_v_fc_project_data = Source{[Schema=\"msr\",Item=\"v_fc_project_data\"]}[Data],\n    #\"Added Custom Column\" = Table.AddColumn(msr_v_fc_project_data, \"delivery_manager_short\", each let splitdeliverymanager = Splitter.SplitTextByDelimiter(\" \", QuoteStyle.None)([delivery_manager]), splitdeliverymanager2 = Splitter.SplitTextByDelimiter(\", \", QuoteStyle.None)([delivery_manager]) in Text.Combine({splitdeliverymanager{0}?, \" \", Text.Start(splitdeliverymanager2{1}?, 1), \".\"}), type text),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Added Custom Column\",\".\",\"\",Replacer.ReplaceText,{\"delivery_manager_short\"})\nin\n    #\"Replaced Value\""
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Function",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Platforms\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\",3),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 17),\n    #\"Removed Alternate Rows\" = Table.AlternateRows(#\"Removed Bottom Rows\",2,1,1),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Alternate Rows\", each ([Column2] <> \"Total\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Column2\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\"}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Other Columns\", [PromoteAllScalars=true]),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Promoted Headers\", {\"[EUR m]\"}, \"Attribute\", \"Value\"),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Unpivoted Other Columns\",{{\"Value\", type number}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"[EUR m]\", \"Platform\"}, {\"Attribute\", \"MonthName\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Year\", each 2023, Int64.Type),\n    #\"Added Month\" = Table.AddColumn(#\"Added Custom\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Added Month\",{{\"Year\", type text}, {\"Month\", type text}}),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Changed Type1\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Changed Type2\",{\"FirstDayOfMonth\", \"Platform\", \"MonthName\", \"OI_Budget\", \"Year\", \"Month\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Reordered Columns\",{\"MonthName\", \"Year\", \"Month\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Removed Columns\", each ([Platform] <> \"Health & Consumer\" and [Platform] <> \"Industrials\" and [Platform] <> \"Regulated & Infrastructure\" and [Platform] <> \"Services\"))\nin\n    #\"Filtered Rows1\""
                                }
                            ]
                        },
                        {
                            "name": "sec acp_orderIncome_byMonth",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "orderIncome",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "orderIncome_formatted",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "DIVIDE('sec acp_orderIncome_byMonth'[orderIncome], 1000)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_acp_orderIncome_byMonth = Source{[Schema=\"msr\",Item=\"v_fc_order_income_byMonth\"]}[Data],\n    #\"Added Custom Column\" = Table.AddColumn(sec_acp_orderIncome_byMonth, \"report_month_id\", each Text.Combine({Text.PadStart(Text.From([month], \"de-DE\"), 2, \"0\"), \".\", Text.From([year], \"de-DE\")}), type text),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Added Custom Column\", \"report_month\", each Text.Combine({\"01.\", [report_month_id]}), type text),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"report_month\", type date}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_region",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_region = Source{[Schema=\"rep\",Item=\"v_ll_head_region\"]}[Data]\nin\n    rep_v_ll_head_region"
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform_DACH_industry",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform_DACH = Source{[Schema=\"rep\",Item=\"v_ll_head_platform_DACH\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(rep_v_ll_head_platform_DACH, each ([platform] = \"Health & Consumer\" or [platform] = \"Industrials\" or [platform] = \"Regulated & Infrastructure\" or [platform] = \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform_industry",
                            "columns": [
                                {
                                    "name": "platform_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform = Source{[Schema=\"rep\",Item=\"v_ll_head_platform\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(rep_v_ll_head_platform, each ([platform_name] = \"Health & Consumer\" or [platform_name] = \"Industrials\" or [platform_name] = \"Regulated & Infrastructure\" or [platform_name] = \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_country",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_country = Source{[Schema=\"rep\",Item=\"v_ll_head_country\"]}[Data],\n    #\"Renamed Columns\" = Table.RenameColumns(rep_v_ll_head_country,{{\"emp_id_head\", \"emp_id\"}, {\"email_head\", \"email\"}})\nin\n    #\"Renamed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_order_income_budget_orgunit",
                            "columns": [
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_budget",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    msr_v_fc_order_income_budget_orgunit = Source{[Schema=\"msr\",Item=\"v_fc_order_income_budget_orgunit\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(msr_v_fc_order_income_budget_orgunit, each true)\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_order_income_budget_platform",
                            "columns": [
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_budget",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "test",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "expression": "DIVIDE('msr v_fc_order_income_budget_platform'[order_income_budget], 10000)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    msr_v_fc_order_income_budget_platform = Source{[Schema=\"msr\",Item=\"v_fc_order_income_budget_platform\"]}[Data]\nin\n    msr_v_fc_order_income_budget_platform"
                                }
                            ]
                        },
                        {
                            "name": "RLS_active_role",
                            "columns": [
                                {
                                    "name": "role_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "role_id",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_mapping",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_mapping",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "active_role",
                                    "expression": "SUM(RLS_active_role[role_id])",
                                    "isHidden": true
                                }
                            ],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45Wyk1R0lEyBGIQitWJVipKTc/MzwPyjCCCKal5mcV6KakF+aUVDkX5OYl5KUmpRempRXrJ+blgHcn5pXklRZVAtcYE1UMtKchJLEnLLwLxTZDshgnHpyQmZwAFTZHkshNBqs1gIrEA\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [role_name = _t, role_id = _t, country_mapping = _t, region_mapping = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"role_name\", type text}, {\"role_id\", Int64.Type}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Industry",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Platforms\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\",3),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 17),\n    #\"Removed Alternate Rows\" = Table.AlternateRows(#\"Removed Bottom Rows\",2,1,1),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Alternate Rows\", each ([Column2] <> \"Total\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Column2\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\"}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Other Columns\", [PromoteAllScalars=true]),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Promoted Headers\", {\"[EUR m]\"}, \"Attribute\", \"Value\"),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Unpivoted Other Columns\",{{\"Value\", type number}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"[EUR m]\", \"Platform\"}, {\"Attribute\", \"MonthName\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Year\", each 2023, Int64.Type),\n    #\"Added Month\" = Table.AddColumn(#\"Added Custom\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Added Month\",{{\"Year\", type text}, {\"Month\", type text}}),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Changed Type1\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Changed Type2\",{\"FirstDayOfMonth\", \"Platform\", \"MonthName\", \"OI_Budget\", \"Year\", \"Month\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Reordered Columns\",{\"MonthName\", \"Year\", \"Month\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Removed Columns\", each ([Platform] = \"Health & Consumer\" or [Platform] = \"Industrials\" or [Platform] = \"Regulated & Infrastructure\" or [Platform] = \"Services\"))\nin\n    #\"Filtered Rows1\""
                                }
                            ]
                        },
                        {
                            "name": "platforms_industry",
                            "columns": [
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}, {\"platform_1_name_short\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([platform_1_name] = \"Health & Consumer\" or [platform_1_name] = \"Industrials\" or [platform_1_name] = \"Regulated & Infrastructure\" or [platform_1_name] = \"Services\")),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Filtered Rows\", {\"platform_1_name\"})\nin\n    #\"Removed Duplicates\""
                                }
                            ]
                        },
                        {
                            "name": "platforms_function",
                            "columns": [
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}, {\"platform_1_name_short\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([platform_1_name] = \"Digital\" or [platform_1_name] = \"Investor Support\" or [platform_1_name] = \"Operations\" or [platform_1_name] = \"RPT\" or [platform_1_name] = \"Strategy & Others\")),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Filtered Rows\", {\"platform_1_name\"})\nin\n    #\"Removed Duplicates\""
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform_DACH_function",
                            "columns": [
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform_DACH = Source{[Schema=\"rep\",Item=\"v_ll_head_platform_DACH\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(rep_v_ll_head_platform_DACH, each ([platform] = \"Digital\" or [platform] = \"Investor Support\" or [platform] = \"Operations\" or [platform] = \"RPT\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform_function",
                            "columns": [
                                {
                                    "name": "platform_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform = Source{[Schema=\"rep\",Item=\"v_ll_head_platform\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(rep_v_ll_head_platform, each ([platform_name] <> \"Health & Consumer\" and [platform_name] <> \"Industrials\" and [platform_name] <> \"Regulated & Infrastructure\" and [platform_name] <> \"Services\")),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows\",\"General\",\"Strategy & Others\",Replacer.ReplaceText,{\"platform_name\"})\nin\n    #\"Replaced Value\""
                                }
                            ]
                        },
                        {
                            "name": "rep v_II_head_region_country",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.Combine({#\"rep v_ll_head_region\", #\"rep v_ll_head_country\"}),\n    #\"Filtered Rows\" = Table.SelectRows(Source, each true)\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "nxtgn_opportunityregistrations",
                            "columns": [
                                {
                                    "name": "nxtgn_opportunityregistrationid",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "_nxtgn_accountid_value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "_nxtgn_keyaccount_value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_topic",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_salesteam_concatinate",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "statuscode",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_estrevenue",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_probability",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_estclosedate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_deliverystartdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_actualclosedate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_clusterexpertteams_calc",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "_nxtgn_sectorsapid_value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "_transactioncurrencyid_value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_innovationtopics",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_deliveryenddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_multiplesapplatformid",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_multiplesapfunctionid",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "_nxtgn_salesunitid_value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_IndustryCCId.new_code_string_industrycc",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_SectorSAPId.nxtgn_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_FunctionCCId.new_code_string",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_ThemeSAPId.nxtgn_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "createdon",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_IndustryCCId.nxtgn_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_FunctionCCId.nxtgn_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Industry Platform (Datahub)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Functional Platform (Datahub)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "estrevenue_base",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "nxtgn_opportunityregistrations[nxtgn_estrevenue] / RELATED(transactioncurrencies[exchangerate])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "nxtgn_SectorSAPId.nxtgn_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_ThemeSAPId.nxtgn_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OData.Feed(\"https://rolandberger.crm4.dynamics.com/api/data/v9.1\", null, [Implementation=\"2.0\"]),\n    nxtgn_opportunityregistrations_table = Source{[Name=\"nxtgn_opportunityregistrations\",Signature=\"table\"]}[Data],\n    #\"Removed Other Columns\" = Table.SelectColumns(nxtgn_opportunityregistrations_table,{\"nxtgn_probability\", \"nxtgn_salesteam_concatinate\", \"createdon\", \"nxtgn_deliverystartdate\", \"nxtgn_actualclosedate\", \"_nxtgn_accountid_value\", \"_nxtgn_keyaccount_value\", \"nxtgn_clusterexpertteams_calc\", \"_nxtgn_sectorsapid_value\", \"nxtgn_opportunityregistrationid\", \"_transactioncurrencyid_value\", \"nxtgn_topic\", \"nxtgn_innovationtopics\", \"nxtgn_deliveryenddate\", \"statuscode\", \"nxtgn_estclosedate\", \"nxtgn_multiplesapplatformid\", \"nxtgn_multiplesapfunctionid\", \"nxtgn_estrevenue\", \"_nxtgn_salesunitid_value\", \"nxtgn_FunctionCCId\", \"nxtgn_IndustryCCId\", \"nxtgn_ThemeSAPId\", \"nxtgn_SectorSAPId\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Removed Other Columns\",{\"nxtgn_opportunityregistrationid\", \"_nxtgn_accountid_value\", \"_nxtgn_keyaccount_value\", \"nxtgn_topic\", \"nxtgn_salesteam_concatinate\", \"statuscode\", \"nxtgn_estrevenue\", \"nxtgn_probability\", \"nxtgn_estclosedate\", \"nxtgn_deliverystartdate\", \"nxtgn_actualclosedate\", \"nxtgn_clusterexpertteams_calc\", \"_nxtgn_sectorsapid_value\", \"_transactioncurrencyid_value\", \"nxtgn_innovationtopics\", \"nxtgn_deliveryenddate\", \"nxtgn_multiplesapplatformid\", \"nxtgn_multiplesapfunctionid\", \"_nxtgn_salesunitid_value\", \"nxtgn_IndustryCCId\", \"nxtgn_SectorSAPId\", \"nxtgn_FunctionCCId\", \"nxtgn_ThemeSAPId\", \"createdon\"}),\n    #\"Expanded nxtgn_IndustryCCId\" = Table.ExpandRecordColumn(#\"Reordered Columns\", \"nxtgn_IndustryCCId\", {\"new_code_string_industrycc\", \"nxtgn_name\"}, {\"nxtgn_IndustryCCId.new_code_string_industrycc\", \"nxtgn_IndustryCCId.nxtgn_name\"}),\n    #\"Expanded nxtgn_SectorSAPId\" = Table.ExpandRecordColumn(#\"Expanded nxtgn_IndustryCCId\", \"nxtgn_SectorSAPId\", {\"nxtgn_name\", \"nxtgn_code\"}, {\"nxtgn_SectorSAPId.nxtgn_name\", \"nxtgn_SectorSAPId.nxtgn_code\"}),\n    #\"Expanded nxtgn_FunctionCCId\" = Table.ExpandRecordColumn(#\"Expanded nxtgn_SectorSAPId\", \"nxtgn_FunctionCCId\", {\"nxtgn_name\", \"new_code_string\"}, {\"nxtgn_FunctionCCId.nxtgn_name\", \"nxtgn_FunctionCCId.new_code_string\"}),\n    #\"Expanded nxtgn_ThemeSAPId\" = Table.ExpandRecordColumn(#\"Expanded nxtgn_FunctionCCId\", \"nxtgn_ThemeSAPId\", {\"nxtgn_name\", \"nxtgn_code\"}, {\"nxtgn_ThemeSAPId.nxtgn_name\", \"nxtgn_ThemeSAPId.nxtgn_code\"}),\n    #\"Inserted Text Before Delimiter\" = Table.AddColumn(#\"Expanded nxtgn_ThemeSAPId\", \"Industry Platform (Datahub)\", each Text.BeforeDelimiter([nxtgn_IndustryCCId.nxtgn_name], \" (\"), type text),\n    #\"Inserted Text Before Delimiter1\" = Table.AddColumn(#\"Inserted Text Before Delimiter\", \"Functional Platform (Datahub)\", each Text.BeforeDelimiter([nxtgn_FunctionCCId.nxtgn_name], \" (\"), type text)\nin\n    #\"Inserted Text Before Delimiter1\""
                                }
                            ]
                        },
                        {
                            "name": "nxtgn_shareofwallets",
                            "columns": [
                                {
                                    "name": "_nxtgn_salesleadid_value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_shareofwalletid",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_rblegalunit",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_rblegalunitccid",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nxtgn_countrypercentage",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "expected_order_income",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "nxtgn_shareofwallets[nxtgn_countrypercentage] * 0.01 * RELATED(nxtgn_opportunityregistrations[estrevenue_base])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "weighted_order_income",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED(nxtgn_opportunityregistrations[nxtgn_probability]) * 0.01 * nxtgn_shareofwallets[expected_order_income]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Weighted Forecast Calculated",
                                    "expression": "CALCULATE(\n    SUM(nxtgn_shareofwallets[weighted_order_income]), \n    FILTER(\n        nxtgn_opportunityregistrations, \n        AND(\n            nxtgn_opportunityregistrations[statuscode] in {204030004, 204030000},\n            AND(\n                IF(\n                    ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]),\n                    nxtgn_opportunityregistrations[nxtgn_SectorSAPId.nxtgn_name] in ALLSELECTED('msr v_fc_order_income_accumulated'[industry_subject]),\n                    TRUE()\n                ),\n                IF(\n                    ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]),\n                    nxtgn_opportunityregistrations[nxtgn_ThemeSAPId.nxtgn_name] in ALLSELECTED('msr v_fc_order_income_accumulated'[function_subject]),\n                    TRUE()\n                )\n            )\n        )\n    )\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Weighted Forecast Formatted",
                                    "expression": "[Weighted Forecast Calculated] * 0.001 * 0.001",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OData.Feed(\"https://rolandberger.crm4.dynamics.com/api/data/v9.1\", null, [Implementation=\"2.0\"]),\n    nxtgn_shareofwallets_table = Source{[Name=\"nxtgn_shareofwallets\",Signature=\"table\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(nxtgn_shareofwallets_table, each ([nxtgn_iscountry] = true)),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"nxtgn_rblegalunit\", \"_nxtgn_salesleadid_value\", \"nxtgn_shareofwalletid\", \"nxtgn_countrypercentage\", \"nxtgn_rblegalunitccid\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Removed Other Columns\",{\"_nxtgn_salesleadid_value\", \"nxtgn_shareofwalletid\", \"nxtgn_rblegalunit\", \"nxtgn_rblegalunitccid\", \"nxtgn_countrypercentage\"})\nin\n    #\"Reordered Columns\""
                                }
                            ]
                        },
                        {
                            "name": "transactioncurrencies",
                            "columns": [
                                {
                                    "name": "transactioncurrencyid",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "isocurrencycode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "currencyname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "currencysymbol",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "exchangerate",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OData.Feed(\"https://rolandberger.crm4.dynamics.com/api/data/v9.1\", null, [Implementation=\"2.0\"]),\n    transactioncurrencies_table = Source{[Name=\"transactioncurrencies\",Signature=\"table\"]}[Data],\n    #\"Removed Other Columns\" = Table.SelectColumns(transactioncurrencies_table,{\"isocurrencycode\", \"currencyname\", \"exchangerate\", \"currencysymbol\", \"transactioncurrencyid\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Removed Other Columns\",{\"transactioncurrencyid\", \"isocurrencycode\", \"currencyname\", \"currencysymbol\", \"exchangerate\"})\nin\n    #\"Reordered Columns\""
                                }
                            ]
                        },
                        {
                            "name": "Top Clients/Projects/DMs",
                            "columns": [
                                {
                                    "name": "Top Clients/Projects/DMs",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Top Clients/Projects/DMs Felder",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Top Clients/Projects/DMs Reihenfolge",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'Top Clients/Projects/DMs'[Top Clients/Projects/DMs]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Chart Title Gross",
                                    "expression": "SELECTEDVALUE('Top Clients/Projects/DMs'[Name]) & \" (gross)\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Chart Title Net",
                                    "expression": "SELECTEDVALUE('Top Clients/Projects/DMs'[Name]) & \" (net)\"",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Top clients\", NAMEOF('msr v_fc_project_data'[project_client_short]), 0),\n    (\"Top projects\", NAMEOF('msr v_fc_order_income_accumulated'[project_name]), 1),\n    (\"Top DMs\", NAMEOF('msr v_fc_project_data'[delivery_manager_short]), 2)\n}"
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "Order_Income_PY",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Previous%20Year%20(2022).xlsx\"), null, true),\n    Order_Income_PY_Table = Source{[Item=\"Order_Income_PY\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(Order_Income_PY_Table,{{\"report_month\", type date}, {\"order_income_current\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "msr v_byd_daily_rates",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_byd_daily_rates = datahub{[Schema=\"msr\",Item=\"v_byd_daily_rates\"]}[Data]\nin\n    msr_v_byd_daily_rates"
                        },
                        {
                            "name": "platform_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}, {\"platform_1_name_short\", type text}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_adj (2)",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    msr_v_fc_order_income_accumulated_adj = Source{[Schema=\"msr\",Item=\"v_fc_order_income_accumulated_adj\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(msr_v_fc_order_income_accumulated_adj, each [order_income] < 0),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows\",{\"order_income\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"order_income\", each 0, type number),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"project_number\", \"project_name\", \"industry\", \"industry_subject\", \"function\", \"function_subject\", \"value\", \"project_startdate\", \"project_enddate\", \"order_income\", \"report_month\", \"company_name\", \"share\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Reordered Columns\", each ([project_number] = \"ICP7644\"))\nin\n    #\"Filtered Rows1\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_source",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_fc_order_income_accumulated = datahub{[Schema=\"msr\",Item=\"v_fc_order_income_accumulated\"]}[Data],\n    #\"Appended Query\" = Table.Combine({msr_v_fc_order_income_accumulated, #\"msr v_fc_order_income_accumulated_adj\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Appended Query\", \"report_month_id\", each Text.AfterDelimiter(Text.From([report_month], \"de-DE\"), \".\"), type text),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Inserted Text After Delimiter\",null,0,Replacer.ReplaceValue,{\"order_income\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_adj",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    msr_v_fc_order_income_accumulated_adj = Source{[Schema=\"msr\",Item=\"v_fc_order_income_accumulated_adj\"]}[Data],\n    #\"Sorted Rows\" = Table.Sort(msr_v_fc_order_income_accumulated_adj,{{\"project_number\", Order.Ascending}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [order_income] < 0),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows\",{\"order_income\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"order_income\", each 0, type number),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"rownumber\", \"project_number\", \"project_name\", \"industry\", \"industry_subject\", \"function\", \"function_subject\", \"value\", \"project_startdate\", \"project_enddate\", \"order_income\", \"report_month\", \"company_name\", \"share\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "subplatforms_industry",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports/Shared%20Documents/General/Master%20Data/2023-08-22_Subplatforms.xlsx\"), null, true),\n    industry_subplatform_Table = Source{[Item=\"industry_subplatform\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(industry_subplatform_Table,{{\"industry\", type text}, {\"industry_subject\", type text}, {\"industry_sort\", Int64.Type}, {\"industry_subject_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        }
                    ],
                    "roles": [
                        {
                            "name": "Admin",
                            "modelPermission": "Read"
                        },
                        {
                            "name": "RLS restricted",
                            "modelPermission": "Read",
                            "members": [
                                {
                                    "memberName": "Felix.Hubmann@rolandberger.com",
                                    "memberId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "lars.krueger@rolandberger.com",
                                    "memberId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sascha.schuster@rolandberger.com",
                                    "memberId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "vivien.graf@rolandberger.com",
                                    "memberId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Matthias.Rueckriegel@rolandberger.com",
                                    "memberId": "68201354-f954-42e0-8518-86f1323829b0",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "michael.mueller@rolandberger.com",
                                    "memberId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "michael.gold@rolandberger.com",
                                    "memberId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "florian.welte@rolandberger.com",
                                    "memberId": "5284d013-644a-48d2-b93b-0d37177c5993",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "juliane.schuetze@rolandberger.com",
                                    "memberId": "79279619-938b-4ece-8526-e640e3d90c5c",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "till.friedel@rolandberger.com",
                                    "memberId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "chris.breitenfeld@rolandberger.com",
                                    "memberId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "willi.viefers@org.rolandberger.com",
                                    "memberId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Fang.Qian@rolandberger.com",
                                    "memberId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "brandon.smith@rolandberger.com",
                                    "memberId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "peiling.ng@rolandberger.com",
                                    "memberId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "juergen.stubert@rolandberger.com",
                                    "memberId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sebastian.weber2@rolandberger.com",
                                    "memberId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "adalberto.brinez@rolandberger.com",
                                    "memberId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "lion.barone@rolandberger.com",
                                    "memberId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                }
                            ],
                            "tablePermissions": [
                                {
                                    "name": "rep v_ll_head_platform_industry",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_ll_head_platform_DACH_industry",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_ll_head_platform_DACH_function",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_ll_head_platform_function",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_II_head_region_country",
                                    "filterExpression": "[email] = username()"
                                }
                            ]
                        }
                    ],
                    "configuredBy": "matthias.gessenay@org.rolandberger.com",
                    "configuredById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "isEffectiveIdentityRequired": true,
                    "isEffectiveIdentityRolesRequired": true,
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-08-25T02:01:56.843",
                    "contentProviderType": "PbixInImportMode",
                    "datasourceUsages": [
                        {
                            "datasourceInstanceId": "946ea439-62e4-4715-b0ef-ccbeadf8383d"
                        },
                        {
                            "datasourceInstanceId": "2201b887-267a-420e-8fcb-eb0ddd824d37"
                        },
                        {
                            "datasourceInstanceId": "a00f9229-1b18-4574-9723-2a588b5c3162"
                        },
                        {
                            "datasourceInstanceId": "910b4c18-09ce-47b5-b0a8-0da232572ada"
                        },
                        {
                            "datasourceInstanceId": "9fbc6fc2-1774-4c3e-bd82-9e86586a6e47"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "8a698f63-ba8b-4d74-988d-dd57cd5b1643",
                    "name": "Capacity & Utilization",
                    "tables": [
                        {
                            "name": "msr v_employee_utilization",
                            "columns": [
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "absence_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "training_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_public_holiday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_weekend",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TA: Vacation & other leave",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[vacation_hours] + 'msr v_employee_utilization'[leave_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "TA: Target hours adj.",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[target_hours] - 'msr v_employee_utilization'[TA: Vacation & other leave] - 'msr v_employee_utilization'[training_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "booked_hours",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[absence_hours] + 'msr v_employee_utilization'[training_hours] + 'msr v_employee_utilization'[productive_hours_utilization]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "acq_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Utilization % Day",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nif('msr v_employee_utilization'[target_hours] = 0 && 'msr v_employee_utilization'[productive_hours_utilization] > 0, 8,\nDIVIDE('msr v_employee_utilization'[productive_hours_utilization], 'msr v_employee_utilization'[target_hours],0))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Utilization_target_hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %",
                                    "expression": "\nDIVIDE(\n\t[Utilization_hours_on_client_project],\n\t[Utilization_target_hours]\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target",
                                    "expression": "0.8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance",
                                    "expression": "'msr v_employee_utilization'[Utilization %] - 'msr v_employee_utilization'[Utilization Target]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance String",
                                    "expression": "\"(\" & 'msr v_employee_utilization'[Utilization Performance Short] & \"ppt.)\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance Short",
                                    "expression": "FIXED('msr v_employee_utilization'[Utilization Performance] * 100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target String",
                                    "expression": "\"Target: \" & 'msr v_employee_utilization'[Utilization Target] * 100 & \"%\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target & Performance",
                                    "expression": "[Utilization Target String] & \" \" & [Utilization Performance String]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % CY",
                                    "expression": "\nvar productive_hours_utilization = CALCULATE(SUM('msr v_employee_utilization'[productive_hours_utilization]), DATESYTD('pub dim_date'[Date]))\n \n Return\n    productive_hours_utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute_2",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %_2",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, BLANK(), utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (all vs th)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[booked_hours]), SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (prod+ill vs adj.)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[productive_hours_utilization])+SUM('msr v_employee_utilization'[illness_hours]), SUM('msr v_employee_utilization'[TA: Target hours adj.]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "TA: Target hours adj. Total",
                                    "expression": "SUM('msr v_employee_utilization'[TA: Target hours adj.])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (reported)",
                                    "expression": "DIVIDE([Hours_reported], [TA: Target hours adj. Total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness",
                                    "expression": "SUM('msr v_employee_utilization'[illness_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge",
                                    "expression": "[Utilization_hours_illness] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal",
                                    "expression": "SUM('msr v_employee_utilization'[inp_project_hours_adj])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge",
                                    "expression": "[Utilization_hours_internal] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq",
                                    "expression": "SUM('msr v_employee_utilization'[acq_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge",
                                    "expression": "[Utilization_hours_acq] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training",
                                    "expression": "SUM('msr v_employee_utilization'[training_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge",
                                    "expression": "[Utilization_hours_training] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave",
                                    "expression": "SUM('msr v_employee_utilization'[vacation_hours]) + SUM('msr v_employee_utilization'[leave_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion",
                                    "expression": "\n    IF(ISBLANK(VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)), 0, (VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % PY",
                                    "expression": "CALCULATE([Utilization %_2], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted",
                                    "expression": "\n    VAR number_decimal = DIVIDE([Utilization_target_hours], 1000)\n    VAR number_whole = FIXED(number_decimal, 0)\nRETURN\n    number_whole & \"k h\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted_2",
                                    "expression": "[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge_formatted",
                                    "expression": "[Utilization_hours_vacation_leave_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization_formatted",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge_formatted",
                                    "expression": "[Utilization_hours_training_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge_formatted",
                                    "expression": "[Utilization_hours_illness_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge_formatted",
                                    "expression": "[Utilization_hours_internal_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge_formatted",
                                    "expression": "[Utilization_hours_acq_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project_formatted",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-4)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "start_3_month",
                                    "expression": "EOMONTH(TODAY(),-4)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M_test",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n        MIN('pub dim_date'[Date]),\n        FILTER(\n            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month))\nRETURN\n    utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_12M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_txt",
                                    "expression": "\"L12M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_12M], \"0%\") & \"  |  L3M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_3M], \"0%\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Customer",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Internal_Acq_Sick",
                                    "expression": "([Utilization_hours_illness_bridge_formatted] + [Utilization_hours_internal_bridge_formatted] + [Utilization_hours_acq_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Vacation_Leave_Training",
                                    "expression": "([Utilization_hours_vacation_leave_bridge_formatted] + [Utilization_hours_training_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG",
                                    "expression": "AVERAGE('rep v_hr_employee'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Target_Hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Missing_Hours",
                                    "expression": "[Timesheet_Target_Hours] - [Timesheet_Customer] - [Timesheet_Vacation_Leave_Training] - [Timesheet_Internal_Acq_Sick]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target for Table",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing",
                                    "expression": "[Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing_bridge",
                                    "expression": "[Utilization_hours_missing] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target]*100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % LM",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[Month] = MONTH(TODAY())-1, 'pub dim_date'[Year] = YEAR(TODAY()))\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % YTD",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[UpToCurrentMonth] = 1)\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'),'pub dim_date'[UpToCurrentMonth] = 1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target LM",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'), 'pub dim_date'[Month] = MONTH(TODAY())-1 && 'pub dim_date'[Year] = YEAR(TODAY()))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target YTD]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target LM]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_reported",
                                    "expression": "Not available",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Missing Hours",
                                    "expression": "\n    VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR missing_hours = target_hours_utilization - hours_reported \nRETURN\n    missing_hours",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Reported Hours",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Target Hours adj.",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD old",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, 'pub dim_date'[UpToCurrentMonth] = 1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted_table",
                                    "expression": "\"AVG Δ year to date: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted_table",
                                    "expression": "\"AVG Δ last month: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_training_bridge",
                                    "expression": "[Utilization_hours_training]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_illness_bridge",
                                    "expression": "[Utilization_hours_illness]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_internal_bridge",
                                    "expression": "[Utilization_hours_internal]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_acq_bridge",
                                    "expression": "[Utilization_hours_acq]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing_bridge",
                                    "expression": "[Utilization_hours_missing]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Single Employee Selected",
                                    "expression": "\nvar emp = SELECTEDVALUE('rep v_hr_employee'[emp_id],\"multiple\")\nreturn\nif(emp = \"multiple\",0,1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Special Time Model",
                                    "expression": "if([Flag Single Employee Selected] && [Flag Special Time Model],\"Values > 100% may be due to special time models\",\"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Special Time Model",
                                    "expression": "if(max('msr v_employee_utilization'[Utilization % Day]) > 1, 1,0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp PY",
                                    "expression": "ROUND(CALCULATE('msr v_employee_utilization'[Utilization Δ Target pp], SAMEPERIODLASTYEAR('pub dim_date'[Date]))*100, 0)& \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Δ pp PY",
                                    "expression": "\nvar PY = 'msr v_employee_utilization'[Utilization % PY]\n\nreturn\nIF(PY > 0, \n    ROUND(('msr v_employee_utilization'[Utilization %_2] - 'msr v_employee_utilization'[Utilization % PY]) *100, 0) & \" pp\",\n    \"N/A\"\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_vacation_leave_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_vacation_leave_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_training_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_training_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur_utilization",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days_utilization]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_illness_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_illness_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_internal_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_internal_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_acq_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_acq_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_missing_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_missing_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_on_client_project",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_on_client_project]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing",
                                    "expression": "([Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing %",
                                    "expression": "\n    VAR missing = DIVIDE(\n\t                        [Utilization_hours_missing],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(missing <= 0, 0, missing)",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness]",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness %",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [utilization_hours_acq_internal_illness],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Spacer",
                                    "expression": "REPT(\"l\", 15)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_utilization_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix",
                            "columns": [
                                {
                                    "name": "key_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "std_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "rep v_hr_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "per_org",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_emp_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_full_name",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone_mobile",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "name_prefix",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_display",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nickname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_display_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_manager_level",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "gender",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "empl_class_descr",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "national_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "middle_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "maiden_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "modify_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id_ps",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "legal_entity",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[country_code_iso3] & \"-\" & 'rep v_hr_employee'[jobcode_id]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED(utilization_budgets[utilization_target])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fullname_joblevel4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_joblevel4_mentor",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4] & \" - \" & 'rep v_hr_employee'[mentor_full_name]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id.1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region.old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"rep v_hr_employee_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "pub dim_date",
                            "columns": [
                                {
                                    "name": "DateKey",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Day",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Weekday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekDayName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekOfYear",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "MonthName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthnumber",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ISOWeekOfYearNameInCal",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & 'pub dim_date'[WeekOfYear]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MonthNameShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "UpToCurrentMonth",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR current_month = MONTH(TODAY())\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year, \n                    IF('pub dim_date'[Date].[MonthNo] <= current_month,\n                        1,\n                        0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Last4Next4Weeks",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR firstWeek = WEEKNUM(TODAY())-4\n    VAR lastWeek = WEEKNUM(TODAY())+3\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year,\n                    IF('pub dim_date'[WeekOfYear] >= firstWeek, \n                        IF('pub dim_date'[WeekOfYear] <= lastWeek,\n                            1,\n                            0),0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_month",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH(TODAY()) = 'pub dim_date'[Date].[MonthNo], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_week",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(WEEKNUM(TODAY()+1) = 'pub dim_date'[WeekOfYear], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "temp_CurrentWeek",
                                    "expression": "WEEKNUM(TODAY())",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_FirstWeek",
                                    "expression": "WEEKNUM(TODAY())-3",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_Lastweek",
                                    "expression": "WEEKNUM(TODAY())+4",
                                    "isHidden": false
                                },
                                {
                                    "name": "Column_width",
                                    "expression": "REPT(\"0\", 7)",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveMonthList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[MonthNameShort] ),\n        'pub dim_date'[MonthNameShort],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDay",
                                    "expression": "TODAY()",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDayWeek",
                                    "expression": "[CurrentDay] & \" (\" & [CurrentWeek] & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentWeek",
                                    "expression": "CALCULATE(\n                FIRSTNONBLANK('pub dim_date'[Calendarweek], \"\"), \n                FILTER(ALL('pub dim_date'), 'pub dim_date'[Date] = TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveWeekList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[Calendarweek] ),\n        'pub dim_date'[Calendarweek],\n        \", \"\n    )",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_dim_date = datahub{[Schema=\"pub\",Item=\"dim_date\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_dim_date, each Date.IsInCurrentYear([Date]) or Date.IsInPreviousYear([Date])),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"Date\", \"Day\", \"Weekday\", \"WeekDayName\", \"WeekOfYear\", \"Month\", \"MonthName\", \"Year\", \"YearMonthnumber\", \"FirstDayOfMonth\", \"YearMonthShort\", \"ISOWeekOfYearNameInCal\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Removed Other Columns\", \"MonthNameShort\", each Text.AfterDelimiter(Text.Proper([YearMonthShort]), \"/\"), type text)\nin\n    #\"Inserted Text After Delimiter\""
                                }
                            ]
                        },
                        {
                            "name": "Refresh_Timestamp",
                            "columns": [
                                {
                                    "name": "UTC timestamp",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Local timestamp with offset",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Last_refresh_local",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & WEEKNUM(Refresh_Timestamp[Last_refresh_local])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    StandardOffset = #duration(0, 1, 0, 0),\n    DaylightSavingTimeOffset = #duration(0, 2, 0, 0),\n\n    // get start and end of daylight saving time\n    // this code implements the rules of EU counties\n    // if it doesn't fill your expectations, visit https://en.wikipedia.org/wiki/Daylight_saving_time_by_country and implement your own function\n    fnDaylightSavingTimePeriod = (\n        now as datetime\n    ) as record => \n        let\n            // the daylight saving time starts on the last Sunday of March at 1am UTC\n            LastDayOfMarch = #date(Date.Year(now), 3, 31),\n            StartOfDaylightSavingTime = Date.AddDays(LastDayOfMarch, -Date.DayOfWeek(LastDayOfMarch)) & #time(1, 0, 0),\n            // the daylight saving time ends on the last Sunday in October at 1am UTC\n            LastDayOfOctober = #date(Date.Year(now), 10, 31),\n            EndOfDaylightSavingTime = Date.AddDays(LastDayOfOctober, -Date.DayOfWeek(LastDayOfOctober)) & #time(1, 0, 0)\n        in\n            [From = StartOfDaylightSavingTime, To = EndOfDaylightSavingTime],\n\n    // get a timestamp in UTC (with offset 00:00 all year long)\n    UtcNow = DateTimeZone.UtcNow(),\n    // convert UTC datetime with offset to datetime\n    UtcNowWithoutZone = DateTimeZone.RemoveZone(UtcNow),\n\n    // get daylight saving time period\n    DaylightSavingTimePeriod = fnDaylightSavingTimePeriod(UtcNowWithoutZone),\n\n    // convert UTC time to the local time with respect to current offset\n    LocalTimeWithOffset = \n        if UtcNowWithoutZone >= DaylightSavingTimePeriod[From] and UtcNowWithoutZone <= DaylightSavingTimePeriod[To] then\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(DaylightSavingTimeOffset), \n                Duration.Minutes(DaylightSavingTimeOffset)\n            )\n        else\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(StandardOffset), \n                Duration.Minutes(StandardOffset)\n            ),\n    \n    // current date time without offset\n    LocalTime = DateTimeZone.RemoveZone(LocalTimeWithOffset),\n\n    // result table\n    Result = #table(\n        type table\n        [\n            #\"UTC timestamp\" = datetime, \n            #\"UTC date\" = date,\n            #\"Local timestamp with offset\" = datetimezone,\n            #\"Local timestamp without offset\" = datetime\n        ], \n        {\n            {\n            UtcNowWithoutZone,\n            DateTime.Date(UtcNowWithoutZone),\n            LocalTimeWithOffset,\n            LocalTime\n            }\n        }\n    ),\n    #\"Inserted Date\" = Table.AddColumn(Result, \"Last_refresh_local\", each DateTime.Date([Local timestamp without offset]), type date),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Date\",{\"UTC date\", \"Local timestamp without offset\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "xlsx utilization_targets",
                            "columns": [
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "expression": "'xlsx utilization_targets'[country_code_iso3] & \"-\" & 'xlsx utilization_targets'[jobcode_id]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"xlsx utilization_targets_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "msr v_employee_project_hours",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approval_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_manager",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED('rep v_hr_employee'[mentor_full_name])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "recorded_time",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "time_type_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF('msr v_employee_project_hours'[time_type_category] IN {\"Productive Time\", \"Training\"}, 'msr v_employee_project_hours'[project_number] & \" - \" & 'msr v_employee_project_hours'[project_name], 'msr v_employee_project_hours'[time_type_category])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "approver",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF('msr v_employee_project_hours'[time_type_category] IN {\"Productive Time\", \"Training\"}, 'msr v_employee_project_hours'[project_manager], 'msr v_employee_project_hours'[mentor_full_name])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "project_time_type_combined",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_time_type_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Hours_in_approval",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time])+0, 'msr v_employee_project_hours'[approval_status] IN {\"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_approved",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time]), 'msr v_employee_project_hours'[approval_status] IN {\"Approved\", \"Approval not Necessary\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_reported",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time]), 'msr v_employee_project_hours'[approval_status] IN {\"Approved\", \"Approval not Necessary\", \"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_in_approval_%",
                                    "expression": "DIVIDE([Hours_in_approval], [Hours_reported])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_in_approval_CP",
                                    "expression": "CALCULATE([Hours_in_approval]+0, 'msr v_employee_project_hours'[project_type] IN {\"CP\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Sum_recorded_time_hours",
                                    "expression": "SUM('msr v_employee_project_hours'[recorded_time])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Sum_recorded_time_days",
                                    "expression": "SUM('msr v_employee_project_hours'[recorded_time])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Days_in_approval",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time])/8+0, 'msr v_employee_project_hours'[approval_status] IN {\"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Days_in_approval_CP",
                                    "expression": "CALCULATE([Days_in_approval]+0, 'msr v_employee_project_hours'[project_type] IN {\"CP\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Hours in Approval",
                                    "expression": "\"Hours currently in approval: \" & FORMAT([Hours_in_approval],\"0\") & \" (CP: \" & FORMAT([Hours_in_approval_CP],\"0\") & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Days in Approval",
                                    "expression": "\"Days currently in approval: \" & FORMAT([Days_in_approval],\"0\") & \" (CP: \" & FORMAT([Days_in_approval_CP],\"0\") & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Euros_in_approval",
                                    "expression": "CALCULATE(SUMX('msr v_employee_project_hours',[recorded_time]/8*[daily_rate_eur])+0, 'msr v_employee_project_hours'[approval_status] IN {\"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Euros_in_approval_CP",
                                    "expression": "CALCULATE([Euros_in_approval]+0, 'msr v_employee_project_hours'[project_type] IN {\"CP\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Euros in Approval",
                                    "expression": "\"Euros currently in approval: \" & SUBSTITUTE(FORMAT([Euros_in_approval], \"#,##,,.0M\"),\".\",\",\") & \" (CP: \" & SUBSTITUTE(FORMAT([Euros_in_approval_CP],\"#,##,,.0M\"),\".\",\",\") & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic_in_approval",
                                    "expression": "SWITCH(\n    SELECTEDVALUE('D/H Slicer'[D/H]),\n    \"Days\", [Days_in_approval],\n    \"Hours\",[Hours_in_approval],\n    0\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic_in_approval_CP",
                                    "expression": "SWITCH(\n    SELECTEDVALUE('D/H Slicer'[D/H]),\n    \"Days\", [Days_in_approval_CP],\n    \"Hours\",[Hours_in_approval_CP],\n    0\n)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_project_hours_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "Comparison_Table",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Employee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Utilization_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CALCULATE([Utilization % YTD], ALLEXCEPT(Comparison_Table, Comparison_Table[emp_id]))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Utilization_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CALCULATE([Utilization % LM], ALLEXCEPT(Comparison_Table, Comparison_Table[emp_id]))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "(Comparison_Table[Target] - Comparison_Table[Utilization_YTD]) * -1",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "(Comparison_Table[Target] - Comparison_Table[Utilization_LM]) * -1",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_rounded_0.05_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CEILING(Comparison_Table[Delta_YTD], 0.05)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_rounded_0.05_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CEILING(Comparison_Table[Delta_LM], 0.05)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "Comparison_Table[Delta_rounded_0.05_YTD]*100",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "Comparison_Table[Delta_rounded_0.05_LM]*100",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_YTD_table",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "ROUND(Comparison_Table[Delta_YTD] * 100, 0)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_LM_table",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "ROUND(Comparison_Table[Delta_LM] * 100, 0)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Info Button",
                                    "expression": "UNICHAR(128712)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "SELECTCOLUMNS('rep v_hr_employee', \n                        \"emp_id\", 'rep v_hr_employee'[emp_id],\n                        \"Employee\", 'rep v_hr_employee'[full_name], \n                        \"Target\", 'rep v_hr_employee'[utilization_target])"
                                }
                            ]
                        },
                        {
                            "name": "utilization_budgets",
                            "columns": [
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "utilization_budgets[country_code_iso3] & \"-\" & utilization_budgets[jobcode_id]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/utilization_budgets.xlsx\"), null, true),\n    utilization_budgets_Table = Source{[Item=\"utilization_budgets\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(utilization_budgets_Table,{{\"country_code_iso3\", type text}, {\"jobcode_id\", type text}, {\"jobcode\", type text}, {\"job_short\", type text}, {\"utilization_target\", type number}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "D/H Utilization Deepdive",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "SWITCH(\n    TRUE(),\n    CONTAINSSTRING('D/H Utilization Deepdive'[Fields], \"hours\"), \"Hours\",\"Days\"\n)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Target hours\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours]), 0),\n    (\"Target hours adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours_utilization]), 1),\n    (\"Target days\", NAMEOF('msr v_employee_utilization'[Utilization_target_days]), 0),\n    (\"Target days adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_days_utilization]), 1),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_hours_on_client_project]), 2),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_days_on_client_project]), 2)\n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Utilization Drillthrough",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Hours/Days Drillthrough Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Hours/Days Drillthrough Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{ --And Time in Approval\n    (\"Hours\", NAMEOF('msr v_employee_project_hours'[Sum_recorded_time_hours]), 1,\"Hours\"),\n    (\"Days\", NAMEOF('msr v_employee_project_hours'[Sum_recorded_time_days]), 0,\"Days\")\n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Slicer",
                            "columns": [
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{(\"Days\"),(\"Hours\")}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Timesheet Analysis",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Timesheet Analysis Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Timesheet Analysis Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Text Button Details Hours/Days",
                                    "expression": "\"Details \" & LOWER(SELECTEDVALUE('D/H Slicer'[D/H]))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Target days\", NAMEOF('msr v_employee_utilization'[Utilization_target_days]), 0, \"Days\"),\n    (\"Vacation & leave\", NAMEOF('msr v_employee_utilization'[Utilization_days_vacation_leave_bridge]), 1, \"Days\"),\n    (\"Training\", NAMEOF('msr v_employee_utilization'[Utilization_days_training_bridge]), 2, \"Days\"),\n    (\"Target days adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_days_utilization]), 3, \"Days\"),\n    (\"Sickness\", NAMEOF('msr v_employee_utilization'[Utilization_days_illness_bridge]), 4, \"Days\"),\n    (\"Internal\", NAMEOF('msr v_employee_utilization'[Utilization_days_internal_bridge]), 5, \"Days\"),\n    (\"Acq\", NAMEOF('msr v_employee_utilization'[Utilization_days_acq_bridge]), 6, \"Days\"),\n    (\"Missing days\", NAMEOF('msr v_employee_utilization'[Utilization_days_missing_bridge]), 7, \"Days\"),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_days_on_client_project]), 8, \"Days\"),\n\n    (\"Target hours\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours]), 0, \"Hours\"),\n    (\"Vacation & leave\", NAMEOF('msr v_employee_utilization'[Utilization_hours_vacation_leave_bridge]), 1, \"Hours\"),\n    (\"Training\", NAMEOF('msr v_employee_utilization'[Utilization_hours_training_bridge]), 2, \"Hours\"),\n    (\"Target hours adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours_utilization]), 3, \"Hours\"),\n    (\"Sickness\", NAMEOF('msr v_employee_utilization'[Utilization_hours_illness_bridge]), 4, \"Hours\"),\n    (\"Internal\", NAMEOF('msr v_employee_utilization'[Utilization_hours_internal_bridge]), 5, \"Hours\"),\n    (\"Acq\", NAMEOF('msr v_employee_utilization'[Utilization_hours_acq_bridge]), 6, \"Hours\"),\n    (\"Missing hours\", NAMEOF('msr v_employee_utilization'[Utilization_hours_missing_bridge]), 7, \"Hours\"),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_hours_on_client_project]), 8, \"Hours\")   \n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Approval Textbox",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Approval Textbox Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Approval Textbox Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Text days in approval\", NAMEOF('msr v_employee_project_hours'[Text Days in Approval]), 0, \"Days\"),\n    (\"Text dours in approval\", NAMEOF('msr v_employee_project_hours'[Text Hours in Approval]), 1, \"Hours\")\n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Completion Deepdive",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Completion Deepdive Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Completion Deepdive Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Days missing\", NAMEOF('msr v_employee_utilization'[Utilization_days_missing]), 0, \"Days\"),\n    (\"Hours missing\", NAMEOF('msr v_employee_utilization'[Utilization_hours_missing]), 1, \"Hours\")\n}"
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform",
                            "columns": [
                                {
                                    "name": "platform_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform = Source{[Schema=\"rep\",Item=\"v_ll_head_platform\"]}[Data]\nin\n    rep_v_ll_head_platform"
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform_DACH",
                            "columns": [
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform_DACH = Source{[Schema=\"rep\",Item=\"v_ll_head_platform_DACH\"]}[Data]\nin\n    rep_v_ll_head_platform_DACH"
                                }
                            ]
                        },
                        {
                            "name": "rep v_II_head_region_country",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.Combine({#\"rep v_ll_head_region\", #\"rep v_ll_head_country\"})\nin\n    Source"
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "Jobcodes",
                            "expression": "let\n    Source = Jobcodes_T,\n    Publish = Source\nin\n    Publish"
                        },
                        {
                            "name": "Jobcodes_Excel",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"Vc45DoAwDETRu1BTOJi1xCZFIkVYcYkQ978FdEzKp5niX1eXT3mIgu3c3T1waBl+BrKagIsVOIfZyq+BXHHcxGEcJVYgN2SSDOOG4kkxkGfdse9IFfvUC/ZpI4+Y55jHbqA1f9v9Ag==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Jobcode_Excel = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Jobcode_Excel\", type text}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Jobcode_Excel\", Splitter.SplitTextByDelimiter(\"_\", QuoteStyle.Csv), {\"Jobcode_Excel.1\", \"Jobcode_Excel.2\"}),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Jobcode_Excel.1\", type text}, {\"Jobcode_Excel.2\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type1\",{\"Jobcode_Excel.1\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Jobcode_Excel.2\", \"Jobcode_Excel\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_utilization_target",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"key_date\", \"emp_id\", \"job_code\", \"country_code_iso3\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"job.Kurz-Bezeichnung\", \"job_short\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"key_date\", \"emp_id\", \"country_code_iso3\", \"job_code\", \"job_short\", \"job.Bezeichnung\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(Jobcodes_Table,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}, {\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Jobcode\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"Utilization Target Rate\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"Jobcode\", \"jobcode_id\"}, {\"Kurz-Bezeichnung\", \"job_short\"}, {\"Bezeichnung\", \"jobcode\"}, {\"Utilization Target Rate\", \"utilization_target\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach_ger",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_dach\",\n    #\"Added Custom\" = Table.AddColumn(Source, \"country_code_iso3\", each \"GER\", type text),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Reordered Columns\",\"GER\",\"DEU\",Replacer.ReplaceText,{\"country_code_iso3\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach_aut",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_dach\",\n    #\"Added Custom\" = Table.AddColumn(Source, \"country_code_iso3\", each \"AUT\", type text),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach_che",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_dach\",\n    #\"Added Custom\" = Table.AddColumn(Source, \"country_code_iso3\", each \"CHE\", type text),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "msr v_fc_project_data",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_fc_project_data = datahub{[Schema=\"msr\",Item=\"v_fc_project_data\"]}[Data]\nin\n    msr_v_fc_project_data"
                        },
                        {
                            "name": "sec ll_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_ll_job = Source{[Schema=\"sec\",Item=\"ll_job\"]}[Data],\n    #\"Expanded rep.ll_job_reporting_level1\" = Table.ExpandRecordColumn(sec_ll_job, \"rep.ll_job_reporting_level1\", {\"level1_sort_id\"}, {\"job_reporting_level1_sort\"}),\n    #\"Expanded rep.ll_job_reporting_level2\" = Table.ExpandRecordColumn(#\"Expanded rep.ll_job_reporting_level1\", \"rep.ll_job_reporting_level2\", {\"level2_sort_id\"}, {\"job_reporting_level2_sort\"}),\n    #\"Expanded rep.ll_job_reporting_level3\" = Table.ExpandRecordColumn(#\"Expanded rep.ll_job_reporting_level2\", \"rep.ll_job_reporting_level3\", {\"level3_sort_id\"}, {\"job_reporting_level3_sort\"}),\n    #\"Expanded rep.ll_job_reporting_level4\" = Table.ExpandRecordColumn(#\"Expanded rep.ll_job_reporting_level3\", \"rep.ll_job_reporting_level4\", {\"level4_sort_id\"}, {\"job_reporting_level4_sort\"})\nin\n    #\"Expanded rep.ll_job_reporting_level4\""
                        },
                        {
                            "name": "pub v_ll_company_to_region",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    pub_v_ll_company_to_region = Source{[Schema=\"pub\",Item=\"v_ll_company_to_region\"]}[Data],\n    #\"Replaced Value\" = Table.ReplaceValue(pub_v_ll_company_to_region,\"polariXpartner\",\"PXPartner\",Replacer.ReplaceText,{\"region_reporting_level3\"}),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Replaced Value\", \"region_reporting_level1_sort\", each if [region_reporting_level1] = \"EMEA\" then 1 else if [region_reporting_level1] = \"Non-operational companies\" then 6 else if [region_reporting_level1] = \"Holding\" then 5 else if [region_reporting_level1] = \"Other RB companies\" then 4 else if [region_reporting_level1] = \"Americas\" then 2 else if [region_reporting_level1] = \"Asia\" then 3 else if [region_reporting_level1] = \"RUS\" then 7 else null, type number)\nin\n    #\"Added Conditional Column\""
                        },
                        {
                            "name": "platform_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "msr v_byd_daily_rates",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_byd_daily_rates = datahub{[Schema=\"msr\",Item=\"v_byd_daily_rates\"]}[Data]\nin\n    msr_v_byd_daily_rates"
                        },
                        {
                            "name": "msr v_employee_utilization_T",
                            "expression": "let\n    Source = #\"msr v_employee_utilization_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_hr_employee_job_matrix\", {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}, {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each ([job.Im Scope] = \"x\"))\nin\n    #\"Filtered Rows1\""
                        },
                        {
                            "name": "msr v_employee_project_hours_T",
                            "expression": "let\n    Source = #\"msr v_employee_project_hours_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_hr_employee_job_matrix\", {\"job.Im Scope\", \"daily_rate_eur\"}, {\"job.Im Scope\", \"daily_rate_eur\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each [job.Im Scope] = \"x\"),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows1\", {\"project_number\"}, #\"msr v_fc_project_data\", {\"project_number\"}, \"msr v_fc_project_data\", JoinKind.LeftOuter),\n    #\"Expanded msr v_fc_project_data\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_fc_project_data\", {\"project_name\", \"project_manager\", \"project_type\"}, {\"project_name\", \"project_manager\", \"project_type\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded msr v_fc_project_data\",\"CPA\",\"CP\",Replacer.ReplaceText,{\"project_type\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"INT\",\"INP\",Replacer.ReplaceText,{\"project_type\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Replaced Value1\", \"project_time_type_combined\", each if List.Contains({\"Vacation\",\"Illness\",\"Leave\"},[time_type_category]) then [time_type_category] else if [project_type] = null then \"Other\" else [project_type], type text),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Added Custom\", \"project_time_type_sort\", each if [project_time_type_combined] = \"CP\" then 1 else if [project_time_type_combined] = \"ACQ\" then 2 else if [project_time_type_combined] = \"INP\" then 3 else if [project_time_type_combined] = \"TRN\" then 4 else if [project_time_type_combined] = \"HR\" then 5 else if [project_time_type_combined] = \"Vacation\" then 6 else if [project_time_type_combined] = \"Leave\" then 7 else if [project_time_type_combined] = \"Illness\" then 8 else if [project_time_type_combined] = \"MKT\" then 9 else if [project_time_type_combined] = \"Other\" then 10 else 99, Int64.Type)\nin\n    #\"Added Conditional Column\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_T",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([key_date]) or Date.IsInPreviousYear([key_date])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"job_code\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"JobGroup\", \"Jobcode_Excel\"}, {\"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"job.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([job.Im Scope] = \"x\")),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows1\", {\"job_code\", \"company_id_byd\"}, #\"msr v_byd_daily_rates\", {\"jobcode_id\", \"company_id\"}, \"msr v_byd_daily_rates\", JoinKind.LeftOuter),\n    #\"Expanded msr v_byd_daily_rates\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_byd_daily_rates\", {\"amount_eur\"}, {\"daily_rate_eur\"})\nin\n    #\"Expanded msr v_byd_daily_rates\""
                        },
                        {
                            "name": "rep v_hr_employee_T",
                            "expression": "let\n    Source = #\"rep v_hr_employee_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each [ter_max_date] > #date(2022, 12, 31)),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"jobcode_id\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Jobcode_Excel\"}, {\"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([Jobcodes.Im Scope] = \"x\")),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows1\",\"Junior Consultant 1##\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Junior Consultant 1#\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Group Function RB N3XT\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"jobcode_id\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"company_id\"}, #\"pub v_ll_company_to_region\", {\"company_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"pub v_ll_company_to_region\", {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}, {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Expanded pub v_ll_company_to_region\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Reordered Columns\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_id\", \"platform_1_sort\"}, {\"platform_1_id.1\", \"platform_1_sort\"}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Expanded platform_sort\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_1_sort\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns1\",{{\"region\", \"region.old\"}}),\n    #\"Cleaned Text\" = Table.TransformColumns(#\"Renamed Columns\",{{\"job_reporting_level2\", Text.Clean, type text}}),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"job_reporting_level2\", Text.Trim, type text}}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Trimmed Text\",null,9,Replacer.ReplaceValue,{\"platform_1_sort\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value5\",\"9720\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Group Function F&C\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"})\nin\n    #\"Replaced Value4\""
                        },
                        {
                            "name": "Jobcodes_T",
                            "expression": "let\n    Source = Jobcodes_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type1\", {\"Jobcode\"}, Jobcodes_Excel, {\"Jobcode_Excel\"}, \"Jobcodes_Excel\", JoinKind.FullOuter),\n    #\"Expanded Jobcodes_Excel\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes_Excel\", {\"Jobcode_Excel\"}, {\"Jobcode_Excel\"})\nin\n    #\"Expanded Jobcodes_Excel\""
                        },
                        {
                            "name": "xlsx utilization_targets_T",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_E\",\n    #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Column1\", type any}, {\"2023 Utilization & Capture rate Budget\", type text}, {\"Column3\", type any}, {\"Column4\", type any}, {\"Column5\", type any}, {\"Column6\", type any}, {\"Column7\", type any}, {\"Column8\", type any}, {\"Column9\", type any}, {\"Column10\", type any}, {\"Column11\", type any}, {\"Column12\", type any}, {\"Column13\", type any}, {\"Column14\", type any}, {\"Column15\", type any}, {\"Column16\", type any}, {\"Column17\", type any}, {\"Column18\", type any}, {\"Column19\", type any}, {\"Column20\", type any}, {\"Column21\", type any}, {\"Column22\", type any}, {\"Column23\", type any}, {\"Column24\", type any}, {\"Column25\", type any}, {\"Column26\", type any}, {\"Column27\", type any}, {\"Column28\", type any}, {\"Column29\", type any}, {\"Column30\", type any}, {\"Column31\", type any}, {\"Column32\", type any}, {\"Column33\", type any}, {\"Column34\", type any}, {\"Column35\", type any}, {\"Column36\", type any}, {\"Column37\", type any}, {\"Column38\", type any}, {\"Column39\", type any}, {\"Column40\", type any}, {\"Column41\", type any}, {\"Column42\", type any}, {\"Column43\", type any}, {\"Column44\", type any}, {\"Column45\", type any}, {\"Column46\", type any}, {\"Column47\", type any}, {\"Column48\", type any}, {\"Column49\", type any}, {\"Column50\", type any}, {\"Column51\", type any}, {\"Column52\", type any}, {\"Column53\", type any}, {\"Column54\", type any}, {\"Column55\", type any}, {\"Column56\", type any}, {\"Column57\", type any}, {\"Column58\", type any}, {\"Column59\", type any}, {\"Column60\", type any}, {\"Column61\", type any}, {\"Column62\", Int64.Type}, {\"Column63\", type any}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"}),\n    #\"Removed Top Rows\" = Table.Skip(#\"Removed Columns\",5),\n    #\"Kept First Rows\" = Table.FirstN(#\"Removed Top Rows\",16),\n    #\"Promoted Headers1\" = Table.PromoteHeaders(#\"Kept First Rows\", [PromoteAllScalars=true]),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Promoted Headers1\",{{\"Column1\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", type number}, {\"KSA\", type number}, {\"UAE\", type number}, {\"CIS\", type number}, {\"RUS\", Int64.Type}, {\"UKR\", type number}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", type number}, {\"CHE\", type number}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", type number}, {\"HUN\", type number}, {\"ITA\", type number}, {\"MOR\", type number}, {\"NLD\", type number}, {\"NOR\", type number}, {\"PRT\", type number}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", type number}, {\"CZE\", type number}, {\"CRO\", type number}, {\"POL\", type number}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type any}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", type number}, {\"SEA\", type number}, {\"IDN\", type number}, {\"MMR\", Int64.Type}, {\"MYS\", type number}, {\"SGP\", type number}, {\"THA\", type number}, {\"VNM\", type number}, {\"Asia\", type number}, {\"Polarix\", type number}, {\"PX Partner\", type any}, {\"PX Engineers\", type any}, {\"PX America\", type any}, {\"TMG\", type any}, {\"Placeholder\", type any}, {\"Other RB companies\", type any}, {\"Subtotal\", type number}, {\"HOL\", type number}, {\"Total\", Int64.Type}, {\"Column61\", Int64.Type}, {\"Column62\", type any}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type1\", \"Column1\", Splitter.SplitTextByEachDelimiter({\" \"}, QuoteStyle.Csv, false), {\"Column1.1\", \"Column1.2\"}),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Column1.1\", type text}, {\"Column1.2\", type text}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type2\",{\"Column1.2\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns1\",{{\"Column1.1\", \"job_short\"}}),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Renamed Columns\",{\"job_short\", \"BEL\", \"QAT\", \"BHR\", \"KSA\", \"UAE\", \"CIS\", \"RUS\", \"UKR\", \"ESP\", \"FRA\", \"HUN\", \"ITA\", \"MOR\", \"NLD\", \"NOR\", \"PRT\", \"ROU\", \"UK\", \"CEE\", \"CZE\", \"CRO\", \"POL\", \"BRA\", \"CAN\", \"USA\", \"MEX\", \"CHN_1\", \"HKG\", \"IND\", \"JPN\", \"KOR\", \"IDN\", \"MMR\", \"MYS\", \"SGP\", \"THA\", \"VNM\", \"Polarix\"}),\n    #\"Renamed Columns4\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"CHN_1\", \"CHN\"}}),\n    #\"Replace Null with 0\" = Table.TransformColumns(#\"Renamed Columns4\",{},(x) => Replacer.ReplaceValue(x,null,0)),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Replace Null with 0\", {\"job_short\"}, \"Attribute\", \"Value\"),\n    #\"Replace 0 with Null\" = Table.TransformColumns(#\"Unpivoted Other Columns\",{},(x) => Replacer.ReplaceValue(x,0,null)),\n    #\"Changed Type4\" = Table.TransformColumnTypes(#\"Replace 0 with Null\",{{\"job_short\", type text}, {\"Attribute\", type text}, {\"Value\", type number}}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type4\",{{\"Attribute\", \"country_code_iso3\"}, {\"Value\", \"utilization_target\"}}),\n    #\"Changed Type3\" = Table.TransformColumnTypes(#\"Renamed Columns1\",{{\"utilization_target\", type number}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type3\", {\"job_short\"}, Jobcodes, {\"Kurz-Bezeichnung\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Jobcode\", \"Bezeichnung\"}, {\"Jobcode\", \"Bezeichnung\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded Jobcodes\",{{\"Bezeichnung\", \"jobcode\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns2\",{\"country_code_iso3\", \"jobcode\", \"job_short\", \"utilization_target\"}),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Reordered Columns\",{{\"Jobcode\", \"jobcode_id\"}}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Renamed Columns3\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"}),\n    #\"Appended Query\" = Table.Combine({#\"Reordered Columns1\", #\"xlsx utilization_targets_dach_ger\"}),\n    #\"Appended Query1\" = Table.Combine({#\"Appended Query\", #\"xlsx utilization_targets_dach_aut\"}),\n    #\"Appended Query2\" = Table.Combine({#\"Appended Query1\", #\"xlsx utilization_targets_dach_che\"})\nin\n    #\"Appended Query2\""
                        },
                        {
                            "name": "msr v_employee_utilization_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_utilization = datahub{[Schema=\"msr\",Item=\"v_employee_utilization\"]}[Data]\nin\n    msr_v_employee_utilization"
                        },
                        {
                            "name": "msr v_employee_project_hours_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_project_hours = datahub{[Schema=\"msr\",Item=\"v_employee_project_hours\"]}[Data]\nin\n    msr_v_employee_project_hours"
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_hr_employee_job_matrix = datahub{[Schema=\"msr\",Item=\"v_hr_employee_job_matrix\"]}[Data]\nin\n    msr_v_hr_employee_job_matrix"
                        },
                        {
                            "name": "rep v_hr_employee_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_hr_employee = datahub{[Schema=\"rep\",Item=\"v_hr_employee\"]}[Data]\nin\n    rep_v_hr_employee"
                        },
                        {
                            "name": "Jobcodes_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data]\nin\n    Jobcodes_Table"
                        },
                        {
                            "name": "xlsx utilization_targets_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/2023_Budget_Utilization_Capture%20rate.xlsx\"), null, true),\n    #\"Utilization & Cap. Rate Bdg23_Sheet\" = Source{[Item=\"Utilization & Cap. Rate Bdg23\",Kind=\"Sheet\"]}[Data]\nin\n    #\"Utilization & Cap. Rate Bdg23_Sheet\""
                        },
                        {
                            "name": "sec ll_job (2)",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Name] = \"rep.ll_job_reporting_level1\" or [Name] = \"rep.ll_job_reporting_level2\" or [Name] = \"rep.ll_job_reporting_level3\" or [Name] = \"rep.ll_job_reporting_level4\")),\n    rep_ll_job_reporting_level1 = #\"Filtered Rows\"{[Schema=\"rep\",Item=\"ll_job_reporting_level1\"]}[Data],\n    Consulting = rep_ll_job_reporting_level1{[job_reporting_level1=\"Consulting\"]}[sec.ll_job]\nin\n    Consulting"
                        },
                        {
                            "name": "rep v_ll_head_region",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_region = Source{[Schema=\"rep\",Item=\"v_ll_head_region\"]}[Data]\nin\n    rep_v_ll_head_region"
                        },
                        {
                            "name": "rep v_ll_head_country",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_country = Source{[Schema=\"rep\",Item=\"v_ll_head_country\"]}[Data],\n    #\"Renamed Columns\" = Table.RenameColumns(rep_v_ll_head_country,{{\"emp_id_head\", \"emp_id\"}, {\"email_head\", \"email\"}})\nin\n    #\"Renamed Columns\""
                        }
                    ],
                    "roles": [
                        {
                            "name": "Admin",
                            "modelPermission": "Read"
                        },
                        {
                            "name": "RLS restricted",
                            "modelPermission": "Read",
                            "members": [
                                {
                                    "memberName": "lion.barone@rolandberger.com",
                                    "memberId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "chris.breitenfeld@rolandberger.com",
                                    "memberId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "adalberto.brinez@rolandberger.com",
                                    "memberId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "till.friedel@rolandberger.com",
                                    "memberId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "michael.gold@rolandberger.com",
                                    "memberId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "vivien.graf@rolandberger.com",
                                    "memberId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Felix.Hubmann@rolandberger.com",
                                    "memberId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "lars.krueger@rolandberger.com",
                                    "memberId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "michael.mueller@rolandberger.com",
                                    "memberId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "peiling.ng@rolandberger.com",
                                    "memberId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Fang.Qian@rolandberger.com",
                                    "memberId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Matthias.Rueckriegel@rolandberger.com",
                                    "memberId": "68201354-f954-42e0-8518-86f1323829b0",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "juliane.schuetze@rolandberger.com",
                                    "memberId": "79279619-938b-4ece-8526-e640e3d90c5c",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sascha.schuster@rolandberger.com",
                                    "memberId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "brandon.smith@rolandberger.com",
                                    "memberId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "juergen.stubert@rolandberger.com",
                                    "memberId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "willi.viefers@org.rolandberger.com",
                                    "memberId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sebastian.weber2@rolandberger.com",
                                    "memberId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "florian.welte@rolandberger.com",
                                    "memberId": "5284d013-644a-48d2-b93b-0d37177c5993",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                }
                            ],
                            "tablePermissions": [
                                {
                                    "name": "rep v_II_head_region_country",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_ll_head_platform",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_ll_head_platform_DACH",
                                    "filterExpression": "[email] = username()"
                                }
                            ]
                        }
                    ],
                    "configuredBy": "matthias.gessenay@org.rolandberger.com",
                    "configuredById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "isEffectiveIdentityRequired": true,
                    "isEffectiveIdentityRolesRequired": true,
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-08-28T07:57:58.74",
                    "contentProviderType": "PbixInImportMode",
                    "misconfiguredDatasourceUsages": [
                        {
                            "datasourceInstanceId": "918fd35f-ba7f-42d9-af7a-e372ca4eeab9"
                        },
                        {
                            "datasourceInstanceId": "a2d4d68a-cbbf-446f-b298-9925e59e44d6"
                        },
                        {
                            "datasourceInstanceId": "2509d929-2298-4623-8a0e-dc5e3181de05"
                        },
                        {
                            "datasourceInstanceId": "3e436f3a-a73f-410d-87f2-027dda870b3c"
                        },
                        {
                            "datasourceInstanceId": "3336848e-4278-4d97-8038-83d48054a6c5"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "dca84489-0b9c-453d-b6d2-7da9b03b5c1a",
                    "name": "Performance Summary - MD, Region Head, Country Head",
                    "tables": [
                        {
                            "name": "msr v_employee_utilization",
                            "columns": [
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "absence_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "training_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_public_holiday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_weekend",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TA: Vacation & other leave",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[vacation_hours] + 'msr v_employee_utilization'[leave_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "TA: Target hours adj.",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[target_hours] - 'msr v_employee_utilization'[TA: Vacation & other leave] - 'msr v_employee_utilization'[training_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "booked_hours",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[absence_hours] + 'msr v_employee_utilization'[training_hours] + 'msr v_employee_utilization'[productive_hours_utilization]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "acq_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Utilization % Day",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nif('msr v_employee_utilization'[target_hours] = 0 && 'msr v_employee_utilization'[productive_hours_utilization] > 0, 8,\nDIVIDE('msr v_employee_utilization'[productive_hours_utilization], 'msr v_employee_utilization'[target_hours],0))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Utilization_target_hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %",
                                    "expression": "\nDIVIDE(\n\t[Utilization_hours_on_client_project],\n\t[Utilization_target_hours]\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target",
                                    "expression": "0.8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance",
                                    "expression": "'msr v_employee_utilization'[Utilization %] - 'msr v_employee_utilization'[Utilization Target]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance String",
                                    "expression": "\"(\" & 'msr v_employee_utilization'[Utilization Performance Short] & \"ppt.)\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance Short",
                                    "expression": "FIXED('msr v_employee_utilization'[Utilization Performance] * 100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target String",
                                    "expression": "\"Target: \" & 'msr v_employee_utilization'[Utilization Target] * 100 & \"%\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target & Performance",
                                    "expression": "[Utilization Target String] & \" \" & [Utilization Performance String]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % CY",
                                    "expression": "\nvar productive_hours_utilization = CALCULATE(SUM('msr v_employee_utilization'[productive_hours_utilization]), DATESYTD('pub dim_date'[Date]))\n \n Return\n    productive_hours_utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute_2",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %_2",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (all vs th)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[booked_hours]), SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (prod+ill vs adj.)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[productive_hours_utilization])+SUM('msr v_employee_utilization'[illness_hours]), SUM('msr v_employee_utilization'[TA: Target hours adj.]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "TA: Target hours adj. Total",
                                    "expression": "SUM('msr v_employee_utilization'[TA: Target hours adj.])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (reported)",
                                    "expression": "DIVIDE([Hours_reported], [TA: Target hours adj. Total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness",
                                    "expression": "SUM('msr v_employee_utilization'[illness_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge",
                                    "expression": "[Utilization_hours_illness] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal",
                                    "expression": "SUM('msr v_employee_utilization'[inp_project_hours_adj])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge",
                                    "expression": "[Utilization_hours_internal] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq",
                                    "expression": "SUM('msr v_employee_utilization'[acq_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge",
                                    "expression": "[Utilization_hours_acq] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training",
                                    "expression": "SUM('msr v_employee_utilization'[training_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge",
                                    "expression": "[Utilization_hours_training] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave",
                                    "expression": "SUM('msr v_employee_utilization'[vacation_hours]) + SUM('msr v_employee_utilization'[leave_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion",
                                    "expression": "\n    IF(ISBLANK(VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)), 0, (VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % PY",
                                    "expression": "CALCULATE([Utilization %_2], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted",
                                    "expression": "\n    VAR number_decimal = DIVIDE([Utilization_target_hours], 1000)\n    VAR number_whole = FIXED(number_decimal, 0)\nRETURN\n    number_whole & \"k h\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted_2",
                                    "expression": "[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge_formatted",
                                    "expression": "[Utilization_hours_vacation_leave_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization_formatted",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge_formatted",
                                    "expression": "[Utilization_hours_training_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge_formatted",
                                    "expression": "[Utilization_hours_illness_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge_formatted",
                                    "expression": "[Utilization_hours_internal_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge_formatted",
                                    "expression": "[Utilization_hours_acq_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project_formatted",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-4)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "start_3_month",
                                    "expression": "EOMONTH(TODAY(),-4)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M_test",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n        MIN('pub dim_date'[Date]),\n        FILTER(\n            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month))\nRETURN\n    utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_12M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_txt",
                                    "expression": "\"L12M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_12M], \"0%\") & \"  |  L3M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_3M], \"0%\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Customer",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Internal_Acq_Sick",
                                    "expression": "([Utilization_hours_illness_bridge_formatted] + [Utilization_hours_internal_bridge_formatted] + [Utilization_hours_acq_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Vacation_Leave_Training",
                                    "expression": "([Utilization_hours_vacation_leave_bridge_formatted] + [Utilization_hours_training_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG",
                                    "expression": "AVERAGE('rep v_hr_employee'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Target_Hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Missing_Hours",
                                    "expression": "[Timesheet_Target_Hours] - [Timesheet_Customer] - [Timesheet_Vacation_Leave_Training] - [Timesheet_Internal_Acq_Sick]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target for Table",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing",
                                    "expression": "[Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing_bridge",
                                    "expression": "[Utilization_hours_missing] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target]*100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % LM",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[Month] = MONTH(TODAY())-1, 'pub dim_date'[Year] = YEAR(TODAY()))\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % YTD",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[UpToCurrentMonth] = 1)\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'),'pub dim_date'[UpToCurrentMonth] = 1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target LM",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'), 'pub dim_date'[Month] = MONTH(TODAY())-1 && 'pub dim_date'[Year] = YEAR(TODAY()))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target YTD]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target LM]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_reported",
                                    "expression": "Not available",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Missing Hours",
                                    "expression": "\n    VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR missing_hours = target_hours_utilization - hours_reported \nRETURN\n    missing_hours",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Reported Hours",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Target Hours adj.",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD old",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, 'pub dim_date'[UpToCurrentMonth] = 1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted_table",
                                    "expression": "\"AVG Δ Year to date: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted_table",
                                    "expression": "\"AVG Δ Last Month: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_training_bridge",
                                    "expression": "[Utilization_hours_training]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_illness_bridge",
                                    "expression": "[Utilization_hours_illness]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_internal_bridge",
                                    "expression": "[Utilization_hours_internal]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_acq_bridge",
                                    "expression": "[Utilization_hours_acq]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing_bridge",
                                    "expression": "[Utilization_hours_missing]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Single Employee Selected",
                                    "expression": "\nvar emp = SELECTEDVALUE('rep v_hr_employee'[emp_id],\"multiple\")\nreturn\nif(emp = \"multiple\",0,1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Special Time Model",
                                    "expression": "if([Flag Single Employee Selected] && [Flag Special Time Model],\"Values > 100% may be due to special time models\",\"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Special Time Model",
                                    "expression": "if(max('msr v_employee_utilization'[Utilization % Day]) > 1, 1,0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp PY",
                                    "expression": "ROUND(CALCULATE('msr v_employee_utilization'[Utilization Δ Target pp], SAMEPERIODLASTYEAR('pub dim_date'[Date]))*100, 0)& \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Δ pp PY",
                                    "expression": "ROUND(('msr v_employee_utilization'[Utilization %_2] - 'msr v_employee_utilization'[Utilization % PY]) *100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_vacation_leave_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_vacation_leave_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_training_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_training_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur_utilization",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days_utilization]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_illness_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_illness_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_internal_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_internal_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_acq_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_acq_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_missing_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_missing_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_on_client_project",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_on_client_project]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing",
                                    "expression": "([Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing %",
                                    "expression": "\n    VAR missing = DIVIDE(\n\t                        [Utilization_hours_missing],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(missing <= 0, 0, missing)",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness]",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness %",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [utilization_hours_acq_internal_illness],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_utilization_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix",
                            "columns": [
                                {
                                    "name": "key_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "std_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "rep v_hr_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "per_org",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_emp_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_full_name",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone_mobile",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "name_prefix",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_display",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nickname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_display_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_manager_level",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "gender",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "empl_class_descr",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "national_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "middle_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "maiden_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "modify_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id_ps",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "legal_entity",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[country_code_iso3] & \"-\" & 'rep v_hr_employee'[jobcode_id]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED(utilization_budgets[utilization_target])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fullname_joblevel4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_joblevel4_mentor",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4] & \" - \" & 'rep v_hr_employee'[mentor_full_name]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id.1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region.old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Partner_count",
                                    "expression": "COUNTROWS(FILTER('rep v_hr_employee', FIND(\"Partner\", 'rep v_hr_employee'[jobcode],,0)>0))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"rep v_hr_employee_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "pub dim_date",
                            "columns": [
                                {
                                    "name": "DateKey",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Day",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Weekday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekDayName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekOfYear",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "MonthName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthnumber",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ISOWeekOfYearNameInCal",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & 'pub dim_date'[WeekOfYear]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MonthNameShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "UpToCurrentMonth",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR current_month = MONTH(TODAY())\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year, \n                    IF('pub dim_date'[Date].[MonthNo] <= current_month,\n                        1,\n                        0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Last4Next4Weeks",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR firstWeek = WEEKNUM(TODAY())-4\n    VAR lastWeek = WEEKNUM(TODAY())+3\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year,\n                    IF('pub dim_date'[WeekOfYear] >= firstWeek, \n                        IF('pub dim_date'[WeekOfYear] <= lastWeek,\n                            1,\n                            0),0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_month",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH(TODAY()) = 'pub dim_date'[Date].[MonthNo], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_week",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(WEEKNUM(TODAY()+1) = 'pub dim_date'[WeekOfYear], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "temp_CurrentWeek",
                                    "expression": "WEEKNUM(TODAY())",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_FirstWeek",
                                    "expression": "WEEKNUM(TODAY())-3",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_Lastweek",
                                    "expression": "WEEKNUM(TODAY())+4",
                                    "isHidden": false
                                },
                                {
                                    "name": "Column_width",
                                    "expression": "REPT(\"0\", 7)",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveMonthList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[MonthNameShort] ),\n        'pub dim_date'[MonthNameShort],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDay",
                                    "expression": "TODAY()",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDayWeek",
                                    "expression": "[CurrentDay] & \" (\" & [CurrentWeek] & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentWeek",
                                    "expression": "CALCULATE(\n                FIRSTNONBLANK('pub dim_date'[Calendarweek], \"\"), \n                FILTER(ALL('pub dim_date'), 'pub dim_date'[Date] = TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveWeekList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[Calendarweek] ),\n        'pub dim_date'[Calendarweek],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentMonth",
                                    "expression": "FORMAT (TODAY(),\"MMMM\")",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_dim_date = datahub{[Schema=\"pub\",Item=\"dim_date\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_dim_date, each Date.IsInCurrentYear([Date]) or Date.IsInPreviousYear([Date])),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"Date\", \"Day\", \"Weekday\", \"WeekDayName\", \"WeekOfYear\", \"Month\", \"MonthName\", \"Year\", \"YearMonthnumber\", \"FirstDayOfMonth\", \"YearMonthShort\", \"ISOWeekOfYearNameInCal\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Removed Other Columns\", \"MonthNameShort\", each Text.AfterDelimiter(Text.Proper([YearMonthShort]), \"/\"), type text)\nin\n    #\"Inserted Text After Delimiter\""
                                }
                            ]
                        },
                        {
                            "name": "Refresh_Timestamp",
                            "columns": [
                                {
                                    "name": "UTC timestamp",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Local timestamp with offset",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Last_refresh_local",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & WEEKNUM(Refresh_Timestamp[Last_refresh_local])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    StandardOffset = #duration(0, 1, 0, 0),\n    DaylightSavingTimeOffset = #duration(0, 2, 0, 0),\n\n    // get start and end of daylight saving time\n    // this code implements the rules of EU counties\n    // if it doesn't fill your expectations, visit https://en.wikipedia.org/wiki/Daylight_saving_time_by_country and implement your own function\n    fnDaylightSavingTimePeriod = (\n        now as datetime\n    ) as record => \n        let\n            // the daylight saving time starts on the last Sunday of March at 1am UTC\n            LastDayOfMarch = #date(Date.Year(now), 3, 31),\n            StartOfDaylightSavingTime = Date.AddDays(LastDayOfMarch, -Date.DayOfWeek(LastDayOfMarch)) & #time(1, 0, 0),\n            // the daylight saving time ends on the last Sunday in October at 1am UTC\n            LastDayOfOctober = #date(Date.Year(now), 10, 31),\n            EndOfDaylightSavingTime = Date.AddDays(LastDayOfOctober, -Date.DayOfWeek(LastDayOfOctober)) & #time(1, 0, 0)\n        in\n            [From = StartOfDaylightSavingTime, To = EndOfDaylightSavingTime],\n\n    // get a timestamp in UTC (with offset 00:00 all year long)\n    UtcNow = DateTimeZone.UtcNow(),\n    // convert UTC datetime with offset to datetime\n    UtcNowWithoutZone = DateTimeZone.RemoveZone(UtcNow),\n\n    // get daylight saving time period\n    DaylightSavingTimePeriod = fnDaylightSavingTimePeriod(UtcNowWithoutZone),\n\n    // convert UTC time to the local time with respect to current offset\n    LocalTimeWithOffset = \n        if UtcNowWithoutZone >= DaylightSavingTimePeriod[From] and UtcNowWithoutZone <= DaylightSavingTimePeriod[To] then\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(DaylightSavingTimeOffset), \n                Duration.Minutes(DaylightSavingTimeOffset)\n            )\n        else\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(StandardOffset), \n                Duration.Minutes(StandardOffset)\n            ),\n    \n    // current date time without offset\n    LocalTime = DateTimeZone.RemoveZone(LocalTimeWithOffset),\n\n    // result table\n    Result = #table(\n        type table\n        [\n            #\"UTC timestamp\" = datetime, \n            #\"UTC date\" = date,\n            #\"Local timestamp with offset\" = datetimezone,\n            #\"Local timestamp without offset\" = datetime\n        ], \n        {\n            {\n            UtcNowWithoutZone,\n            DateTime.Date(UtcNowWithoutZone),\n            LocalTimeWithOffset,\n            LocalTime\n            }\n        }\n    ),\n    #\"Inserted Date\" = Table.AddColumn(Result, \"Last_refresh_local\", each DateTime.Date([Local timestamp without offset]), type date),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Date\",{\"UTC date\", \"Local timestamp without offset\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "utilization_budgets",
                            "columns": [
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "utilization_budgets[country_code_iso3] & \"-\" & utilization_budgets[jobcode_id]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/utilization_budgets.xlsx\"), null, true),\n    utilization_budgets_Table = Source{[Item=\"utilization_budgets\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(utilization_budgets_Table,{{\"country_code_iso3\", type text}, {\"jobcode_id\", type text}, {\"jobcode\", type text}, {\"job_short\", type text}, {\"utilization_target\", type number}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_total",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "share",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_previous",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_current",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_GROSS",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "rownumber",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_current_dax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH('msr v_fc_order_income_accumulated'[report_month_previous]) = 12, 'msr v_fc_order_income_accumulated'[order_income_total], 'msr v_fc_order_income_accumulated'[order_income_total] - 'msr v_fc_order_income_accumulated'[order_income_previous])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "industry_subplatform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "OI_Monthly",
                                    "expression": "CALCULATE(SUM('msr v_fc_order_income_accumulated'[order_income_current_dax]), MONTH('msr v_fc_order_income_accumulated'[report_month]) < MONTH(TODAY())-1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD",
                                    "expression": "CALCULATE([OI_Monthly], ALL('pub dim_date'[Date]), 'pub dim_date'[Year] = YEAR(TODAY())-1, 'pub dim_date'[Month] <= MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_2",
                                    "expression": "CALCULATE(SUM(OI_Budget_Countries[OI_Budget]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P",
                                    "expression": "DIVIDE([OI_Monthly], [Partner_count])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_YTD",
                                    "expression": "DIVIDE([OI_YTD_BUD_2], CALCULATE(DISTINCTCOUNT('msr v_fc_order_income_accumulated'[project_number]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_per_P_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_formatted",
                                    "expression": "DIVIDE([OI_Monthly], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C",
                                    "expression": "SUM(OI_Budget_Countries[OI_Budget])\n//    var check_industry = calculate(isfiltered(platforms_industry[platform_1_name]) , allselected())\n//    var check_function = calculate(isfiltered(platforms_function[platform_1_name]) , allselected())\n//return\n//    if(check_industry || check_function, BLANK(), SUM(OI_Budget_Countries[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_formatted",
                                    "expression": "DIVIDE([OI_Monthly_BUD_C], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_FP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_industry = calculate(isfiltered(Dim_Industries[industry]) , allselected())\n    var check_subplatform_industry = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subplatform]), ALLSELECTED())\n    var check_subject_industry = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]), ALLSELECTED())\n    var check_subject_function = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]), ALLSELECTED())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_industry || check_subplatform_industry || check_subject_industry || check_subject_function, BLANK(), SUM(OI_Budget_Platforms_Function[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_IP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_function = calculate(isfiltered(Dim_Functions[function]) , allselected())\n    var check_subplatform_industry = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subplatform]), ALLSELECTED())\n    var check_subject_industry = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]), ALLSELECTED())\n    var check_subject_function = CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]), ALLSELECTED())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_function || check_subplatform_industry || check_subject_industry || check_subject_function, BLANK(), SUM(OI_Budget_Platforms_Industry[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_C], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_C], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future_formatted",
                                    "expression": "DIVIDE([OI_YTD_BUD_C_no_future], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_IP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_IP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_FP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_FP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_combined_no_future",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(Dim_Industries[industry]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(Dim_Functions[function]) , allselected()), \"F\", \"\")\n    var check_combination = check_region & check_industry & check_function\nreturn\n    IF(check_combination = \"\" || check_combination = \"R\", [OI_YTD_BUD_C_no_future_formatted], \n        IF(check_combination = \"I\", [OI_YTD_BUD_IP_no_future],\n            IF(check_combination = \"F\", [OI_YTD_BUD_FP_no_future], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_formatted",
                                    "expression": "DIVIDE([OI_per_P], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD",
                                    "expression": "DIVIDE([OI_PY_YTD], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_combined_YTD",
                                    "expression": "IF([OI_Monthly_BUD_combined_no_future] = \"\", BLANK(), DIVIDE([OI_Monthly_BUD_combined_no_future], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_no_future",
                                    "expression": "CALCULATE([OI_Monthly_BUD_C], MONTH(OI_Budget_Countries[FirstDayOfMonth]) < MONTH(TODAY())-1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_no_future_formatted",
                                    "expression": "DIVIDE([OI_Monthly_BUD_C_no_future], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_FP_no_future",
                                    "expression": "CALCULATE([OI_Monthly_BUD_FP], MONTH(OI_Budget_Platforms_Function[FirstDayOfMonth]) < MONTH(TODAY())-1)\n\n//IF(MAX('pub dim_date'[Date]) <= TODAY(), [OI_Monthly_BUD_FP], BLANK())",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_IP_no_future",
                                    "expression": "CALCULATE([OI_Monthly_BUD_IP], MONTH(OI_Budget_Platforms_Industry[FirstDayOfMonth]) < MONTH(TODAY())-1)\n\n//IF(MAX('pub dim_date'[Date]) <= TODAY(), [OI_Monthly_BUD_IP], BLANK())",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_combined_no_future",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(Dim_Industries[industry]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(Dim_Functions[function]) , allselected()), \"F\", \"\")\n    var check_subplatform_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subplatform]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_industry = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[industry_subject]), ALLSELECTED()), \"SI\", \"\")\n    var check_subject_function = IF(CALCULATE(ISFILTERED('msr v_fc_order_income_accumulated'[function_subject]), ALLSELECTED()), \"SF\", \"\")\n    var check_combination = check_region & check_industry & check_function & check_subplatform_industry & check_subject_industry & check_subject_function\nreturn\n    IF(check_combination = \"R\", [OI_Monthly_BUD_C_no_future_formatted], \n        IF(check_combination = \"\" || check_combination = \"I\", [OI_Monthly_BUD_IP_no_future],\n            IF(check_combination = \"F\", [OI_Monthly_BUD_FP_no_future], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_OLD",
                                    "expression": "SUM('msr v_fc_order_income_accumulated'[order_income_current_dax])",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_T\"\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Countries",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Countries_T\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Function",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] <> \"Health & Consumer\" and [Platform] <> \"Industrials\" and [Platform] <> \"Regulated & Infrastructure\" and [Platform] <> \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "pub v_ll_company_to_region",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    pub_v_ll_company_to_region = Source{[Schema=\"pub\",Item=\"v_ll_company_to_region\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_v_ll_company_to_region, each ([company_id] <> \"77\")),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows\",\"polariXpartner\",\"PXPartner\",Replacer.ReplaceText,{\"region_reporting_level3\"}),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Replaced Value\", \"region_reporting_level1_sort\", each if [region_reporting_level1] = \"EMEA\" then 1 else if [region_reporting_level1] = \"Non-operational companies\" then 6 else if [region_reporting_level1] = \"Holding\" then 5 else if [region_reporting_level1] = \"Other RB companies\" then 4 else if [region_reporting_level1] = \"Americas\" then 2 else if [region_reporting_level1] = \"Asia\" then 3 else if [region_reporting_level1] = \"RUS\" then 7 else null, type number)\nin\n    #\"Added Conditional Column\""
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Industry",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] = \"Health & Consumer\" or [Platform] = \"Industrials\" or [Platform] = \"Regulated & Infrastructure\" or [Platform] = \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_adj_E",
                            "columns": [
                                {
                                    "name": "rownumber",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "share",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    msr_v_fc_order_income_accumulated_adj = Source{[Schema=\"msr\",Item=\"v_fc_order_income_accumulated_adj\"]}[Data],\n    #\"Sorted Rows\" = Table.Sort(msr_v_fc_order_income_accumulated_adj,{{\"project_number\", Order.Ascending}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Sorted Rows\", each [order_income] < 0),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows\",{\"order_income\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"order_income\", each 0, type number),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"rownumber\", \"project_number\", \"project_name\", \"industry\", \"industry_subject\", \"function\", \"function_subject\", \"value\", \"project_startdate\", \"project_enddate\", \"order_income\", \"report_month\", \"company_name\", \"share\"})\nin\n    #\"Reordered Columns\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Functions",
                            "columns": [
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WCgoIUYrViVbyzCtLLS7JL1IILi0oyC8qAQu6ZKZnliTmgNn+BalFiSWZ+XnFYG5wCZCXml6pEFNqYGBkpuBfkpFaBJSKBQA=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [function = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"function\", type text}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Industries",
                            "columns": [
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WCkpNL81JLElNUYgpNTAwMlPwzEsrSiwuKSpNLiktSlWK1YlWCk4tKstMTi0GczzzUkqB0pmJORC+R2piTkkGTLdzfl5xaW5qkVJsLAA=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [industry = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"industry\", type text}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "Jobcodes",
                            "expression": "let\n    Source = Jobcodes_T,\n    Publish = Source\nin\n    Publish"
                        },
                        {
                            "name": "Jobcodes_Excel",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"Vc45DoAwDETRu1BTOJi1xCZFIkVYcYkQ978FdEzKp5niX1eXT3mIgu3c3T1waBl+BrKagIsVOIfZyq+BXHHcxGEcJVYgN2SSDOOG4kkxkGfdse9IFfvUC/ZpI4+Y55jHbqA1f9v9Ag==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Jobcode_Excel = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Jobcode_Excel\", type text}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Jobcode_Excel\", Splitter.SplitTextByDelimiter(\"_\", QuoteStyle.Csv), {\"Jobcode_Excel.1\", \"Jobcode_Excel.2\"}),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Jobcode_Excel.1\", type text}, {\"Jobcode_Excel.2\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type1\",{\"Jobcode_Excel.1\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Jobcode_Excel.2\", \"Jobcode_Excel\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_utilization_target",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"key_date\", \"emp_id\", \"job_code\", \"country_code_iso3\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"job.Kurz-Bezeichnung\", \"job_short\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"key_date\", \"emp_id\", \"country_code_iso3\", \"job_code\", \"job_short\", \"job.Bezeichnung\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "sec ll_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_ll_job = Source{[Schema=\"sec\",Item=\"ll_job\"]}[Data],\n    #\"Merged Queries\" = Table.NestedJoin(sec_ll_job, {\"job_reporting_level4\"}, job_sort, {\"job_reporting_level4\"}, \"job_sort\", JoinKind.LeftOuter),\n    #\"Expanded job_sort\" = Table.ExpandTableColumn(#\"Merged Queries\", \"job_sort\", {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"})\nin\n    #\"Expanded job_sort\""
                        },
                        {
                            "name": "platform_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "job_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/job_sort.xlsx\"), null, true),\n    job_sort_Table = Source{[Item=\"job_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(job_sort_Table,{{\"job_reporting_level1\", type text}, {\"job_reporting_level2\", type text}, {\"job_reporting_level3\", type text}, {\"job_reporting_level4\", type text}, {\"job_reporting_level4_sort\", Int64.Type}, {\"job_reporting_level1_sort\", Int64.Type}, {\"job_reporting_level2_sort\", Int64.Type}, {\"job_reporting_level3_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "msr v_byd_daily_rates",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_byd_daily_rates = datahub{[Schema=\"msr\",Item=\"v_byd_daily_rates\"]}[Data]\nin\n    msr_v_byd_daily_rates"
                        },
                        {
                            "name": "msr v_employee_utilization_T",
                            "expression": "let\n    Source = #\"msr v_employee_utilization_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_hr_employee_job_matrix\", {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}, {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each ([job.Im Scope] = \"x\"))\nin\n    #\"Filtered Rows1\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_T",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([key_date]) or Date.IsInPreviousYear([key_date])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"job_code\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"JobGroup\", \"Jobcode_Excel\"}, {\"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"job.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([job.Im Scope] = \"x\")),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows1\", {\"job_code\", \"company_id_byd\"}, #\"msr v_byd_daily_rates\", {\"jobcode_id\", \"company_id\"}, \"msr v_byd_daily_rates\", JoinKind.LeftOuter),\n    #\"Expanded msr v_byd_daily_rates\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_byd_daily_rates\", {\"amount_eur\"}, {\"daily_rate_eur\"})\nin\n    #\"Expanded msr v_byd_daily_rates\""
                        },
                        {
                            "name": "rep v_hr_employee_T",
                            "expression": "let\n    Source = #\"rep v_hr_employee_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each [ter_max_date] > #date(2022, 12, 31)),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"jobcode_id\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Jobcode_Excel\"}, {\"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([Jobcodes.Im Scope] = \"x\")),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows1\",\"Junior Consultant 1##\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Junior Consultant 1#\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Group Function RB N3XT\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"jobcode_id\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"company_id\"}, #\"pub v_ll_company_to_region\", {\"company_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"pub v_ll_company_to_region\", {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}, {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Expanded pub v_ll_company_to_region\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Reordered Columns\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_id\", \"platform_1_sort\"}, {\"platform_1_id.1\", \"platform_1_sort\"}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Expanded platform_sort\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_1_sort\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns1\",{{\"region\", \"region.old\"}}),\n    #\"Cleaned Text\" = Table.TransformColumns(#\"Renamed Columns\",{{\"job_reporting_level2\", Text.Clean, type text}}),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"job_reporting_level2\", Text.Trim, type text}}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Trimmed Text\",null,9,Replacer.ReplaceValue,{\"platform_1_sort\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value5\",\"9720\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Group Function F&C\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"})\nin\n    #\"Replaced Value4\""
                        },
                        {
                            "name": "Jobcodes_T",
                            "expression": "let\n    Source = Jobcodes_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type1\", {\"Jobcode\"}, Jobcodes_Excel, {\"Jobcode_Excel\"}, \"Jobcodes_Excel\", JoinKind.FullOuter),\n    #\"Expanded Jobcodes_Excel\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes_Excel\", {\"Jobcode_Excel\"}, {\"Jobcode_Excel\"})\nin\n    #\"Expanded Jobcodes_Excel\""
                        },
                        {
                            "name": "msr v_employee_utilization_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_utilization = datahub{[Schema=\"msr\",Item=\"v_employee_utilization\"]}[Data]\nin\n    msr_v_employee_utilization"
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_hr_employee_job_matrix = datahub{[Schema=\"msr\",Item=\"v_hr_employee_job_matrix\"]}[Data]\nin\n    msr_v_hr_employee_job_matrix"
                        },
                        {
                            "name": "rep v_hr_employee_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_hr_employee = datahub{[Schema=\"rep\",Item=\"v_hr_employee\"]}[Data]\nin\n    rep_v_hr_employee"
                        },
                        {
                            "name": "Jobcodes_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data]\nin\n    Jobcodes_Table"
                        },
                        {
                            "name": "xlsx utilization_targets_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/2023_Budget_Utilization_Capture%20rate.xlsx\"), null, true),\n    #\"Utilization & Cap. Rate Bdg23_Sheet\" = Source{[Item=\"Utilization & Cap. Rate Bdg23\",Kind=\"Sheet\"]}[Data]\nin\n    #\"Utilization & Cap. Rate Bdg23_Sheet\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_T",
                            "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Inserted Month\" = Table.AddColumn(Source, \"Month\", each Date.Month([report_month]), Int64.Type),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Month\",{\"Month\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"report_month_previous\", each Date.AddMonths([report_month], -1), type date),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Added Custom\", \"report_month_previous_id\", each Text.AfterDelimiter(Text.From([report_month_previous], \"de-DE\"), \".\"), type text),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Inserted Text After Delimiter\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_previous_id\"}, #\"msr v_fc_order_income_accumulated_E\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_id\"}, \"msr v_fc_order_income_accumulated_source\", JoinKind.LeftOuter),\n    #\"Expanded msr v_fc_order_income_accumulated_source\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_fc_order_income_accumulated_source\", {\"order_income\"}, {\"order_income_previous\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded msr v_fc_order_income_accumulated_source\",null,0,Replacer.ReplaceValue,{\"order_income_previous\"}),\n    #\"Added Custom1\" = Table.AddColumn(#\"Replaced Value\", \"order_income_current\", each [order_income] - [order_income_previous], type number),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Custom1\",{{\"order_income\", \"order_income_total\"}}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Renamed Columns\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"industry\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"function\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"industry\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort2\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded platform_sort2\",{{\"platform_1_sort\", \"industry_sort\"}, {\"platform_1_name_short\", \"industry_name_short\"}}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Renamed Columns2\", {\"function\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Expanded platform_sort\",{{\"platform_1_sort\", \"function_sort\"}, {\"platform_1_name_short\", \"function_name_short\"}}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Renamed Columns3\", {\"project_number\", \"report_month_id\"}, #\"sec acp_orderIncome_byMonth_E\", {\"project_number\", \"report_month_id\"}, \"sec acp_orderIncome_byMonth_E\", JoinKind.LeftOuter),\n    #\"Expanded sec acp_orderIncome_byMonth\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"sec acp_orderIncome_byMonth_E\", {\"orderIncome\"}, {\"orderIncome\"}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded sec acp_orderIncome_byMonth\",{{\"orderIncome\", \"order_income_GROSS\"}}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Renamed Columns1\",\"Hongkong\",\"Hong Kong\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Middle East Bahr.\",\"Middle East\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"PX America\",\"PXNorth America\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"PX Engineers\",\"PXEngineering\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"PX Partner\",\"PXBeteiligungs\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Rep. of Korea\",\"South Korea\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Singapur\",\"Singapore\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value9\",\"TMG\",\"Turnaround Management GmbH\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value10\",\"UK\",\"United Kingdom\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Merged Queries4\" = Table.NestedJoin(#\"Replaced Value11\", {\"industry_subject\"}, subplatforms_industry, {\"industry_subject\"}, \"subplatforms_industry\", JoinKind.LeftOuter),\n    #\"Expanded subplatforms_industry\" = Table.ExpandTableColumn(#\"Merged Queries4\", \"subplatforms_industry\", {\"industry_subplatform\"}, {\"industry_subplatform\"}),\n    #\"Replaced Value12\" = Table.ReplaceValue(#\"Expanded subplatforms_industry\",\"Turnaround Management GmbH\",\"TMG\",Replacer.ReplaceText,{\"company_name\"})\nin\n    #\"Replaced Value12\""
                        },
                        {
                            "name": "sec acp_orderIncome_byMonth_E",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_acp_orderIncome_byMonth = Source{[Schema=\"sec\",Item=\"acp_orderIncome_byMonth\"]}[Data],\n    #\"Added Custom Column\" = Table.AddColumn(sec_acp_orderIncome_byMonth, \"report_month_id\", each Text.Combine({Text.PadStart(Text.From([month], \"de-DE\"), 2, \"0\"), \".\", Text.From([year], \"de-DE\")}), type text)\nin\n    #\"Added Custom Column\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_fc_order_income_accumulated = datahub{[Schema=\"msr\",Item=\"v_fc_order_income_accumulated\"]}[Data],\n    #\"Appended Query\" = Table.Combine({msr_v_fc_order_income_accumulated, #\"msr v_fc_order_income_accumulated_adj_E\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Appended Query\", \"report_month_id\", each Text.AfterDelimiter(Text.From([report_month], \"de-DE\"), \".\"), type text),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Inserted Text After Delimiter\",null,0,Replacer.ReplaceValue,{\"order_income\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "OI_Budget_Countries_T",
                            "expression": "let\n    Source = OI_Budget_Countries_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", type number}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type number}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", type number}, {\"SEA\", type number}, {\"IDN\", type number}, {\"MMR\", type number}, {\"MYS\", type number}, {\"SGP\", type number}, {\"THA\", type number}, {\"VNM\", type number}, {\"Asia\", type number}, {\"Polarix\", type number}, {\"PX Partner\", type number}, {\"PX Engineers\", type number}, {\"PX America\", type number}, {\"TMG\", type number}, {\"Other RB companies\", type number}, {\"Subtotal\", type number}, {\"HOL\", type number}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"Country\", \"Period\"}, {\"Column60\", \"Global Adjustment\"}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"BHR/KSA/UAE\", \"OLD CHE\", \"EMEA\", \"Americas\", \"CHN_1\", \"HKG\", \"Asia\", \"Other RB companies\", \"Subtotal\", \"HOL\", \"Subtotal_2\", \"Total\", \"ME\", \"SEA\", \"DACH\"}),\n    #\"Removed Bottom Rows1\" = Table.RemoveLastN(#\"Removed Columns\",1),\n    #\"Added Year\" = Table.AddColumn(#\"Removed Bottom Rows1\", \"Year\", each Text.BeforeDelimiter([Period], \"_\"), type text),\n    #\"Added MonthName\" = Table.AddColumn(#\"Added Year\", \"MonthName\", each Text.BetweenDelimiters([Period], \"_\", \"_\", 1, 0), type text),\n    #\"Added Month\" = Table.AddColumn(#\"Added MonthName\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Added Month\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type1\",{\"Period\", \"Year\", \"MonthName\", \"Month\"}),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Removed Columns1\", {\"FirstDayOfMonth\"}, \"Attribute\", \"Value\"),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Unpivoted Other Columns\",{{\"Attribute\", \"Country\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",\"GER\",\"DEU\",Replacer.ReplaceText,{\"Country\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"UK\",\"GBR\",Replacer.ReplaceValue,{\"Country\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"UAE\",\"ARE\",Replacer.ReplaceText,{\"Country\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value2\",\"MOR\",\"MAR\",Replacer.ReplaceText,{\"Country\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"KSA\",\"SAU\",Replacer.ReplaceText,{\"Country\"}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"NOR\",\"SWE\",Replacer.ReplaceText,{\"Country\"})\nin\n    #\"Replaced Value5\""
                        },
                        {
                            "name": "OI_Budget_Platforms_T",
                            "expression": "let\n    Source = OI_Budget_Platforms_E,\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(Source, {\"[EUR m]\"}, \"Attribute\", \"Value\"),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Unpivoted Other Columns\",{{\"Value\", type number}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"[EUR m]\", \"Platform\"}, {\"Attribute\", \"MonthName\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Year\", each 2023, Int64.Type),\n    #\"Added Month\" = Table.AddColumn(#\"Added Custom\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Added Month\",{{\"Year\", type text}, {\"Month\", type text}}),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Changed Type1\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Changed Type2\",{\"FirstDayOfMonth\", \"Platform\", \"MonthName\", \"OI_Budget\", \"Year\", \"Month\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Reordered Columns\",{\"MonthName\", \"Year\", \"Month\"})\nin\n    #\"Removed Columns\""
                        },
                        {
                            "name": "OI_Budget_Countries_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Countries\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\", 6),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 29),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Bottom Rows\", {\"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\", \"Column17\", \"Column18\", \"Column19\", \"Column20\", \"Column21\", \"Column22\", \"Column23\", \"Column24\", \"Column25\", \"Column26\", \"Column27\", \"Column28\", \"Column29\", \"Column30\", \"Column31\", \"Column32\", \"Column33\", \"Column34\", \"Column35\", \"Column36\", \"Column37\", \"Column38\", \"Column39\", \"Column40\", \"Column41\", \"Column42\", \"Column43\", \"Column44\", \"Column45\", \"Column46\", \"Column47\", \"Column48\", \"Column49\", \"Column50\", \"Column51\", \"Column52\", \"Column53\", \"Column54\", \"Column55\", \"Column56\", \"Column57\", \"Column58\", \"Column59\", \"Column60\", \"Column61\", \"Column62\"}),\n    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> \"\")),\n    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Other Columns\", each not List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_)))),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Blank Rows\", [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", Int64.Type}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type any}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", Int64.Type}, {\"SEA\", Int64.Type}, {\"IDN\", Int64.Type}, {\"MMR\", Int64.Type}, {\"MYS\", Int64.Type}, {\"SGP\", Int64.Type}, {\"THA\", Int64.Type}, {\"VNM\", Int64.Type}, {\"Asia\", type number}, {\"Polarix\", type any}, {\"PX Partner\", type any}, {\"PX Engineers\", type any}, {\"PX America\", type any}, {\"TMG\", type any}, {\"Other RB companies\", type any}, {\"Subtotal\", type number}, {\"HOL\", type any}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "OI_Budget_Platforms_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Platforms\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\",3),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 17),\n    #\"Removed Alternate Rows\" = Table.AlternateRows(#\"Removed Bottom Rows\",2,1,1),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Alternate Rows\", each ([Column2] <> \"Total\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Column2\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\"}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Other Columns\", [PromoteAllScalars=true])\nin\n    #\"Promoted Headers\""
                        },
                        {
                            "name": "subplatforms_industry",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports/Shared%20Documents/General/Master%20Data/2023-08-22_Subplatforms.xlsx\"), null, true),\n    industry_subplatform_Table = Source{[Item=\"industry_subplatform\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(industry_subplatform_Table,{{\"industry\", type text}, {\"industry_subject\", type text}, {\"Column1\", Int64.Type}, {\"industry_subplatform\", type text}})\nin\n    #\"Changed Type\""
                        }
                    ],
                    "configuredBy": "matthias.gessenay@org.rolandberger.com",
                    "configuredById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "isEffectiveIdentityRequired": false,
                    "isEffectiveIdentityRolesRequired": false,
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-08-28T08:55:36.087",
                    "contentProviderType": "PbixInImportMode",
                    "datasourceUsages": [
                        {
                            "datasourceInstanceId": "946ea439-62e4-4715-b0ef-ccbeadf8383d"
                        }
                    ],
                    "misconfiguredDatasourceUsages": [
                        {
                            "datasourceInstanceId": "ff1b8dd4-104b-42c8-82f7-6f9e3ac19c95"
                        },
                        {
                            "datasourceInstanceId": "918fd35f-ba7f-42d9-af7a-e372ca4eeab9"
                        },
                        {
                            "datasourceInstanceId": "ad83fa59-55a1-4038-b8d2-5b11b07a4fad"
                        },
                        {
                            "datasourceInstanceId": "2509d929-2298-4623-8a0e-dc5e3181de05"
                        },
                        {
                            "datasourceInstanceId": "3e436f3a-a73f-410d-87f2-027dda870b3c"
                        },
                        {
                            "datasourceInstanceId": "3336848e-4278-4d97-8038-83d48054a6c5"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "110e933e-7c16-417a-986d-ad732de0725e",
                    "name": "Performance Summary - Key Account Manager",
                    "tables": [
                        {
                            "name": "msr v_employee_utilization",
                            "columns": [
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "absence_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "training_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_public_holiday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_weekend",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TA: Vacation & other leave",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[vacation_hours] + 'msr v_employee_utilization'[leave_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "TA: Target hours adj.",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[target_hours] - 'msr v_employee_utilization'[TA: Vacation & other leave] - 'msr v_employee_utilization'[training_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "booked_hours",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[absence_hours] + 'msr v_employee_utilization'[training_hours] + 'msr v_employee_utilization'[productive_hours_utilization]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "acq_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Utilization % Day",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nif('msr v_employee_utilization'[target_hours] = 0 && 'msr v_employee_utilization'[productive_hours_utilization] > 0, 8,\nDIVIDE('msr v_employee_utilization'[productive_hours_utilization], 'msr v_employee_utilization'[target_hours],0))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Utilization_target_hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %",
                                    "expression": "\nDIVIDE(\n\t[Utilization_hours_on_client_project],\n\t[Utilization_target_hours]\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target",
                                    "expression": "0.8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance",
                                    "expression": "'msr v_employee_utilization'[Utilization %] - 'msr v_employee_utilization'[Utilization Target]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance String",
                                    "expression": "\"(\" & 'msr v_employee_utilization'[Utilization Performance Short] & \"ppt.)\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance Short",
                                    "expression": "FIXED('msr v_employee_utilization'[Utilization Performance] * 100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target String",
                                    "expression": "\"Target: \" & 'msr v_employee_utilization'[Utilization Target] * 100 & \"%\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target & Performance",
                                    "expression": "[Utilization Target String] & \" \" & [Utilization Performance String]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % CY",
                                    "expression": "\nvar productive_hours_utilization = CALCULATE(SUM('msr v_employee_utilization'[productive_hours_utilization]), DATESYTD('pub dim_date'[Date]))\n \n Return\n    productive_hours_utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute_2",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %_2",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (all vs th)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[booked_hours]), SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (prod+ill vs adj.)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[productive_hours_utilization])+SUM('msr v_employee_utilization'[illness_hours]), SUM('msr v_employee_utilization'[TA: Target hours adj.]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "TA: Target hours adj. Total",
                                    "expression": "SUM('msr v_employee_utilization'[TA: Target hours adj.])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (reported)",
                                    "expression": "DIVIDE([Hours_reported], [TA: Target hours adj. Total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness",
                                    "expression": "SUM('msr v_employee_utilization'[illness_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge",
                                    "expression": "[Utilization_hours_illness] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal",
                                    "expression": "SUM('msr v_employee_utilization'[inp_project_hours_adj])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge",
                                    "expression": "[Utilization_hours_internal] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq",
                                    "expression": "SUM('msr v_employee_utilization'[acq_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge",
                                    "expression": "[Utilization_hours_acq] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training",
                                    "expression": "SUM('msr v_employee_utilization'[training_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge",
                                    "expression": "[Utilization_hours_training] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave",
                                    "expression": "SUM('msr v_employee_utilization'[vacation_hours]) + SUM('msr v_employee_utilization'[leave_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion",
                                    "expression": "\n    IF(ISBLANK(VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)), 0, (VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % PY",
                                    "expression": "CALCULATE([Utilization %_2], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted",
                                    "expression": "\n    VAR number_decimal = DIVIDE([Utilization_target_hours], 1000)\n    VAR number_whole = FIXED(number_decimal, 0)\nRETURN\n    number_whole & \"k h\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted_2",
                                    "expression": "[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge_formatted",
                                    "expression": "[Utilization_hours_vacation_leave_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization_formatted",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge_formatted",
                                    "expression": "[Utilization_hours_training_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge_formatted",
                                    "expression": "[Utilization_hours_illness_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge_formatted",
                                    "expression": "[Utilization_hours_internal_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge_formatted",
                                    "expression": "[Utilization_hours_acq_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project_formatted",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-4)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "start_3_month",
                                    "expression": "EOMONTH(TODAY(),-4)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M_test",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n        MIN('pub dim_date'[Date]),\n        FILTER(\n            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month))\nRETURN\n    utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_12M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_txt",
                                    "expression": "\"L12M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_12M], \"0%\") & \"  |  L3M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_3M], \"0%\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Customer",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Internal_Acq_Sick",
                                    "expression": "([Utilization_hours_illness_bridge_formatted] + [Utilization_hours_internal_bridge_formatted] + [Utilization_hours_acq_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Vacation_Leave_Training",
                                    "expression": "([Utilization_hours_vacation_leave_bridge_formatted] + [Utilization_hours_training_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG",
                                    "expression": "AVERAGE('rep v_hr_employee'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Target_Hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Missing_Hours",
                                    "expression": "[Timesheet_Target_Hours] - [Timesheet_Customer] - [Timesheet_Vacation_Leave_Training] - [Timesheet_Internal_Acq_Sick]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target for Table",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing",
                                    "expression": "[Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing_bridge",
                                    "expression": "[Utilization_hours_missing] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target]*100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % LM",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[Month] = MONTH(TODAY())-1, 'pub dim_date'[Year] = YEAR(TODAY()))\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % YTD",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[UpToCurrentMonth] = 1)\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'),'pub dim_date'[UpToCurrentMonth] = 1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target LM",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'), 'pub dim_date'[Month] = MONTH(TODAY())-1 && 'pub dim_date'[Year] = YEAR(TODAY()))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target YTD]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target LM]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_reported",
                                    "expression": "Not available",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Missing Hours",
                                    "expression": "\n    VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR missing_hours = target_hours_utilization - hours_reported \nRETURN\n    missing_hours",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Reported Hours",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Target Hours adj.",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD old",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, 'pub dim_date'[UpToCurrentMonth] = 1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted_table",
                                    "expression": "\"AVG Δ Year to date: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted_table",
                                    "expression": "\"AVG Δ Last Month: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_training_bridge",
                                    "expression": "[Utilization_hours_training]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_illness_bridge",
                                    "expression": "[Utilization_hours_illness]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_internal_bridge",
                                    "expression": "[Utilization_hours_internal]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_acq_bridge",
                                    "expression": "[Utilization_hours_acq]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing_bridge",
                                    "expression": "[Utilization_hours_missing]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Single Employee Selected",
                                    "expression": "\nvar emp = SELECTEDVALUE('rep v_hr_employee'[emp_id],\"multiple\")\nreturn\nif(emp = \"multiple\",0,1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Special Time Model",
                                    "expression": "if([Flag Single Employee Selected] && [Flag Special Time Model],\"Values > 100% may be due to special time models\",\"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Special Time Model",
                                    "expression": "if(max('msr v_employee_utilization'[Utilization % Day]) > 1, 1,0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp PY",
                                    "expression": "ROUND(CALCULATE('msr v_employee_utilization'[Utilization Δ Target pp], SAMEPERIODLASTYEAR('pub dim_date'[Date]))*100, 0)& \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Δ pp PY",
                                    "expression": "ROUND(('msr v_employee_utilization'[Utilization %_2] - 'msr v_employee_utilization'[Utilization % PY]) *100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_vacation_leave_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_vacation_leave_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_training_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_training_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur_utilization",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days_utilization]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_illness_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_illness_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_internal_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_internal_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_acq_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_acq_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_missing_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_missing_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_on_client_project",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_on_client_project]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing",
                                    "expression": "([Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing %",
                                    "expression": "\n    VAR missing = DIVIDE(\n\t                        [Utilization_hours_missing],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(missing <= 0, 0, missing)",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness]",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness %",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [utilization_hours_acq_internal_illness],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_utilization_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix",
                            "columns": [
                                {
                                    "name": "key_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "std_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "rep v_hr_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "per_org",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_emp_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_full_name",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone_mobile",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "name_prefix",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_display",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nickname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_display_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_manager_level",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "gender",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "empl_class_descr",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "national_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "middle_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "maiden_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "modify_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id_ps",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "legal_entity",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[country_code_iso3] & \"-\" & 'rep v_hr_employee'[jobcode_id]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED(utilization_budgets[utilization_target])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fullname_joblevel4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_joblevel4_mentor",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4] & \" - \" & 'rep v_hr_employee'[mentor_full_name]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id.1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region.old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Partner_count",
                                    "expression": "COUNTROWS(FILTER('rep v_hr_employee', FIND(\"Partner\", 'rep v_hr_employee'[jobcode],,0)>0))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"rep v_hr_employee_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "pub dim_date",
                            "columns": [
                                {
                                    "name": "DateKey",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Day",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Weekday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekDayName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekOfYear",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "MonthName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthnumber",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ISOWeekOfYearNameInCal",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & 'pub dim_date'[WeekOfYear]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MonthNameShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "UpToCurrentMonth",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR current_month = MONTH(TODAY())\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year, \n                    IF('pub dim_date'[Date].[MonthNo] <= current_month,\n                        1,\n                        0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Last4Next4Weeks",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR firstWeek = WEEKNUM(TODAY())-4\n    VAR lastWeek = WEEKNUM(TODAY())+3\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year,\n                    IF('pub dim_date'[WeekOfYear] >= firstWeek, \n                        IF('pub dim_date'[WeekOfYear] <= lastWeek,\n                            1,\n                            0),0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_month",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH(TODAY()) = 'pub dim_date'[Date].[MonthNo], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_week",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(WEEKNUM(TODAY()+1) = 'pub dim_date'[WeekOfYear], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "temp_CurrentWeek",
                                    "expression": "WEEKNUM(TODAY())",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_FirstWeek",
                                    "expression": "WEEKNUM(TODAY())-3",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_Lastweek",
                                    "expression": "WEEKNUM(TODAY())+4",
                                    "isHidden": false
                                },
                                {
                                    "name": "Column_width",
                                    "expression": "REPT(\"0\", 7)",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveMonthList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[MonthNameShort] ),\n        'pub dim_date'[MonthNameShort],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDay",
                                    "expression": "TODAY()",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDayWeek",
                                    "expression": "[CurrentDay] & \" (\" & [CurrentWeek] & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentWeek",
                                    "expression": "CALCULATE(\n                FIRSTNONBLANK('pub dim_date'[Calendarweek], \"\"), \n                FILTER(ALL('pub dim_date'), 'pub dim_date'[Date] = TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveWeekList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[Calendarweek] ),\n        'pub dim_date'[Calendarweek],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentMonth",
                                    "expression": "FORMAT (TODAY(),\"MMMM\")",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_dim_date = datahub{[Schema=\"pub\",Item=\"dim_date\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_dim_date, each Date.IsInCurrentYear([Date]) or Date.IsInPreviousYear([Date])),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"Date\", \"Day\", \"Weekday\", \"WeekDayName\", \"WeekOfYear\", \"Month\", \"MonthName\", \"Year\", \"YearMonthnumber\", \"FirstDayOfMonth\", \"YearMonthShort\", \"ISOWeekOfYearNameInCal\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Removed Other Columns\", \"MonthNameShort\", each Text.AfterDelimiter(Text.Proper([YearMonthShort]), \"/\"), type text)\nin\n    #\"Inserted Text After Delimiter\""
                                }
                            ]
                        },
                        {
                            "name": "Refresh_Timestamp",
                            "columns": [
                                {
                                    "name": "UTC timestamp",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Local timestamp with offset",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Last_refresh_local",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & WEEKNUM(Refresh_Timestamp[Last_refresh_local])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    StandardOffset = #duration(0, 1, 0, 0),\n    DaylightSavingTimeOffset = #duration(0, 2, 0, 0),\n\n    // get start and end of daylight saving time\n    // this code implements the rules of EU counties\n    // if it doesn't fill your expectations, visit https://en.wikipedia.org/wiki/Daylight_saving_time_by_country and implement your own function\n    fnDaylightSavingTimePeriod = (\n        now as datetime\n    ) as record => \n        let\n            // the daylight saving time starts on the last Sunday of March at 1am UTC\n            LastDayOfMarch = #date(Date.Year(now), 3, 31),\n            StartOfDaylightSavingTime = Date.AddDays(LastDayOfMarch, -Date.DayOfWeek(LastDayOfMarch)) & #time(1, 0, 0),\n            // the daylight saving time ends on the last Sunday in October at 1am UTC\n            LastDayOfOctober = #date(Date.Year(now), 10, 31),\n            EndOfDaylightSavingTime = Date.AddDays(LastDayOfOctober, -Date.DayOfWeek(LastDayOfOctober)) & #time(1, 0, 0)\n        in\n            [From = StartOfDaylightSavingTime, To = EndOfDaylightSavingTime],\n\n    // get a timestamp in UTC (with offset 00:00 all year long)\n    UtcNow = DateTimeZone.UtcNow(),\n    // convert UTC datetime with offset to datetime\n    UtcNowWithoutZone = DateTimeZone.RemoveZone(UtcNow),\n\n    // get daylight saving time period\n    DaylightSavingTimePeriod = fnDaylightSavingTimePeriod(UtcNowWithoutZone),\n\n    // convert UTC time to the local time with respect to current offset\n    LocalTimeWithOffset = \n        if UtcNowWithoutZone >= DaylightSavingTimePeriod[From] and UtcNowWithoutZone <= DaylightSavingTimePeriod[To] then\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(DaylightSavingTimeOffset), \n                Duration.Minutes(DaylightSavingTimeOffset)\n            )\n        else\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(StandardOffset), \n                Duration.Minutes(StandardOffset)\n            ),\n    \n    // current date time without offset\n    LocalTime = DateTimeZone.RemoveZone(LocalTimeWithOffset),\n\n    // result table\n    Result = #table(\n        type table\n        [\n            #\"UTC timestamp\" = datetime, \n            #\"UTC date\" = date,\n            #\"Local timestamp with offset\" = datetimezone,\n            #\"Local timestamp without offset\" = datetime\n        ], \n        {\n            {\n            UtcNowWithoutZone,\n            DateTime.Date(UtcNowWithoutZone),\n            LocalTimeWithOffset,\n            LocalTime\n            }\n        }\n    ),\n    #\"Inserted Date\" = Table.AddColumn(Result, \"Last_refresh_local\", each DateTime.Date([Local timestamp without offset]), type date),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Date\",{\"UTC date\", \"Local timestamp without offset\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "utilization_budgets",
                            "columns": [
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "utilization_budgets[country_code_iso3] & \"-\" & utilization_budgets[jobcode_id]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/utilization_budgets.xlsx\"), null, true),\n    utilization_budgets_Table = Source{[Item=\"utilization_budgets\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(utilization_budgets_Table,{{\"country_code_iso3\", type text}, {\"jobcode_id\", type text}, {\"jobcode\", type text}, {\"job_short\", type text}, {\"utilization_target\", type number}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_total",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "share",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_previous",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_current",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_GROSS",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "OI_Monthly",
                                    "expression": "SUM('msr v_fc_order_income_accumulated'[order_income_current])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD",
                                    "expression": "CALCULATE([OI_Monthly], ALL('pub dim_date'[Date]), 'pub dim_date'[Year] = YEAR(TODAY())-1, 'pub dim_date'[Month] <= MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_2",
                                    "expression": "CALCULATE(SUM(OI_Budget_Countries[OI_Budget]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P",
                                    "expression": "DIVIDE([OI_Monthly], [Partner_count])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_YTD",
                                    "expression": "DIVIDE([OI_YTD_BUD_2], CALCULATE(DISTINCTCOUNT('msr v_fc_order_income_accumulated'[project_number]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_per_P_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_formatted",
                                    "expression": "DIVIDE([OI_Monthly], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C",
                                    "expression": "\n    var check_industry = calculate(isfiltered(Dim_Industries[industry]) , allselected())\n    var check_function = calculate(isfiltered(Dim_Functions[function]) , allselected())\nreturn\n    if(check_industry || check_function, BLANK(), SUM(OI_Budget_Countries[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_formatted",
                                    "expression": "DIVIDE([OI_Monthly_BUD_C], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_FP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_industry = calculate(isfiltered(Dim_Industries[industry]) , allselected())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_industry, BLANK(), SUM(OI_Budget_Platforms_Function[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_IP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_function = calculate(isfiltered(Dim_Functions[function]) , allselected())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_function, BLANK(), SUM(OI_Budget_Platforms_Industry[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_C], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_C], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future_formatted",
                                    "expression": "DIVIDE([OI_YTD_BUD_C_no_future], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_IP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_IP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_FP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_FP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_combined_no_future",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(Dim_Industries[industry]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(Dim_Functions[function]) , allselected()), \"F\", \"\")\n    var check_combination = check_region & check_industry & check_function\nreturn\n    IF(check_combination = \"\" || check_combination = \"R\", [OI_YTD_BUD_C_no_future_formatted], \n        IF(check_combination = \"I\", [OI_YTD_BUD_IP_no_future],\n            IF(check_combination = \"F\", [OI_YTD_BUD_FP_no_future], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_formatted",
                                    "expression": "DIVIDE([OI_per_P], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD",
                                    "expression": "DIVIDE([OI_PY_YTD], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_combined_YTD",
                                    "expression": "IF([OI_YTD_BUD_combined_no_future] = \"\", BLANK(), DIVIDE([OI_YTD_BUD_combined_no_future], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1)))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_T\"\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Countries",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Countries_T\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Function",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] <> \"Health & Consumer\" and [Platform] <> \"Industrials\" and [Platform] <> \"Regulated & Infrastructure\" and [Platform] <> \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "pub v_ll_company_to_region",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    pub_v_ll_company_to_region = Source{[Schema=\"pub\",Item=\"v_ll_company_to_region\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_v_ll_company_to_region, each ([company_id] <> \"77\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Industries",
                            "columns": [
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"industry\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Duplicates\", each ([industry] <> \"Not assigned\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Functions",
                            "columns": [
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"function\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Duplicates\", each ([function] <> \"Not assigned\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Industry",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] = \"Health & Consumer\" or [Platform] = \"Industrials\" or [Platform] = \"Regulated & Infrastructure\" or [Platform] = \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "Jobcodes",
                            "expression": "let\n    Source = Jobcodes_T,\n    Publish = Source\nin\n    Publish"
                        },
                        {
                            "name": "Jobcodes_Excel",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"Vc45DoAwDETRu1BTOJi1xCZFIkVYcYkQ978FdEzKp5niX1eXT3mIgu3c3T1waBl+BrKagIsVOIfZyq+BXHHcxGEcJVYgN2SSDOOG4kkxkGfdse9IFfvUC/ZpI4+Y55jHbqA1f9v9Ag==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Jobcode_Excel = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Jobcode_Excel\", type text}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Jobcode_Excel\", Splitter.SplitTextByDelimiter(\"_\", QuoteStyle.Csv), {\"Jobcode_Excel.1\", \"Jobcode_Excel.2\"}),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Jobcode_Excel.1\", type text}, {\"Jobcode_Excel.2\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type1\",{\"Jobcode_Excel.1\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Jobcode_Excel.2\", \"Jobcode_Excel\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_utilization_target",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"key_date\", \"emp_id\", \"job_code\", \"country_code_iso3\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"job.Kurz-Bezeichnung\", \"job_short\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"key_date\", \"emp_id\", \"country_code_iso3\", \"job_code\", \"job_short\", \"job.Bezeichnung\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "sec ll_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_ll_job = Source{[Schema=\"sec\",Item=\"ll_job\"]}[Data],\n    #\"Merged Queries\" = Table.NestedJoin(sec_ll_job, {\"job_reporting_level4\"}, job_sort, {\"job_reporting_level4\"}, \"job_sort\", JoinKind.LeftOuter),\n    #\"Expanded job_sort\" = Table.ExpandTableColumn(#\"Merged Queries\", \"job_sort\", {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"})\nin\n    #\"Expanded job_sort\""
                        },
                        {
                            "name": "platform_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "job_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/job_sort.xlsx\"), null, true),\n    job_sort_Table = Source{[Item=\"job_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(job_sort_Table,{{\"job_reporting_level1\", type text}, {\"job_reporting_level2\", type text}, {\"job_reporting_level3\", type text}, {\"job_reporting_level4\", type text}, {\"job_reporting_level4_sort\", Int64.Type}, {\"job_reporting_level1_sort\", Int64.Type}, {\"job_reporting_level2_sort\", Int64.Type}, {\"job_reporting_level3_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "msr v_byd_daily_rates",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_byd_daily_rates = datahub{[Schema=\"msr\",Item=\"v_byd_daily_rates\"]}[Data]\nin\n    msr_v_byd_daily_rates"
                        },
                        {
                            "name": "msr v_employee_utilization_T",
                            "expression": "let\n    Source = #\"msr v_employee_utilization_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_hr_employee_job_matrix\", {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}, {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each ([job.Im Scope] = \"x\"))\nin\n    #\"Filtered Rows1\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_T",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([key_date]) or Date.IsInPreviousYear([key_date])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"job_code\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"JobGroup\", \"Jobcode_Excel\"}, {\"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"job.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([job.Im Scope] = \"x\")),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows1\", {\"job_code\", \"company_id_byd\"}, #\"msr v_byd_daily_rates\", {\"jobcode_id\", \"company_id\"}, \"msr v_byd_daily_rates\", JoinKind.LeftOuter),\n    #\"Expanded msr v_byd_daily_rates\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_byd_daily_rates\", {\"amount_eur\"}, {\"daily_rate_eur\"})\nin\n    #\"Expanded msr v_byd_daily_rates\""
                        },
                        {
                            "name": "rep v_hr_employee_T",
                            "expression": "let\n    Source = #\"rep v_hr_employee_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each [ter_max_date] > #date(2022, 12, 31)),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"jobcode_id\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Jobcode_Excel\"}, {\"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([Jobcodes.Im Scope] = \"x\")),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows1\",\"Junior Consultant 1##\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Junior Consultant 1#\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Group Function RB N3XT\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"jobcode_id\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"company_id\"}, #\"pub v_ll_company_to_region\", {\"company_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"pub v_ll_company_to_region\", {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}, {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Expanded pub v_ll_company_to_region\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Reordered Columns\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_id\", \"platform_1_sort\"}, {\"platform_1_id.1\", \"platform_1_sort\"}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Expanded platform_sort\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_1_sort\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns1\",{{\"region\", \"region.old\"}}),\n    #\"Cleaned Text\" = Table.TransformColumns(#\"Renamed Columns\",{{\"job_reporting_level2\", Text.Clean, type text}}),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"job_reporting_level2\", Text.Trim, type text}}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Trimmed Text\",null,9,Replacer.ReplaceValue,{\"platform_1_sort\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value5\",\"9720\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Group Function F&C\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"})\nin\n    #\"Replaced Value4\""
                        },
                        {
                            "name": "Jobcodes_T",
                            "expression": "let\n    Source = Jobcodes_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type1\", {\"Jobcode\"}, Jobcodes_Excel, {\"Jobcode_Excel\"}, \"Jobcodes_Excel\", JoinKind.FullOuter),\n    #\"Expanded Jobcodes_Excel\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes_Excel\", {\"Jobcode_Excel\"}, {\"Jobcode_Excel\"})\nin\n    #\"Expanded Jobcodes_Excel\""
                        },
                        {
                            "name": "msr v_employee_utilization_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_utilization = datahub{[Schema=\"msr\",Item=\"v_employee_utilization\"]}[Data]\nin\n    msr_v_employee_utilization"
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_hr_employee_job_matrix = datahub{[Schema=\"msr\",Item=\"v_hr_employee_job_matrix\"]}[Data]\nin\n    msr_v_hr_employee_job_matrix"
                        },
                        {
                            "name": "rep v_hr_employee_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_hr_employee = datahub{[Schema=\"rep\",Item=\"v_hr_employee\"]}[Data]\nin\n    rep_v_hr_employee"
                        },
                        {
                            "name": "Jobcodes_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data]\nin\n    Jobcodes_Table"
                        },
                        {
                            "name": "xlsx utilization_targets_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/2023_Budget_Utilization_Capture%20rate.xlsx\"), null, true),\n    #\"Utilization & Cap. Rate Bdg23_Sheet\" = Source{[Item=\"Utilization & Cap. Rate Bdg23\",Kind=\"Sheet\"]}[Data]\nin\n    #\"Utilization & Cap. Rate Bdg23_Sheet\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_T",
                            "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Inserted Month\" = Table.AddColumn(Source, \"Month\", each Date.Month([report_month]), Int64.Type),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Month\",{\"Month\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"report_month_previous\", each Date.AddMonths([report_month], -1), type date),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Added Custom\", \"report_month_previous_id\", each Text.AfterDelimiter(Text.From([report_month_previous], \"de-DE\"), \".\"), type text),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Inserted Text After Delimiter\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_previous_id\"}, #\"msr v_fc_order_income_accumulated_E\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_id\"}, \"msr v_fc_order_income_accumulated_source\", JoinKind.LeftOuter),\n    #\"Expanded msr v_fc_order_income_accumulated_source\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_fc_order_income_accumulated_source\", {\"order_income\"}, {\"order_income_previous\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded msr v_fc_order_income_accumulated_source\",null,0,Replacer.ReplaceValue,{\"order_income_previous\"}),\n    #\"Added Custom1\" = Table.AddColumn(#\"Replaced Value\", \"order_income_current\", each [order_income] - [order_income_previous], type number),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Custom1\",{{\"order_income\", \"order_income_total\"}}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Renamed Columns\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"industry\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"function\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"industry\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort2\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded platform_sort2\",{{\"platform_1_sort\", \"industry_sort\"}, {\"platform_1_name_short\", \"industry_name_short\"}}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Renamed Columns2\", {\"function\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Expanded platform_sort\",{{\"platform_1_sort\", \"function_sort\"}, {\"platform_1_name_short\", \"function_name_short\"}}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Renamed Columns3\", {\"project_number\", \"report_month_id\"}, #\"sec acp_orderIncome_byMonth_E\", {\"project_number\", \"report_month_id\"}, \"sec acp_orderIncome_byMonth_E\", JoinKind.LeftOuter),\n    #\"Expanded sec acp_orderIncome_byMonth\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"sec acp_orderIncome_byMonth_E\", {\"orderIncome\"}, {\"orderIncome\"}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded sec acp_orderIncome_byMonth\",{{\"orderIncome\", \"order_income_GROSS\"}}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Renamed Columns1\",\"Hongkong\",\"Hong Kong\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Middle East Bahr.\",\"Middle East\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"PX America\",\"PXNorth America\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"PX Engineers\",\"PXEngineering\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"PX Partner\",\"PXBeteiligungs\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Rep. of Korea\",\"South Korea\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Singapur\",\"Singapore\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value9\",\"TMG\",\"Turnaround Management GmbH\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value10\",\"UK\",\"United Kingdom\",Replacer.ReplaceText,{\"company_name\"})\nin\n    #\"Replaced Value11\""
                        },
                        {
                            "name": "sec acp_orderIncome_byMonth_E",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_acp_orderIncome_byMonth = Source{[Schema=\"sec\",Item=\"acp_orderIncome_byMonth\"]}[Data],\n    #\"Added Custom Column\" = Table.AddColumn(sec_acp_orderIncome_byMonth, \"report_month_id\", each Text.Combine({Text.PadStart(Text.From([month], \"de-DE\"), 2, \"0\"), \".\", Text.From([year], \"de-DE\")}), type text)\nin\n    #\"Added Custom Column\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_fc_order_income_accumulated = datahub{[Schema=\"msr\",Item=\"v_fc_order_income_accumulated\"]}[Data],\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(msr_v_fc_order_income_accumulated, \"report_month_id\", each Text.AfterDelimiter(Text.From([report_month], \"de-DE\"), \".\"), type text),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Inserted Text After Delimiter\",null,0,Replacer.ReplaceValue,{\"order_income\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "OI_Budget_Countries_T",
                            "expression": "let\n    Source = OI_Budget_Countries_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", type number}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type number}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", type number}, {\"SEA\", type number}, {\"IDN\", type number}, {\"MMR\", type number}, {\"MYS\", type number}, {\"SGP\", type number}, {\"THA\", type number}, {\"VNM\", type number}, {\"Asia\", type number}, {\"Polarix\", type number}, {\"PX Partner\", type number}, {\"PX Engineers\", type number}, {\"PX America\", type number}, {\"TMG\", type number}, {\"Other RB companies\", type number}, {\"Subtotal\", type number}, {\"HOL\", type number}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"Country\", \"Period\"}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"BHR/KSA/UAE\", \"OLD CHE\", \"EMEA\", \"Americas\", \"CHN_1\", \"HKG\", \"Asia\", \"Other RB companies\", \"Subtotal\", \"HOL\", \"Subtotal_2\", \"Column60\", \"Total\", \"ME\", \"SEA\", \"DACH\"}),\n    #\"Removed Bottom Rows1\" = Table.RemoveLastN(#\"Removed Columns\",1),\n    #\"Added Year\" = Table.AddColumn(#\"Removed Bottom Rows1\", \"Year\", each Text.BeforeDelimiter([Period], \"_\"), type text),\n    #\"Added MonthName\" = Table.AddColumn(#\"Added Year\", \"MonthName\", each Text.BetweenDelimiters([Period], \"_\", \"_\", 1, 0), type text),\n    #\"Added Month\" = Table.AddColumn(#\"Added MonthName\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Added Month\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type1\",{\"Period\", \"Year\", \"MonthName\", \"Month\"}),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Removed Columns1\", {\"FirstDayOfMonth\"}, \"Attribute\", \"Value\"),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Unpivoted Other Columns\",{{\"Attribute\", \"Country\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",\"GER\",\"DEU\",Replacer.ReplaceText,{\"Country\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "OI_Budget_Platforms_T",
                            "expression": "let\n    Source = OI_Budget_Platforms_E,\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(Source, {\"[EUR m]\"}, \"Attribute\", \"Value\"),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Unpivoted Other Columns\",{{\"Value\", type number}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"[EUR m]\", \"Platform\"}, {\"Attribute\", \"MonthName\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Year\", each 2023, Int64.Type),\n    #\"Added Month\" = Table.AddColumn(#\"Added Custom\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Added Month\",{{\"Year\", type text}, {\"Month\", type text}}),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Changed Type1\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Changed Type2\",{\"FirstDayOfMonth\", \"Platform\", \"MonthName\", \"OI_Budget\", \"Year\", \"Month\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Reordered Columns\",{\"MonthName\", \"Year\", \"Month\"})\nin\n    #\"Removed Columns\""
                        },
                        {
                            "name": "OI_Budget_Countries_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Countries\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\", 6),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 29),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Bottom Rows\", {\"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\", \"Column17\", \"Column18\", \"Column19\", \"Column20\", \"Column21\", \"Column22\", \"Column23\", \"Column24\", \"Column25\", \"Column26\", \"Column27\", \"Column28\", \"Column29\", \"Column30\", \"Column31\", \"Column32\", \"Column33\", \"Column34\", \"Column35\", \"Column36\", \"Column37\", \"Column38\", \"Column39\", \"Column40\", \"Column41\", \"Column42\", \"Column43\", \"Column44\", \"Column45\", \"Column46\", \"Column47\", \"Column48\", \"Column49\", \"Column50\", \"Column51\", \"Column52\", \"Column53\", \"Column54\", \"Column55\", \"Column56\", \"Column57\", \"Column58\", \"Column59\", \"Column60\", \"Column61\", \"Column62\"}),\n    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> \"\")),\n    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Other Columns\", each not List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_)))),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Blank Rows\", [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", Int64.Type}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type any}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", Int64.Type}, {\"SEA\", Int64.Type}, {\"IDN\", Int64.Type}, {\"MMR\", Int64.Type}, {\"MYS\", Int64.Type}, {\"SGP\", Int64.Type}, {\"THA\", Int64.Type}, {\"VNM\", Int64.Type}, {\"Asia\", type number}, {\"Polarix\", type any}, {\"PX Partner\", type any}, {\"PX Engineers\", type any}, {\"PX America\", type any}, {\"TMG\", type any}, {\"Other RB companies\", type any}, {\"Subtotal\", type number}, {\"HOL\", type any}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "OI_Budget_Platforms_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Platforms\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\",3),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 17),\n    #\"Removed Alternate Rows\" = Table.AlternateRows(#\"Removed Bottom Rows\",2,1,1),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Alternate Rows\", each ([Column2] <> \"Total\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Column2\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\"}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Other Columns\", [PromoteAllScalars=true])\nin\n    #\"Promoted Headers\""
                        }
                    ],
                    "configuredBy": "matthias.gessenay@org.rolandberger.com",
                    "configuredById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "isEffectiveIdentityRequired": false,
                    "isEffectiveIdentityRolesRequired": false,
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-08-28T08:55:59.557",
                    "contentProviderType": "PbixInImportMode",
                    "misconfiguredDatasourceUsages": [
                        {
                            "datasourceInstanceId": "ff1b8dd4-104b-42c8-82f7-6f9e3ac19c95"
                        },
                        {
                            "datasourceInstanceId": "918fd35f-ba7f-42d9-af7a-e372ca4eeab9"
                        },
                        {
                            "datasourceInstanceId": "ad83fa59-55a1-4038-b8d2-5b11b07a4fad"
                        },
                        {
                            "datasourceInstanceId": "2509d929-2298-4623-8a0e-dc5e3181de05"
                        },
                        {
                            "datasourceInstanceId": "3e436f3a-a73f-410d-87f2-027dda870b3c"
                        },
                        {
                            "datasourceInstanceId": "3336848e-4278-4d97-8038-83d48054a6c5"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "63acad8a-abcd-4201-b557-bfec35784975",
                    "name": "Performance Summary - Platform Head DACH",
                    "tables": [
                        {
                            "name": "msr v_employee_utilization",
                            "columns": [
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "absence_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "training_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_public_holiday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_weekend",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TA: Vacation & other leave",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[vacation_hours] + 'msr v_employee_utilization'[leave_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "TA: Target hours adj.",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[target_hours] - 'msr v_employee_utilization'[TA: Vacation & other leave] - 'msr v_employee_utilization'[training_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "booked_hours",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[absence_hours] + 'msr v_employee_utilization'[training_hours] + 'msr v_employee_utilization'[productive_hours_utilization]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "acq_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Utilization % Day",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nif('msr v_employee_utilization'[target_hours] = 0 && 'msr v_employee_utilization'[productive_hours_utilization] > 0, 8,\nDIVIDE('msr v_employee_utilization'[productive_hours_utilization], 'msr v_employee_utilization'[target_hours],0))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Utilization_target_hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %",
                                    "expression": "\nDIVIDE(\n\t[Utilization_hours_on_client_project],\n\t[Utilization_target_hours]\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target",
                                    "expression": "0.8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance",
                                    "expression": "'msr v_employee_utilization'[Utilization %] - 'msr v_employee_utilization'[Utilization Target]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance String",
                                    "expression": "\"(\" & 'msr v_employee_utilization'[Utilization Performance Short] & \"ppt.)\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance Short",
                                    "expression": "FIXED('msr v_employee_utilization'[Utilization Performance] * 100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target String",
                                    "expression": "\"Target: \" & 'msr v_employee_utilization'[Utilization Target] * 100 & \"%\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target & Performance",
                                    "expression": "[Utilization Target String] & \" \" & [Utilization Performance String]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % CY",
                                    "expression": "\nvar productive_hours_utilization = CALCULATE(SUM('msr v_employee_utilization'[productive_hours_utilization]), DATESYTD('pub dim_date'[Date]))\n \n Return\n    productive_hours_utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute_2",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %_2",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (all vs th)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[booked_hours]), SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (prod+ill vs adj.)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[productive_hours_utilization])+SUM('msr v_employee_utilization'[illness_hours]), SUM('msr v_employee_utilization'[TA: Target hours adj.]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "TA: Target hours adj. Total",
                                    "expression": "SUM('msr v_employee_utilization'[TA: Target hours adj.])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (reported)",
                                    "expression": "DIVIDE([Hours_reported], [TA: Target hours adj. Total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness",
                                    "expression": "SUM('msr v_employee_utilization'[illness_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge",
                                    "expression": "[Utilization_hours_illness] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal",
                                    "expression": "SUM('msr v_employee_utilization'[inp_project_hours_adj])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge",
                                    "expression": "[Utilization_hours_internal] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq",
                                    "expression": "SUM('msr v_employee_utilization'[acq_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge",
                                    "expression": "[Utilization_hours_acq] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training",
                                    "expression": "SUM('msr v_employee_utilization'[training_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge",
                                    "expression": "[Utilization_hours_training] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave",
                                    "expression": "SUM('msr v_employee_utilization'[vacation_hours]) + SUM('msr v_employee_utilization'[leave_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion",
                                    "expression": "\n    IF(ISBLANK(VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)), 0, (VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % PY",
                                    "expression": "CALCULATE([Utilization %_2], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted",
                                    "expression": "\n    VAR number_decimal = DIVIDE([Utilization_target_hours], 1000)\n    VAR number_whole = FIXED(number_decimal, 0)\nRETURN\n    number_whole & \"k h\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted_2",
                                    "expression": "[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge_formatted",
                                    "expression": "[Utilization_hours_vacation_leave_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization_formatted",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge_formatted",
                                    "expression": "[Utilization_hours_training_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge_formatted",
                                    "expression": "[Utilization_hours_illness_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge_formatted",
                                    "expression": "[Utilization_hours_internal_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge_formatted",
                                    "expression": "[Utilization_hours_acq_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project_formatted",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-4)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "start_3_month",
                                    "expression": "EOMONTH(TODAY(),-4)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M_test",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n        MIN('pub dim_date'[Date]),\n        FILTER(\n            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month))\nRETURN\n    utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_12M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_txt",
                                    "expression": "\"L12M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_12M], \"0%\") & \"  |  L3M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_3M], \"0%\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Customer",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Internal_Acq_Sick",
                                    "expression": "([Utilization_hours_illness_bridge_formatted] + [Utilization_hours_internal_bridge_formatted] + [Utilization_hours_acq_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Vacation_Leave_Training",
                                    "expression": "([Utilization_hours_vacation_leave_bridge_formatted] + [Utilization_hours_training_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG",
                                    "expression": "AVERAGE('rep v_hr_employee'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Target_Hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Missing_Hours",
                                    "expression": "[Timesheet_Target_Hours] - [Timesheet_Customer] - [Timesheet_Vacation_Leave_Training] - [Timesheet_Internal_Acq_Sick]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target for Table",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing",
                                    "expression": "[Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing_bridge",
                                    "expression": "[Utilization_hours_missing] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target]*100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % LM",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[Month] = MONTH(TODAY())-1, 'pub dim_date'[Year] = YEAR(TODAY()))\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % YTD",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[UpToCurrentMonth] = 1)\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'),'pub dim_date'[UpToCurrentMonth] = 1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target LM",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'), 'pub dim_date'[Month] = MONTH(TODAY())-1 && 'pub dim_date'[Year] = YEAR(TODAY()))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target YTD]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target LM]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_reported",
                                    "expression": "Not available",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Missing Hours",
                                    "expression": "\n    VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR missing_hours = target_hours_utilization - hours_reported \nRETURN\n    missing_hours",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Reported Hours",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Target Hours adj.",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD old",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, 'pub dim_date'[UpToCurrentMonth] = 1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted_table",
                                    "expression": "\"AVG Δ Year to date: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted_table",
                                    "expression": "\"AVG Δ Last Month: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_training_bridge",
                                    "expression": "[Utilization_hours_training]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_illness_bridge",
                                    "expression": "[Utilization_hours_illness]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_internal_bridge",
                                    "expression": "[Utilization_hours_internal]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_acq_bridge",
                                    "expression": "[Utilization_hours_acq]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing_bridge",
                                    "expression": "[Utilization_hours_missing]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Single Employee Selected",
                                    "expression": "\nvar emp = SELECTEDVALUE('rep v_hr_employee'[emp_id],\"multiple\")\nreturn\nif(emp = \"multiple\",0,1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Special Time Model",
                                    "expression": "if([Flag Single Employee Selected] && [Flag Special Time Model],\"Values > 100% may be due to special time models\",\"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Special Time Model",
                                    "expression": "if(max('msr v_employee_utilization'[Utilization % Day]) > 1, 1,0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp PY",
                                    "expression": "ROUND(CALCULATE('msr v_employee_utilization'[Utilization Δ Target pp], SAMEPERIODLASTYEAR('pub dim_date'[Date]))*100, 0)& \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Δ pp PY",
                                    "expression": "ROUND(('msr v_employee_utilization'[Utilization %_2] - 'msr v_employee_utilization'[Utilization % PY]) *100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_vacation_leave_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_vacation_leave_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_training_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_training_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur_utilization",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days_utilization]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_illness_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_illness_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_internal_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_internal_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_acq_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_acq_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_missing_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_missing_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_on_client_project",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_on_client_project]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing",
                                    "expression": "([Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing %",
                                    "expression": "\n    VAR missing = DIVIDE(\n\t                        [Utilization_hours_missing],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(missing <= 0, 0, missing)",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness]",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness %",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [utilization_hours_acq_internal_illness],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_utilization_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix",
                            "columns": [
                                {
                                    "name": "key_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "std_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "rep v_hr_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "per_org",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_emp_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_full_name",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone_mobile",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "name_prefix",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_display",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nickname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_display_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_manager_level",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "gender",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "empl_class_descr",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "national_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "middle_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "maiden_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "modify_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id_ps",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "legal_entity",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[country_code_iso3] & \"-\" & 'rep v_hr_employee'[jobcode_id]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED(utilization_budgets[utilization_target])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fullname_joblevel4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_joblevel4_mentor",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4] & \" - \" & 'rep v_hr_employee'[mentor_full_name]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id.1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region.old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Partner_count",
                                    "expression": "COUNTROWS(FILTER('rep v_hr_employee', FIND(\"Partner\", 'rep v_hr_employee'[jobcode],,0)>0))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"rep v_hr_employee_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "pub dim_date",
                            "columns": [
                                {
                                    "name": "DateKey",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Day",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Weekday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekDayName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekOfYear",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "MonthName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthnumber",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ISOWeekOfYearNameInCal",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & 'pub dim_date'[WeekOfYear]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MonthNameShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "UpToCurrentMonth",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR current_month = MONTH(TODAY())\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year, \n                    IF('pub dim_date'[Date].[MonthNo] <= current_month,\n                        1,\n                        0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Last4Next4Weeks",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR firstWeek = WEEKNUM(TODAY())-4\n    VAR lastWeek = WEEKNUM(TODAY())+3\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year,\n                    IF('pub dim_date'[WeekOfYear] >= firstWeek, \n                        IF('pub dim_date'[WeekOfYear] <= lastWeek,\n                            1,\n                            0),0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_month",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH(TODAY()) = 'pub dim_date'[Date].[MonthNo], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_week",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(WEEKNUM(TODAY()+1) = 'pub dim_date'[WeekOfYear], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "temp_CurrentWeek",
                                    "expression": "WEEKNUM(TODAY())",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_FirstWeek",
                                    "expression": "WEEKNUM(TODAY())-3",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_Lastweek",
                                    "expression": "WEEKNUM(TODAY())+4",
                                    "isHidden": false
                                },
                                {
                                    "name": "Column_width",
                                    "expression": "REPT(\"0\", 7)",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveMonthList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[MonthNameShort] ),\n        'pub dim_date'[MonthNameShort],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDay",
                                    "expression": "TODAY()",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDayWeek",
                                    "expression": "[CurrentDay] & \" (\" & [CurrentWeek] & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentWeek",
                                    "expression": "CALCULATE(\n                FIRSTNONBLANK('pub dim_date'[Calendarweek], \"\"), \n                FILTER(ALL('pub dim_date'), 'pub dim_date'[Date] = TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveWeekList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[Calendarweek] ),\n        'pub dim_date'[Calendarweek],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentMonth",
                                    "expression": "FORMAT (TODAY(),\"MMMM\")",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_dim_date = datahub{[Schema=\"pub\",Item=\"dim_date\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_dim_date, each Date.IsInCurrentYear([Date]) or Date.IsInPreviousYear([Date])),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"Date\", \"Day\", \"Weekday\", \"WeekDayName\", \"WeekOfYear\", \"Month\", \"MonthName\", \"Year\", \"YearMonthnumber\", \"FirstDayOfMonth\", \"YearMonthShort\", \"ISOWeekOfYearNameInCal\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Removed Other Columns\", \"MonthNameShort\", each Text.AfterDelimiter(Text.Proper([YearMonthShort]), \"/\"), type text)\nin\n    #\"Inserted Text After Delimiter\""
                                }
                            ]
                        },
                        {
                            "name": "Refresh_Timestamp",
                            "columns": [
                                {
                                    "name": "UTC timestamp",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Local timestamp with offset",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Last_refresh_local",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & WEEKNUM(Refresh_Timestamp[Last_refresh_local])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    StandardOffset = #duration(0, 1, 0, 0),\n    DaylightSavingTimeOffset = #duration(0, 2, 0, 0),\n\n    // get start and end of daylight saving time\n    // this code implements the rules of EU counties\n    // if it doesn't fill your expectations, visit https://en.wikipedia.org/wiki/Daylight_saving_time_by_country and implement your own function\n    fnDaylightSavingTimePeriod = (\n        now as datetime\n    ) as record => \n        let\n            // the daylight saving time starts on the last Sunday of March at 1am UTC\n            LastDayOfMarch = #date(Date.Year(now), 3, 31),\n            StartOfDaylightSavingTime = Date.AddDays(LastDayOfMarch, -Date.DayOfWeek(LastDayOfMarch)) & #time(1, 0, 0),\n            // the daylight saving time ends on the last Sunday in October at 1am UTC\n            LastDayOfOctober = #date(Date.Year(now), 10, 31),\n            EndOfDaylightSavingTime = Date.AddDays(LastDayOfOctober, -Date.DayOfWeek(LastDayOfOctober)) & #time(1, 0, 0)\n        in\n            [From = StartOfDaylightSavingTime, To = EndOfDaylightSavingTime],\n\n    // get a timestamp in UTC (with offset 00:00 all year long)\n    UtcNow = DateTimeZone.UtcNow(),\n    // convert UTC datetime with offset to datetime\n    UtcNowWithoutZone = DateTimeZone.RemoveZone(UtcNow),\n\n    // get daylight saving time period\n    DaylightSavingTimePeriod = fnDaylightSavingTimePeriod(UtcNowWithoutZone),\n\n    // convert UTC time to the local time with respect to current offset\n    LocalTimeWithOffset = \n        if UtcNowWithoutZone >= DaylightSavingTimePeriod[From] and UtcNowWithoutZone <= DaylightSavingTimePeriod[To] then\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(DaylightSavingTimeOffset), \n                Duration.Minutes(DaylightSavingTimeOffset)\n            )\n        else\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(StandardOffset), \n                Duration.Minutes(StandardOffset)\n            ),\n    \n    // current date time without offset\n    LocalTime = DateTimeZone.RemoveZone(LocalTimeWithOffset),\n\n    // result table\n    Result = #table(\n        type table\n        [\n            #\"UTC timestamp\" = datetime, \n            #\"UTC date\" = date,\n            #\"Local timestamp with offset\" = datetimezone,\n            #\"Local timestamp without offset\" = datetime\n        ], \n        {\n            {\n            UtcNowWithoutZone,\n            DateTime.Date(UtcNowWithoutZone),\n            LocalTimeWithOffset,\n            LocalTime\n            }\n        }\n    ),\n    #\"Inserted Date\" = Table.AddColumn(Result, \"Last_refresh_local\", each DateTime.Date([Local timestamp without offset]), type date),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Date\",{\"UTC date\", \"Local timestamp without offset\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "utilization_budgets",
                            "columns": [
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "utilization_budgets[country_code_iso3] & \"-\" & utilization_budgets[jobcode_id]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/utilization_budgets.xlsx\"), null, true),\n    utilization_budgets_Table = Source{[Item=\"utilization_budgets\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(utilization_budgets_Table,{{\"country_code_iso3\", type text}, {\"jobcode_id\", type text}, {\"jobcode\", type text}, {\"job_short\", type text}, {\"utilization_target\", type number}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_total",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "share",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_previous",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_current",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_GROSS",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "OI_Monthly",
                                    "expression": "SUM('msr v_fc_order_income_accumulated'[order_income_current])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD",
                                    "expression": "CALCULATE([OI_Monthly], ALL('pub dim_date'[Date]), 'pub dim_date'[Year] = YEAR(TODAY())-1, 'pub dim_date'[Month] <= MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_2",
                                    "expression": "CALCULATE(SUM(OI_Budget_Countries[OI_Budget]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P",
                                    "expression": "DIVIDE([OI_Monthly], [Partner_count])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_YTD",
                                    "expression": "DIVIDE([OI_YTD_BUD_2], CALCULATE(DISTINCTCOUNT('msr v_fc_order_income_accumulated'[project_number]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_per_P_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_formatted",
                                    "expression": "DIVIDE([OI_Monthly], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C",
                                    "expression": "\n    var check_industry = calculate(isfiltered(Dim_Industries[industry]) , allselected())\n    var check_function = calculate(isfiltered(Dim_Functions[function]) , allselected())\nreturn\n    if(check_industry || check_function, BLANK(), SUM(OI_Budget_Countries[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_formatted",
                                    "expression": "DIVIDE([OI_Monthly_BUD_C], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_FP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_industry = calculate(isfiltered(Dim_Industries[industry]) , allselected())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_industry, BLANK(), SUM(OI_Budget_Platforms_Function[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_IP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_function = calculate(isfiltered(Dim_Functions[function]) , allselected())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_function, BLANK(), SUM(OI_Budget_Platforms_Industry[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_C], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_C], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future_formatted",
                                    "expression": "DIVIDE([OI_YTD_BUD_C_no_future], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_IP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_IP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_FP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_FP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_combined_no_future",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(Dim_Industries[industry]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(Dim_Functions[function]) , allselected()), \"F\", \"\")\n    var check_combination = check_region & check_industry & check_function\nreturn\n    IF(check_combination = \"\" || check_combination = \"R\", [OI_YTD_BUD_C_no_future_formatted], \n        IF(check_combination = \"I\", [OI_YTD_BUD_IP_no_future],\n            IF(check_combination = \"F\", [OI_YTD_BUD_FP_no_future], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_formatted",
                                    "expression": "DIVIDE([OI_per_P], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD",
                                    "expression": "DIVIDE([OI_PY_YTD], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_combined_YTD",
                                    "expression": "IF([OI_YTD_BUD_combined_no_future] = \"\", BLANK(), DIVIDE([OI_YTD_BUD_combined_no_future], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1)))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_T\"\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Countries",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Countries_T\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Function",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] <> \"Health & Consumer\" and [Platform] <> \"Industrials\" and [Platform] <> \"Regulated & Infrastructure\" and [Platform] <> \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "pub v_ll_company_to_region",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    pub_v_ll_company_to_region = Source{[Schema=\"pub\",Item=\"v_ll_company_to_region\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_v_ll_company_to_region, each ([company_id] <> \"77\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Industries",
                            "columns": [
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"industry\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Duplicates\", each ([industry] <> \"Not assigned\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Functions",
                            "columns": [
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"function\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Duplicates\", each ([function] <> \"Not assigned\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Industry",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] = \"Health & Consumer\" or [Platform] = \"Industrials\" or [Platform] = \"Regulated & Infrastructure\" or [Platform] = \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "Jobcodes",
                            "expression": "let\n    Source = Jobcodes_T,\n    Publish = Source\nin\n    Publish"
                        },
                        {
                            "name": "Jobcodes_Excel",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"Vc45DoAwDETRu1BTOJi1xCZFIkVYcYkQ978FdEzKp5niX1eXT3mIgu3c3T1waBl+BrKagIsVOIfZyq+BXHHcxGEcJVYgN2SSDOOG4kkxkGfdse9IFfvUC/ZpI4+Y55jHbqA1f9v9Ag==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Jobcode_Excel = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Jobcode_Excel\", type text}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Jobcode_Excel\", Splitter.SplitTextByDelimiter(\"_\", QuoteStyle.Csv), {\"Jobcode_Excel.1\", \"Jobcode_Excel.2\"}),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Jobcode_Excel.1\", type text}, {\"Jobcode_Excel.2\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type1\",{\"Jobcode_Excel.1\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Jobcode_Excel.2\", \"Jobcode_Excel\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_utilization_target",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"key_date\", \"emp_id\", \"job_code\", \"country_code_iso3\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"job.Kurz-Bezeichnung\", \"job_short\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"key_date\", \"emp_id\", \"country_code_iso3\", \"job_code\", \"job_short\", \"job.Bezeichnung\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "sec ll_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_ll_job = Source{[Schema=\"sec\",Item=\"ll_job\"]}[Data],\n    #\"Merged Queries\" = Table.NestedJoin(sec_ll_job, {\"job_reporting_level4\"}, job_sort, {\"job_reporting_level4\"}, \"job_sort\", JoinKind.LeftOuter),\n    #\"Expanded job_sort\" = Table.ExpandTableColumn(#\"Merged Queries\", \"job_sort\", {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"})\nin\n    #\"Expanded job_sort\""
                        },
                        {
                            "name": "platform_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "job_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/job_sort.xlsx\"), null, true),\n    job_sort_Table = Source{[Item=\"job_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(job_sort_Table,{{\"job_reporting_level1\", type text}, {\"job_reporting_level2\", type text}, {\"job_reporting_level3\", type text}, {\"job_reporting_level4\", type text}, {\"job_reporting_level4_sort\", Int64.Type}, {\"job_reporting_level1_sort\", Int64.Type}, {\"job_reporting_level2_sort\", Int64.Type}, {\"job_reporting_level3_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "msr v_byd_daily_rates",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_byd_daily_rates = datahub{[Schema=\"msr\",Item=\"v_byd_daily_rates\"]}[Data]\nin\n    msr_v_byd_daily_rates"
                        },
                        {
                            "name": "msr v_employee_utilization_T",
                            "expression": "let\n    Source = #\"msr v_employee_utilization_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_hr_employee_job_matrix\", {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}, {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each ([job.Im Scope] = \"x\"))\nin\n    #\"Filtered Rows1\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_T",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([key_date]) or Date.IsInPreviousYear([key_date])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"job_code\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"JobGroup\", \"Jobcode_Excel\"}, {\"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"job.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([job.Im Scope] = \"x\")),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows1\", {\"job_code\", \"company_id_byd\"}, #\"msr v_byd_daily_rates\", {\"jobcode_id\", \"company_id\"}, \"msr v_byd_daily_rates\", JoinKind.LeftOuter),\n    #\"Expanded msr v_byd_daily_rates\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_byd_daily_rates\", {\"amount_eur\"}, {\"daily_rate_eur\"})\nin\n    #\"Expanded msr v_byd_daily_rates\""
                        },
                        {
                            "name": "rep v_hr_employee_T",
                            "expression": "let\n    Source = #\"rep v_hr_employee_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each [ter_max_date] > #date(2022, 12, 31)),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"jobcode_id\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Jobcode_Excel\"}, {\"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([Jobcodes.Im Scope] = \"x\")),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows1\",\"Junior Consultant 1##\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Junior Consultant 1#\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Group Function RB N3XT\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"jobcode_id\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"company_id\"}, #\"pub v_ll_company_to_region\", {\"company_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"pub v_ll_company_to_region\", {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}, {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Expanded pub v_ll_company_to_region\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Reordered Columns\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_id\", \"platform_1_sort\"}, {\"platform_1_id.1\", \"platform_1_sort\"}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Expanded platform_sort\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_1_sort\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns1\",{{\"region\", \"region.old\"}}),\n    #\"Cleaned Text\" = Table.TransformColumns(#\"Renamed Columns\",{{\"job_reporting_level2\", Text.Clean, type text}}),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"job_reporting_level2\", Text.Trim, type text}}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Trimmed Text\",null,9,Replacer.ReplaceValue,{\"platform_1_sort\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value5\",\"9720\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Group Function F&C\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"})\nin\n    #\"Replaced Value4\""
                        },
                        {
                            "name": "Jobcodes_T",
                            "expression": "let\n    Source = Jobcodes_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type1\", {\"Jobcode\"}, Jobcodes_Excel, {\"Jobcode_Excel\"}, \"Jobcodes_Excel\", JoinKind.FullOuter),\n    #\"Expanded Jobcodes_Excel\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes_Excel\", {\"Jobcode_Excel\"}, {\"Jobcode_Excel\"})\nin\n    #\"Expanded Jobcodes_Excel\""
                        },
                        {
                            "name": "msr v_employee_utilization_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_utilization = datahub{[Schema=\"msr\",Item=\"v_employee_utilization\"]}[Data]\nin\n    msr_v_employee_utilization"
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_hr_employee_job_matrix = datahub{[Schema=\"msr\",Item=\"v_hr_employee_job_matrix\"]}[Data]\nin\n    msr_v_hr_employee_job_matrix"
                        },
                        {
                            "name": "rep v_hr_employee_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_hr_employee = datahub{[Schema=\"rep\",Item=\"v_hr_employee\"]}[Data]\nin\n    rep_v_hr_employee"
                        },
                        {
                            "name": "Jobcodes_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data]\nin\n    Jobcodes_Table"
                        },
                        {
                            "name": "xlsx utilization_targets_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/2023_Budget_Utilization_Capture%20rate.xlsx\"), null, true),\n    #\"Utilization & Cap. Rate Bdg23_Sheet\" = Source{[Item=\"Utilization & Cap. Rate Bdg23\",Kind=\"Sheet\"]}[Data]\nin\n    #\"Utilization & Cap. Rate Bdg23_Sheet\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_T",
                            "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Inserted Month\" = Table.AddColumn(Source, \"Month\", each Date.Month([report_month]), Int64.Type),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Month\",{\"Month\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"report_month_previous\", each Date.AddMonths([report_month], -1), type date),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Added Custom\", \"report_month_previous_id\", each Text.AfterDelimiter(Text.From([report_month_previous], \"de-DE\"), \".\"), type text),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Inserted Text After Delimiter\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_previous_id\"}, #\"msr v_fc_order_income_accumulated_E\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_id\"}, \"msr v_fc_order_income_accumulated_source\", JoinKind.LeftOuter),\n    #\"Expanded msr v_fc_order_income_accumulated_source\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_fc_order_income_accumulated_source\", {\"order_income\"}, {\"order_income_previous\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded msr v_fc_order_income_accumulated_source\",null,0,Replacer.ReplaceValue,{\"order_income_previous\"}),\n    #\"Added Custom1\" = Table.AddColumn(#\"Replaced Value\", \"order_income_current\", each [order_income] - [order_income_previous], type number),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Custom1\",{{\"order_income\", \"order_income_total\"}}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Renamed Columns\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"industry\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"function\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"industry\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort2\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded platform_sort2\",{{\"platform_1_sort\", \"industry_sort\"}, {\"platform_1_name_short\", \"industry_name_short\"}}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Renamed Columns2\", {\"function\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Expanded platform_sort\",{{\"platform_1_sort\", \"function_sort\"}, {\"platform_1_name_short\", \"function_name_short\"}}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Renamed Columns3\", {\"project_number\", \"report_month_id\"}, #\"sec acp_orderIncome_byMonth_E\", {\"project_number\", \"report_month_id\"}, \"sec acp_orderIncome_byMonth_E\", JoinKind.LeftOuter),\n    #\"Expanded sec acp_orderIncome_byMonth\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"sec acp_orderIncome_byMonth_E\", {\"orderIncome\"}, {\"orderIncome\"}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded sec acp_orderIncome_byMonth\",{{\"orderIncome\", \"order_income_GROSS\"}}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Renamed Columns1\",\"Hongkong\",\"Hong Kong\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Middle East Bahr.\",\"Middle East\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"PX America\",\"PXNorth America\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"PX Engineers\",\"PXEngineering\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"PX Partner\",\"PXBeteiligungs\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Rep. of Korea\",\"South Korea\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Singapur\",\"Singapore\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value9\",\"TMG\",\"Turnaround Management GmbH\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value10\",\"UK\",\"United Kingdom\",Replacer.ReplaceText,{\"company_name\"})\nin\n    #\"Replaced Value11\""
                        },
                        {
                            "name": "sec acp_orderIncome_byMonth_E",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_acp_orderIncome_byMonth = Source{[Schema=\"sec\",Item=\"acp_orderIncome_byMonth\"]}[Data],\n    #\"Added Custom Column\" = Table.AddColumn(sec_acp_orderIncome_byMonth, \"report_month_id\", each Text.Combine({Text.PadStart(Text.From([month], \"de-DE\"), 2, \"0\"), \".\", Text.From([year], \"de-DE\")}), type text)\nin\n    #\"Added Custom Column\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_fc_order_income_accumulated = datahub{[Schema=\"msr\",Item=\"v_fc_order_income_accumulated\"]}[Data],\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(msr_v_fc_order_income_accumulated, \"report_month_id\", each Text.AfterDelimiter(Text.From([report_month], \"de-DE\"), \".\"), type text),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Inserted Text After Delimiter\",null,0,Replacer.ReplaceValue,{\"order_income\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "OI_Budget_Countries_T",
                            "expression": "let\n    Source = OI_Budget_Countries_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", type number}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type number}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", type number}, {\"SEA\", type number}, {\"IDN\", type number}, {\"MMR\", type number}, {\"MYS\", type number}, {\"SGP\", type number}, {\"THA\", type number}, {\"VNM\", type number}, {\"Asia\", type number}, {\"Polarix\", type number}, {\"PX Partner\", type number}, {\"PX Engineers\", type number}, {\"PX America\", type number}, {\"TMG\", type number}, {\"Other RB companies\", type number}, {\"Subtotal\", type number}, {\"HOL\", type number}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"Country\", \"Period\"}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"BHR/KSA/UAE\", \"OLD CHE\", \"EMEA\", \"Americas\", \"CHN_1\", \"HKG\", \"Asia\", \"Other RB companies\", \"Subtotal\", \"HOL\", \"Subtotal_2\", \"Column60\", \"Total\", \"ME\", \"SEA\", \"DACH\"}),\n    #\"Removed Bottom Rows1\" = Table.RemoveLastN(#\"Removed Columns\",1),\n    #\"Added Year\" = Table.AddColumn(#\"Removed Bottom Rows1\", \"Year\", each Text.BeforeDelimiter([Period], \"_\"), type text),\n    #\"Added MonthName\" = Table.AddColumn(#\"Added Year\", \"MonthName\", each Text.BetweenDelimiters([Period], \"_\", \"_\", 1, 0), type text),\n    #\"Added Month\" = Table.AddColumn(#\"Added MonthName\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Added Month\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type1\",{\"Period\", \"Year\", \"MonthName\", \"Month\"}),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Removed Columns1\", {\"FirstDayOfMonth\"}, \"Attribute\", \"Value\"),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Unpivoted Other Columns\",{{\"Attribute\", \"Country\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",\"GER\",\"DEU\",Replacer.ReplaceText,{\"Country\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "OI_Budget_Platforms_T",
                            "expression": "let\n    Source = OI_Budget_Platforms_E,\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(Source, {\"[EUR m]\"}, \"Attribute\", \"Value\"),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Unpivoted Other Columns\",{{\"Value\", type number}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"[EUR m]\", \"Platform\"}, {\"Attribute\", \"MonthName\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Year\", each 2023, Int64.Type),\n    #\"Added Month\" = Table.AddColumn(#\"Added Custom\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Added Month\",{{\"Year\", type text}, {\"Month\", type text}}),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Changed Type1\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Changed Type2\",{\"FirstDayOfMonth\", \"Platform\", \"MonthName\", \"OI_Budget\", \"Year\", \"Month\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Reordered Columns\",{\"MonthName\", \"Year\", \"Month\"})\nin\n    #\"Removed Columns\""
                        },
                        {
                            "name": "OI_Budget_Countries_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Countries\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\", 6),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 29),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Bottom Rows\", {\"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\", \"Column17\", \"Column18\", \"Column19\", \"Column20\", \"Column21\", \"Column22\", \"Column23\", \"Column24\", \"Column25\", \"Column26\", \"Column27\", \"Column28\", \"Column29\", \"Column30\", \"Column31\", \"Column32\", \"Column33\", \"Column34\", \"Column35\", \"Column36\", \"Column37\", \"Column38\", \"Column39\", \"Column40\", \"Column41\", \"Column42\", \"Column43\", \"Column44\", \"Column45\", \"Column46\", \"Column47\", \"Column48\", \"Column49\", \"Column50\", \"Column51\", \"Column52\", \"Column53\", \"Column54\", \"Column55\", \"Column56\", \"Column57\", \"Column58\", \"Column59\", \"Column60\", \"Column61\", \"Column62\"}),\n    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> \"\")),\n    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Other Columns\", each not List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_)))),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Blank Rows\", [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", Int64.Type}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type any}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", Int64.Type}, {\"SEA\", Int64.Type}, {\"IDN\", Int64.Type}, {\"MMR\", Int64.Type}, {\"MYS\", Int64.Type}, {\"SGP\", Int64.Type}, {\"THA\", Int64.Type}, {\"VNM\", Int64.Type}, {\"Asia\", type number}, {\"Polarix\", type any}, {\"PX Partner\", type any}, {\"PX Engineers\", type any}, {\"PX America\", type any}, {\"TMG\", type any}, {\"Other RB companies\", type any}, {\"Subtotal\", type number}, {\"HOL\", type any}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "OI_Budget_Platforms_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Platforms\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\",3),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 17),\n    #\"Removed Alternate Rows\" = Table.AlternateRows(#\"Removed Bottom Rows\",2,1,1),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Alternate Rows\", each ([Column2] <> \"Total\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Column2\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\"}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Other Columns\", [PromoteAllScalars=true])\nin\n    #\"Promoted Headers\""
                        }
                    ],
                    "configuredBy": "matthias.gessenay@org.rolandberger.com",
                    "configuredById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "isEffectiveIdentityRequired": false,
                    "isEffectiveIdentityRolesRequired": false,
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-08-28T08:56:17.09",
                    "contentProviderType": "PbixInImportMode",
                    "misconfiguredDatasourceUsages": [
                        {
                            "datasourceInstanceId": "ff1b8dd4-104b-42c8-82f7-6f9e3ac19c95"
                        },
                        {
                            "datasourceInstanceId": "918fd35f-ba7f-42d9-af7a-e372ca4eeab9"
                        },
                        {
                            "datasourceInstanceId": "ad83fa59-55a1-4038-b8d2-5b11b07a4fad"
                        },
                        {
                            "datasourceInstanceId": "2509d929-2298-4623-8a0e-dc5e3181de05"
                        },
                        {
                            "datasourceInstanceId": "3e436f3a-a73f-410d-87f2-027dda870b3c"
                        },
                        {
                            "datasourceInstanceId": "3336848e-4278-4d97-8038-83d48054a6c5"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "ac14893d-4a76-4dec-af44-9450354094f6",
                    "name": "Performance Summary - Platform Head",
                    "tables": [
                        {
                            "name": "msr v_employee_utilization",
                            "columns": [
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "absence_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "training_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_public_holiday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_weekend",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TA: Vacation & other leave",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[vacation_hours] + 'msr v_employee_utilization'[leave_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "TA: Target hours adj.",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[target_hours] - 'msr v_employee_utilization'[TA: Vacation & other leave] - 'msr v_employee_utilization'[training_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "booked_hours",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[absence_hours] + 'msr v_employee_utilization'[training_hours] + 'msr v_employee_utilization'[productive_hours_utilization]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "acq_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Utilization % Day",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nif('msr v_employee_utilization'[target_hours] = 0 && 'msr v_employee_utilization'[productive_hours_utilization] > 0, 8,\nDIVIDE('msr v_employee_utilization'[productive_hours_utilization], 'msr v_employee_utilization'[target_hours],0))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Utilization_target_hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %",
                                    "expression": "\nDIVIDE(\n\t[Utilization_hours_on_client_project],\n\t[Utilization_target_hours]\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target",
                                    "expression": "0.8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance",
                                    "expression": "'msr v_employee_utilization'[Utilization %] - 'msr v_employee_utilization'[Utilization Target]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance String",
                                    "expression": "\"(\" & 'msr v_employee_utilization'[Utilization Performance Short] & \"ppt.)\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance Short",
                                    "expression": "FIXED('msr v_employee_utilization'[Utilization Performance] * 100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target String",
                                    "expression": "\"Target: \" & 'msr v_employee_utilization'[Utilization Target] * 100 & \"%\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target & Performance",
                                    "expression": "[Utilization Target String] & \" \" & [Utilization Performance String]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % CY",
                                    "expression": "\nvar productive_hours_utilization = CALCULATE(SUM('msr v_employee_utilization'[productive_hours_utilization]), DATESYTD('pub dim_date'[Date]))\n \n Return\n    productive_hours_utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute_2",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %_2",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (all vs th)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[booked_hours]), SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (prod+ill vs adj.)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[productive_hours_utilization])+SUM('msr v_employee_utilization'[illness_hours]), SUM('msr v_employee_utilization'[TA: Target hours adj.]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "TA: Target hours adj. Total",
                                    "expression": "SUM('msr v_employee_utilization'[TA: Target hours adj.])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (reported)",
                                    "expression": "DIVIDE([Hours_reported], [TA: Target hours adj. Total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness",
                                    "expression": "SUM('msr v_employee_utilization'[illness_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge",
                                    "expression": "[Utilization_hours_illness] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal",
                                    "expression": "SUM('msr v_employee_utilization'[inp_project_hours_adj])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge",
                                    "expression": "[Utilization_hours_internal] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq",
                                    "expression": "SUM('msr v_employee_utilization'[acq_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge",
                                    "expression": "[Utilization_hours_acq] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training",
                                    "expression": "SUM('msr v_employee_utilization'[training_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge",
                                    "expression": "[Utilization_hours_training] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave",
                                    "expression": "SUM('msr v_employee_utilization'[vacation_hours]) + SUM('msr v_employee_utilization'[leave_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion",
                                    "expression": "\n    IF(ISBLANK(VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)), 0, (VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % PY",
                                    "expression": "CALCULATE([Utilization %_2], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted",
                                    "expression": "\n    VAR number_decimal = DIVIDE([Utilization_target_hours], 1000)\n    VAR number_whole = FIXED(number_decimal, 0)\nRETURN\n    number_whole & \"k h\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted_2",
                                    "expression": "[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge_formatted",
                                    "expression": "[Utilization_hours_vacation_leave_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization_formatted",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge_formatted",
                                    "expression": "[Utilization_hours_training_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge_formatted",
                                    "expression": "[Utilization_hours_illness_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge_formatted",
                                    "expression": "[Utilization_hours_internal_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge_formatted",
                                    "expression": "[Utilization_hours_acq_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project_formatted",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-4)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "start_3_month",
                                    "expression": "EOMONTH(TODAY(),-4)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M_test",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n        MIN('pub dim_date'[Date]),\n        FILTER(\n            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month))\nRETURN\n    utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_12M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_txt",
                                    "expression": "\"L12M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_12M], \"0%\") & \"  |  L3M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_3M], \"0%\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Customer",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Internal_Acq_Sick",
                                    "expression": "([Utilization_hours_illness_bridge_formatted] + [Utilization_hours_internal_bridge_formatted] + [Utilization_hours_acq_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Vacation_Leave_Training",
                                    "expression": "([Utilization_hours_vacation_leave_bridge_formatted] + [Utilization_hours_training_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG",
                                    "expression": "AVERAGE('rep v_hr_employee'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Target_Hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Missing_Hours",
                                    "expression": "[Timesheet_Target_Hours] - [Timesheet_Customer] - [Timesheet_Vacation_Leave_Training] - [Timesheet_Internal_Acq_Sick]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target for Table",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing",
                                    "expression": "[Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing_bridge",
                                    "expression": "[Utilization_hours_missing] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target]*100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % LM",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[Month] = MONTH(TODAY())-1, 'pub dim_date'[Year] = YEAR(TODAY()))\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % YTD",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[UpToCurrentMonth] = 1)\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'),'pub dim_date'[UpToCurrentMonth] = 1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target LM",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'), 'pub dim_date'[Month] = MONTH(TODAY())-1 && 'pub dim_date'[Year] = YEAR(TODAY()))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target YTD]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target LM]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_reported",
                                    "expression": "Not available",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Missing Hours",
                                    "expression": "\n    VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR missing_hours = target_hours_utilization - hours_reported \nRETURN\n    missing_hours",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Reported Hours",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Target Hours adj.",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD old",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, 'pub dim_date'[UpToCurrentMonth] = 1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted_table",
                                    "expression": "\"AVG Δ Year to date: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted_table",
                                    "expression": "\"AVG Δ Last Month: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_training_bridge",
                                    "expression": "[Utilization_hours_training]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_illness_bridge",
                                    "expression": "[Utilization_hours_illness]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_internal_bridge",
                                    "expression": "[Utilization_hours_internal]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_acq_bridge",
                                    "expression": "[Utilization_hours_acq]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing_bridge",
                                    "expression": "[Utilization_hours_missing]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Single Employee Selected",
                                    "expression": "\nvar emp = SELECTEDVALUE('rep v_hr_employee'[emp_id],\"multiple\")\nreturn\nif(emp = \"multiple\",0,1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Special Time Model",
                                    "expression": "if([Flag Single Employee Selected] && [Flag Special Time Model],\"Values > 100% may be due to special time models\",\"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Special Time Model",
                                    "expression": "if(max('msr v_employee_utilization'[Utilization % Day]) > 1, 1,0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp PY",
                                    "expression": "ROUND(CALCULATE('msr v_employee_utilization'[Utilization Δ Target pp], SAMEPERIODLASTYEAR('pub dim_date'[Date]))*100, 0)& \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Δ pp PY",
                                    "expression": "ROUND(('msr v_employee_utilization'[Utilization %_2] - 'msr v_employee_utilization'[Utilization % PY]) *100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_vacation_leave_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_vacation_leave_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_training_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_training_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur_utilization",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days_utilization]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_illness_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_illness_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_internal_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_internal_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_acq_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_acq_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_missing_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_missing_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_on_client_project",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_on_client_project]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing",
                                    "expression": "([Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing %",
                                    "expression": "\n    VAR missing = DIVIDE(\n\t                        [Utilization_hours_missing],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(missing <= 0, 0, missing)",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness]",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness %",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [utilization_hours_acq_internal_illness],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_utilization_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix",
                            "columns": [
                                {
                                    "name": "key_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "std_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "rep v_hr_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "per_org",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_emp_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_full_name",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone_mobile",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "name_prefix",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_display",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nickname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_display_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_manager_level",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "gender",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "empl_class_descr",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "national_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "middle_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "maiden_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "modify_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id_ps",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "legal_entity",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[country_code_iso3] & \"-\" & 'rep v_hr_employee'[jobcode_id]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED(utilization_budgets[utilization_target])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fullname_joblevel4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_joblevel4_mentor",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4] & \" - \" & 'rep v_hr_employee'[mentor_full_name]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id.1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region.old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Partner_count",
                                    "expression": "COUNTROWS(FILTER('rep v_hr_employee', FIND(\"Partner\", 'rep v_hr_employee'[jobcode],,0)>0))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"rep v_hr_employee_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "pub dim_date",
                            "columns": [
                                {
                                    "name": "DateKey",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Day",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Weekday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekDayName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekOfYear",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "MonthName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthnumber",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ISOWeekOfYearNameInCal",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & 'pub dim_date'[WeekOfYear]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MonthNameShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "UpToCurrentMonth",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR current_month = MONTH(TODAY())\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year, \n                    IF('pub dim_date'[Date].[MonthNo] <= current_month,\n                        1,\n                        0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Last4Next4Weeks",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR firstWeek = WEEKNUM(TODAY())-4\n    VAR lastWeek = WEEKNUM(TODAY())+3\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year,\n                    IF('pub dim_date'[WeekOfYear] >= firstWeek, \n                        IF('pub dim_date'[WeekOfYear] <= lastWeek,\n                            1,\n                            0),0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_month",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH(TODAY()) = 'pub dim_date'[Date].[MonthNo], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_week",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(WEEKNUM(TODAY()+1) = 'pub dim_date'[WeekOfYear], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "temp_CurrentWeek",
                                    "expression": "WEEKNUM(TODAY())",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_FirstWeek",
                                    "expression": "WEEKNUM(TODAY())-3",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_Lastweek",
                                    "expression": "WEEKNUM(TODAY())+4",
                                    "isHidden": false
                                },
                                {
                                    "name": "Column_width",
                                    "expression": "REPT(\"0\", 7)",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveMonthList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[MonthNameShort] ),\n        'pub dim_date'[MonthNameShort],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDay",
                                    "expression": "TODAY()",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDayWeek",
                                    "expression": "[CurrentDay] & \" (\" & [CurrentWeek] & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentWeek",
                                    "expression": "CALCULATE(\n                FIRSTNONBLANK('pub dim_date'[Calendarweek], \"\"), \n                FILTER(ALL('pub dim_date'), 'pub dim_date'[Date] = TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveWeekList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[Calendarweek] ),\n        'pub dim_date'[Calendarweek],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentMonth",
                                    "expression": "FORMAT (TODAY(),\"MMMM\")",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_dim_date = datahub{[Schema=\"pub\",Item=\"dim_date\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_dim_date, each Date.IsInCurrentYear([Date]) or Date.IsInPreviousYear([Date])),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"Date\", \"Day\", \"Weekday\", \"WeekDayName\", \"WeekOfYear\", \"Month\", \"MonthName\", \"Year\", \"YearMonthnumber\", \"FirstDayOfMonth\", \"YearMonthShort\", \"ISOWeekOfYearNameInCal\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Removed Other Columns\", \"MonthNameShort\", each Text.AfterDelimiter(Text.Proper([YearMonthShort]), \"/\"), type text)\nin\n    #\"Inserted Text After Delimiter\""
                                }
                            ]
                        },
                        {
                            "name": "Refresh_Timestamp",
                            "columns": [
                                {
                                    "name": "UTC timestamp",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Local timestamp with offset",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Last_refresh_local",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & WEEKNUM(Refresh_Timestamp[Last_refresh_local])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    StandardOffset = #duration(0, 1, 0, 0),\n    DaylightSavingTimeOffset = #duration(0, 2, 0, 0),\n\n    // get start and end of daylight saving time\n    // this code implements the rules of EU counties\n    // if it doesn't fill your expectations, visit https://en.wikipedia.org/wiki/Daylight_saving_time_by_country and implement your own function\n    fnDaylightSavingTimePeriod = (\n        now as datetime\n    ) as record => \n        let\n            // the daylight saving time starts on the last Sunday of March at 1am UTC\n            LastDayOfMarch = #date(Date.Year(now), 3, 31),\n            StartOfDaylightSavingTime = Date.AddDays(LastDayOfMarch, -Date.DayOfWeek(LastDayOfMarch)) & #time(1, 0, 0),\n            // the daylight saving time ends on the last Sunday in October at 1am UTC\n            LastDayOfOctober = #date(Date.Year(now), 10, 31),\n            EndOfDaylightSavingTime = Date.AddDays(LastDayOfOctober, -Date.DayOfWeek(LastDayOfOctober)) & #time(1, 0, 0)\n        in\n            [From = StartOfDaylightSavingTime, To = EndOfDaylightSavingTime],\n\n    // get a timestamp in UTC (with offset 00:00 all year long)\n    UtcNow = DateTimeZone.UtcNow(),\n    // convert UTC datetime with offset to datetime\n    UtcNowWithoutZone = DateTimeZone.RemoveZone(UtcNow),\n\n    // get daylight saving time period\n    DaylightSavingTimePeriod = fnDaylightSavingTimePeriod(UtcNowWithoutZone),\n\n    // convert UTC time to the local time with respect to current offset\n    LocalTimeWithOffset = \n        if UtcNowWithoutZone >= DaylightSavingTimePeriod[From] and UtcNowWithoutZone <= DaylightSavingTimePeriod[To] then\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(DaylightSavingTimeOffset), \n                Duration.Minutes(DaylightSavingTimeOffset)\n            )\n        else\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(StandardOffset), \n                Duration.Minutes(StandardOffset)\n            ),\n    \n    // current date time without offset\n    LocalTime = DateTimeZone.RemoveZone(LocalTimeWithOffset),\n\n    // result table\n    Result = #table(\n        type table\n        [\n            #\"UTC timestamp\" = datetime, \n            #\"UTC date\" = date,\n            #\"Local timestamp with offset\" = datetimezone,\n            #\"Local timestamp without offset\" = datetime\n        ], \n        {\n            {\n            UtcNowWithoutZone,\n            DateTime.Date(UtcNowWithoutZone),\n            LocalTimeWithOffset,\n            LocalTime\n            }\n        }\n    ),\n    #\"Inserted Date\" = Table.AddColumn(Result, \"Last_refresh_local\", each DateTime.Date([Local timestamp without offset]), type date),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Date\",{\"UTC date\", \"Local timestamp without offset\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "utilization_budgets",
                            "columns": [
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "utilization_budgets[country_code_iso3] & \"-\" & utilization_budgets[jobcode_id]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/utilization_budgets.xlsx\"), null, true),\n    utilization_budgets_Table = Source{[Item=\"utilization_budgets\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(utilization_budgets_Table,{{\"country_code_iso3\", type text}, {\"jobcode_id\", type text}, {\"jobcode\", type text}, {\"job_short\", type text}, {\"utilization_target\", type number}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_total",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "share",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_previous",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_current",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_GROSS",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "OI_Monthly",
                                    "expression": "SUM('msr v_fc_order_income_accumulated'[order_income_current])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD",
                                    "expression": "CALCULATE([OI_Monthly], ALL('pub dim_date'[Date]), 'pub dim_date'[Year] = YEAR(TODAY())-1, 'pub dim_date'[Month] <= MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_2",
                                    "expression": "CALCULATE(SUM(OI_Budget_Countries[OI_Budget]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P",
                                    "expression": "DIVIDE([OI_Monthly], [Partner_count])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_YTD",
                                    "expression": "DIVIDE([OI_YTD_BUD_2], CALCULATE(DISTINCTCOUNT('msr v_fc_order_income_accumulated'[project_number]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_per_P_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_formatted",
                                    "expression": "DIVIDE([OI_Monthly], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C",
                                    "expression": "\n    var check_industry = calculate(isfiltered(Dim_Industries[industry]) , allselected())\n    var check_function = calculate(isfiltered(Dim_Functions[function]) , allselected())\nreturn\n    if(check_industry || check_function, BLANK(), SUM(OI_Budget_Countries[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_formatted",
                                    "expression": "DIVIDE([OI_Monthly_BUD_C], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_FP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_industry = calculate(isfiltered(Dim_Industries[industry]) , allselected())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_industry, BLANK(), SUM(OI_Budget_Platforms_Function[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_IP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_function = calculate(isfiltered(Dim_Functions[function]) , allselected())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_function, BLANK(), SUM(OI_Budget_Platforms_Industry[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_C], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_C], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future_formatted",
                                    "expression": "DIVIDE([OI_YTD_BUD_C_no_future], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_IP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_IP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_FP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_FP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_combined_no_future",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(Dim_Industries[industry]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(Dim_Functions[function]) , allselected()), \"F\", \"\")\n    var check_combination = check_region & check_industry & check_function\nreturn\n    IF(check_combination = \"\" || check_combination = \"R\", [OI_YTD_BUD_C_no_future_formatted], \n        IF(check_combination = \"I\", [OI_YTD_BUD_IP_no_future],\n            IF(check_combination = \"F\", [OI_YTD_BUD_FP_no_future], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_formatted",
                                    "expression": "DIVIDE([OI_per_P], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD",
                                    "expression": "DIVIDE([OI_PY_YTD], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_combined_YTD",
                                    "expression": "IF([OI_YTD_BUD_combined_no_future] = \"\", BLANK(), DIVIDE([OI_YTD_BUD_combined_no_future], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1)))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_T\"\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Countries",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Countries_T\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Function",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] <> \"Health & Consumer\" and [Platform] <> \"Industrials\" and [Platform] <> \"Regulated & Infrastructure\" and [Platform] <> \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "pub v_ll_company_to_region",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    pub_v_ll_company_to_region = Source{[Schema=\"pub\",Item=\"v_ll_company_to_region\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_v_ll_company_to_region, each ([company_id] <> \"77\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Industries",
                            "columns": [
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"industry\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Duplicates\", each ([industry] <> \"Not assigned\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Functions",
                            "columns": [
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"function\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Duplicates\", each ([function] <> \"Not assigned\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Industry",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] = \"Health & Consumer\" or [Platform] = \"Industrials\" or [Platform] = \"Regulated & Infrastructure\" or [Platform] = \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "Jobcodes",
                            "expression": "let\n    Source = Jobcodes_T,\n    Publish = Source\nin\n    Publish"
                        },
                        {
                            "name": "Jobcodes_Excel",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"Vc45DoAwDETRu1BTOJi1xCZFIkVYcYkQ978FdEzKp5niX1eXT3mIgu3c3T1waBl+BrKagIsVOIfZyq+BXHHcxGEcJVYgN2SSDOOG4kkxkGfdse9IFfvUC/ZpI4+Y55jHbqA1f9v9Ag==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Jobcode_Excel = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Jobcode_Excel\", type text}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Jobcode_Excel\", Splitter.SplitTextByDelimiter(\"_\", QuoteStyle.Csv), {\"Jobcode_Excel.1\", \"Jobcode_Excel.2\"}),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Jobcode_Excel.1\", type text}, {\"Jobcode_Excel.2\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type1\",{\"Jobcode_Excel.1\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Jobcode_Excel.2\", \"Jobcode_Excel\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_utilization_target",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"key_date\", \"emp_id\", \"job_code\", \"country_code_iso3\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"job.Kurz-Bezeichnung\", \"job_short\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"key_date\", \"emp_id\", \"country_code_iso3\", \"job_code\", \"job_short\", \"job.Bezeichnung\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "sec ll_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_ll_job = Source{[Schema=\"sec\",Item=\"ll_job\"]}[Data],\n    #\"Merged Queries\" = Table.NestedJoin(sec_ll_job, {\"job_reporting_level4\"}, job_sort, {\"job_reporting_level4\"}, \"job_sort\", JoinKind.LeftOuter),\n    #\"Expanded job_sort\" = Table.ExpandTableColumn(#\"Merged Queries\", \"job_sort\", {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"})\nin\n    #\"Expanded job_sort\""
                        },
                        {
                            "name": "platform_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "job_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/job_sort.xlsx\"), null, true),\n    job_sort_Table = Source{[Item=\"job_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(job_sort_Table,{{\"job_reporting_level1\", type text}, {\"job_reporting_level2\", type text}, {\"job_reporting_level3\", type text}, {\"job_reporting_level4\", type text}, {\"job_reporting_level4_sort\", Int64.Type}, {\"job_reporting_level1_sort\", Int64.Type}, {\"job_reporting_level2_sort\", Int64.Type}, {\"job_reporting_level3_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "msr v_byd_daily_rates",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_byd_daily_rates = datahub{[Schema=\"msr\",Item=\"v_byd_daily_rates\"]}[Data]\nin\n    msr_v_byd_daily_rates"
                        },
                        {
                            "name": "msr v_employee_utilization_T",
                            "expression": "let\n    Source = #\"msr v_employee_utilization_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_hr_employee_job_matrix\", {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}, {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each ([job.Im Scope] = \"x\"))\nin\n    #\"Filtered Rows1\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_T",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([key_date]) or Date.IsInPreviousYear([key_date])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"job_code\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"JobGroup\", \"Jobcode_Excel\"}, {\"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"job.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([job.Im Scope] = \"x\")),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows1\", {\"job_code\", \"company_id_byd\"}, #\"msr v_byd_daily_rates\", {\"jobcode_id\", \"company_id\"}, \"msr v_byd_daily_rates\", JoinKind.LeftOuter),\n    #\"Expanded msr v_byd_daily_rates\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_byd_daily_rates\", {\"amount_eur\"}, {\"daily_rate_eur\"})\nin\n    #\"Expanded msr v_byd_daily_rates\""
                        },
                        {
                            "name": "rep v_hr_employee_T",
                            "expression": "let\n    Source = #\"rep v_hr_employee_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each [ter_max_date] > #date(2022, 12, 31)),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"jobcode_id\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Jobcode_Excel\"}, {\"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([Jobcodes.Im Scope] = \"x\")),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows1\",\"Junior Consultant 1##\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Junior Consultant 1#\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Group Function RB N3XT\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"jobcode_id\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"company_id\"}, #\"pub v_ll_company_to_region\", {\"company_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"pub v_ll_company_to_region\", {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}, {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Expanded pub v_ll_company_to_region\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Reordered Columns\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_id\", \"platform_1_sort\"}, {\"platform_1_id.1\", \"platform_1_sort\"}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Expanded platform_sort\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_1_sort\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns1\",{{\"region\", \"region.old\"}}),\n    #\"Cleaned Text\" = Table.TransformColumns(#\"Renamed Columns\",{{\"job_reporting_level2\", Text.Clean, type text}}),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"job_reporting_level2\", Text.Trim, type text}}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Trimmed Text\",null,9,Replacer.ReplaceValue,{\"platform_1_sort\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value5\",\"9720\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Group Function F&C\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"})\nin\n    #\"Replaced Value4\""
                        },
                        {
                            "name": "Jobcodes_T",
                            "expression": "let\n    Source = Jobcodes_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type1\", {\"Jobcode\"}, Jobcodes_Excel, {\"Jobcode_Excel\"}, \"Jobcodes_Excel\", JoinKind.FullOuter),\n    #\"Expanded Jobcodes_Excel\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes_Excel\", {\"Jobcode_Excel\"}, {\"Jobcode_Excel\"})\nin\n    #\"Expanded Jobcodes_Excel\""
                        },
                        {
                            "name": "msr v_employee_utilization_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_utilization = datahub{[Schema=\"msr\",Item=\"v_employee_utilization\"]}[Data]\nin\n    msr_v_employee_utilization"
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_hr_employee_job_matrix = datahub{[Schema=\"msr\",Item=\"v_hr_employee_job_matrix\"]}[Data]\nin\n    msr_v_hr_employee_job_matrix"
                        },
                        {
                            "name": "rep v_hr_employee_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_hr_employee = datahub{[Schema=\"rep\",Item=\"v_hr_employee\"]}[Data]\nin\n    rep_v_hr_employee"
                        },
                        {
                            "name": "Jobcodes_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data]\nin\n    Jobcodes_Table"
                        },
                        {
                            "name": "xlsx utilization_targets_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/2023_Budget_Utilization_Capture%20rate.xlsx\"), null, true),\n    #\"Utilization & Cap. Rate Bdg23_Sheet\" = Source{[Item=\"Utilization & Cap. Rate Bdg23\",Kind=\"Sheet\"]}[Data]\nin\n    #\"Utilization & Cap. Rate Bdg23_Sheet\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_T",
                            "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Inserted Month\" = Table.AddColumn(Source, \"Month\", each Date.Month([report_month]), Int64.Type),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Month\",{\"Month\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"report_month_previous\", each Date.AddMonths([report_month], -1), type date),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Added Custom\", \"report_month_previous_id\", each Text.AfterDelimiter(Text.From([report_month_previous], \"de-DE\"), \".\"), type text),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Inserted Text After Delimiter\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_previous_id\"}, #\"msr v_fc_order_income_accumulated_E\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_id\"}, \"msr v_fc_order_income_accumulated_source\", JoinKind.LeftOuter),\n    #\"Expanded msr v_fc_order_income_accumulated_source\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_fc_order_income_accumulated_source\", {\"order_income\"}, {\"order_income_previous\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded msr v_fc_order_income_accumulated_source\",null,0,Replacer.ReplaceValue,{\"order_income_previous\"}),\n    #\"Added Custom1\" = Table.AddColumn(#\"Replaced Value\", \"order_income_current\", each [order_income] - [order_income_previous], type number),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Custom1\",{{\"order_income\", \"order_income_total\"}}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Renamed Columns\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"industry\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"function\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"industry\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort2\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded platform_sort2\",{{\"platform_1_sort\", \"industry_sort\"}, {\"platform_1_name_short\", \"industry_name_short\"}}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Renamed Columns2\", {\"function\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Expanded platform_sort\",{{\"platform_1_sort\", \"function_sort\"}, {\"platform_1_name_short\", \"function_name_short\"}}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Renamed Columns3\", {\"project_number\", \"report_month_id\"}, #\"sec acp_orderIncome_byMonth_E\", {\"project_number\", \"report_month_id\"}, \"sec acp_orderIncome_byMonth_E\", JoinKind.LeftOuter),\n    #\"Expanded sec acp_orderIncome_byMonth\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"sec acp_orderIncome_byMonth_E\", {\"orderIncome\"}, {\"orderIncome\"}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded sec acp_orderIncome_byMonth\",{{\"orderIncome\", \"order_income_GROSS\"}}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Renamed Columns1\",\"Hongkong\",\"Hong Kong\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Middle East Bahr.\",\"Middle East\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"PX America\",\"PXNorth America\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"PX Engineers\",\"PXEngineering\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"PX Partner\",\"PXBeteiligungs\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Rep. of Korea\",\"South Korea\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Singapur\",\"Singapore\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value9\",\"TMG\",\"Turnaround Management GmbH\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value10\",\"UK\",\"United Kingdom\",Replacer.ReplaceText,{\"company_name\"})\nin\n    #\"Replaced Value11\""
                        },
                        {
                            "name": "sec acp_orderIncome_byMonth_E",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_acp_orderIncome_byMonth = Source{[Schema=\"sec\",Item=\"acp_orderIncome_byMonth\"]}[Data],\n    #\"Added Custom Column\" = Table.AddColumn(sec_acp_orderIncome_byMonth, \"report_month_id\", each Text.Combine({Text.PadStart(Text.From([month], \"de-DE\"), 2, \"0\"), \".\", Text.From([year], \"de-DE\")}), type text)\nin\n    #\"Added Custom Column\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_fc_order_income_accumulated = datahub{[Schema=\"msr\",Item=\"v_fc_order_income_accumulated\"]}[Data],\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(msr_v_fc_order_income_accumulated, \"report_month_id\", each Text.AfterDelimiter(Text.From([report_month], \"de-DE\"), \".\"), type text),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Inserted Text After Delimiter\",null,0,Replacer.ReplaceValue,{\"order_income\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "OI_Budget_Countries_T",
                            "expression": "let\n    Source = OI_Budget_Countries_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", type number}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type number}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", type number}, {\"SEA\", type number}, {\"IDN\", type number}, {\"MMR\", type number}, {\"MYS\", type number}, {\"SGP\", type number}, {\"THA\", type number}, {\"VNM\", type number}, {\"Asia\", type number}, {\"Polarix\", type number}, {\"PX Partner\", type number}, {\"PX Engineers\", type number}, {\"PX America\", type number}, {\"TMG\", type number}, {\"Other RB companies\", type number}, {\"Subtotal\", type number}, {\"HOL\", type number}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"Country\", \"Period\"}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"BHR/KSA/UAE\", \"OLD CHE\", \"EMEA\", \"Americas\", \"CHN_1\", \"HKG\", \"Asia\", \"Other RB companies\", \"Subtotal\", \"HOL\", \"Subtotal_2\", \"Column60\", \"Total\", \"ME\", \"SEA\", \"DACH\"}),\n    #\"Removed Bottom Rows1\" = Table.RemoveLastN(#\"Removed Columns\",1),\n    #\"Added Year\" = Table.AddColumn(#\"Removed Bottom Rows1\", \"Year\", each Text.BeforeDelimiter([Period], \"_\"), type text),\n    #\"Added MonthName\" = Table.AddColumn(#\"Added Year\", \"MonthName\", each Text.BetweenDelimiters([Period], \"_\", \"_\", 1, 0), type text),\n    #\"Added Month\" = Table.AddColumn(#\"Added MonthName\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Added Month\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type1\",{\"Period\", \"Year\", \"MonthName\", \"Month\"}),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Removed Columns1\", {\"FirstDayOfMonth\"}, \"Attribute\", \"Value\"),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Unpivoted Other Columns\",{{\"Attribute\", \"Country\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",\"GER\",\"DEU\",Replacer.ReplaceText,{\"Country\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "OI_Budget_Platforms_T",
                            "expression": "let\n    Source = OI_Budget_Platforms_E,\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(Source, {\"[EUR m]\"}, \"Attribute\", \"Value\"),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Unpivoted Other Columns\",{{\"Value\", type number}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"[EUR m]\", \"Platform\"}, {\"Attribute\", \"MonthName\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Year\", each 2023, Int64.Type),\n    #\"Added Month\" = Table.AddColumn(#\"Added Custom\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Added Month\",{{\"Year\", type text}, {\"Month\", type text}}),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Changed Type1\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Changed Type2\",{\"FirstDayOfMonth\", \"Platform\", \"MonthName\", \"OI_Budget\", \"Year\", \"Month\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Reordered Columns\",{\"MonthName\", \"Year\", \"Month\"})\nin\n    #\"Removed Columns\""
                        },
                        {
                            "name": "OI_Budget_Countries_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Countries\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\", 6),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 29),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Bottom Rows\", {\"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\", \"Column17\", \"Column18\", \"Column19\", \"Column20\", \"Column21\", \"Column22\", \"Column23\", \"Column24\", \"Column25\", \"Column26\", \"Column27\", \"Column28\", \"Column29\", \"Column30\", \"Column31\", \"Column32\", \"Column33\", \"Column34\", \"Column35\", \"Column36\", \"Column37\", \"Column38\", \"Column39\", \"Column40\", \"Column41\", \"Column42\", \"Column43\", \"Column44\", \"Column45\", \"Column46\", \"Column47\", \"Column48\", \"Column49\", \"Column50\", \"Column51\", \"Column52\", \"Column53\", \"Column54\", \"Column55\", \"Column56\", \"Column57\", \"Column58\", \"Column59\", \"Column60\", \"Column61\", \"Column62\"}),\n    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> \"\")),\n    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Other Columns\", each not List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_)))),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Blank Rows\", [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", Int64.Type}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type any}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", Int64.Type}, {\"SEA\", Int64.Type}, {\"IDN\", Int64.Type}, {\"MMR\", Int64.Type}, {\"MYS\", Int64.Type}, {\"SGP\", Int64.Type}, {\"THA\", Int64.Type}, {\"VNM\", Int64.Type}, {\"Asia\", type number}, {\"Polarix\", type any}, {\"PX Partner\", type any}, {\"PX Engineers\", type any}, {\"PX America\", type any}, {\"TMG\", type any}, {\"Other RB companies\", type any}, {\"Subtotal\", type number}, {\"HOL\", type any}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "OI_Budget_Platforms_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Platforms\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\",3),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 17),\n    #\"Removed Alternate Rows\" = Table.AlternateRows(#\"Removed Bottom Rows\",2,1,1),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Alternate Rows\", each ([Column2] <> \"Total\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Column2\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\"}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Other Columns\", [PromoteAllScalars=true])\nin\n    #\"Promoted Headers\""
                        }
                    ],
                    "configuredBy": "matthias.gessenay@org.rolandberger.com",
                    "configuredById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "isEffectiveIdentityRequired": false,
                    "isEffectiveIdentityRolesRequired": false,
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-08-28T08:56:41.13",
                    "contentProviderType": "PbixInImportMode",
                    "misconfiguredDatasourceUsages": [
                        {
                            "datasourceInstanceId": "ff1b8dd4-104b-42c8-82f7-6f9e3ac19c95"
                        },
                        {
                            "datasourceInstanceId": "918fd35f-ba7f-42d9-af7a-e372ca4eeab9"
                        },
                        {
                            "datasourceInstanceId": "ad83fa59-55a1-4038-b8d2-5b11b07a4fad"
                        },
                        {
                            "datasourceInstanceId": "2509d929-2298-4623-8a0e-dc5e3181de05"
                        },
                        {
                            "datasourceInstanceId": "3e436f3a-a73f-410d-87f2-027dda870b3c"
                        },
                        {
                            "datasourceInstanceId": "3336848e-4278-4d97-8038-83d48054a6c5"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "76ace5c0-e3ae-439b-b23b-0235ea9bf054",
                    "name": "Capacity & Utilization - MD, Region Head, Country Head",
                    "tables": [
                        {
                            "name": "msr v_employee_utilization",
                            "columns": [
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "absence_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "training_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_public_holiday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_weekend",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TA: Vacation & other leave",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[vacation_hours] + 'msr v_employee_utilization'[leave_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "TA: Target hours adj.",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[target_hours] - 'msr v_employee_utilization'[TA: Vacation & other leave] - 'msr v_employee_utilization'[training_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "booked_hours",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[absence_hours] + 'msr v_employee_utilization'[training_hours] + 'msr v_employee_utilization'[productive_hours_utilization]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "acq_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Utilization % Day",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nif('msr v_employee_utilization'[target_hours] = 0 && 'msr v_employee_utilization'[productive_hours_utilization] > 0, 8,\nDIVIDE('msr v_employee_utilization'[productive_hours_utilization], 'msr v_employee_utilization'[target_hours],0))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "hr_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[full_name] & \" - \" & 'msr v_employee_utilization'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "employee_date_key",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[emp_id] & \"-\" & 'msr v_employee_utilization'[calendar_day]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Utilization_target_hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %",
                                    "expression": "\nDIVIDE(\n\t[Utilization_hours_on_client_project],\n\t[Utilization_target_hours]\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target",
                                    "expression": "0.8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance",
                                    "expression": "'msr v_employee_utilization'[Utilization %] - 'msr v_employee_utilization'[Utilization Target]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance String",
                                    "expression": "\"(\" & 'msr v_employee_utilization'[Utilization Performance Short] & \"ppt.)\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance Short",
                                    "expression": "FIXED('msr v_employee_utilization'[Utilization Performance] * 100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target String",
                                    "expression": "\"Target: \" & 'msr v_employee_utilization'[Utilization Target] * 100 & \"%\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target & Performance",
                                    "expression": "[Utilization Target String] & \" \" & [Utilization Performance String]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % CY",
                                    "expression": "\nvar productive_hours_utilization = CALCULATE(SUM('msr v_employee_utilization'[productive_hours_utilization]), DATESYTD('pub dim_date'[Date]))\n \n Return\n    productive_hours_utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute_2",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %_2",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, BLANK(), utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (all vs th)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[booked_hours]), SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (prod+ill vs adj.)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[productive_hours_utilization])+SUM('msr v_employee_utilization'[illness_hours]), SUM('msr v_employee_utilization'[TA: Target hours adj.]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "TA: Target hours adj. Total",
                                    "expression": "SUM('msr v_employee_utilization'[TA: Target hours adj.])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (reported)",
                                    "expression": "DIVIDE([Hours_reported], [TA: Target hours adj. Total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness",
                                    "expression": "SUM('msr v_employee_utilization'[illness_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge",
                                    "expression": "[Utilization_hours_illness] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal",
                                    "expression": "SUM('msr v_employee_utilization'[inp_project_hours_adj]) + SUM('msr v_employee_utilization'[hr_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge",
                                    "expression": "[Utilization_hours_internal] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq",
                                    "expression": "SUM('msr v_employee_utilization'[acq_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge",
                                    "expression": "[Utilization_hours_acq] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training",
                                    "expression": "SUM('msr v_employee_utilization'[training_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge",
                                    "expression": "[Utilization_hours_training] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave",
                                    "expression": "SUM('msr v_employee_utilization'[vacation_hours]) + SUM('msr v_employee_utilization'[leave_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion",
                                    "expression": "DIVIDE([Utilization_hours_recorded], SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % PY",
                                    "expression": "CALCULATE([Utilization %_2], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted",
                                    "expression": "\n    VAR number_decimal = DIVIDE([Utilization_target_hours], 1000)\n    VAR number_whole = FIXED(number_decimal, 0)\nRETURN\n    number_whole & \"k h\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted_2",
                                    "expression": "[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge_formatted",
                                    "expression": "[Utilization_hours_vacation_leave_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization_formatted",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge_formatted",
                                    "expression": "[Utilization_hours_training_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge_formatted",
                                    "expression": "[Utilization_hours_illness_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge_formatted",
                                    "expression": "[Utilization_hours_internal_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge_formatted",
                                    "expression": "[Utilization_hours_acq_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project_formatted",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-4)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "start_3_month",
                                    "expression": "EOMONTH(TODAY(),-4)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M_test",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n        MIN('pub dim_date'[Date]),\n        FILTER(\n            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month))\nRETURN\n    utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_12M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_txt",
                                    "expression": "\"L12M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_12M], \"0%\") & \"  |  L3M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_3M], \"0%\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Customer",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Internal_Acq_Sick",
                                    "expression": "([Utilization_hours_illness_bridge_formatted] + [Utilization_hours_internal_bridge_formatted] + [Utilization_hours_acq_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Vacation_Leave_Training",
                                    "expression": "([Utilization_hours_vacation_leave_bridge_formatted] + [Utilization_hours_training_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG",
                                    "expression": "AVERAGE('msr v_employee_utilization'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Target_Hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Missing_Hours",
                                    "expression": "[Timesheet_Target_Hours] - [Timesheet_Customer] - [Timesheet_Vacation_Leave_Training] - [Timesheet_Internal_Acq_Sick]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target for Table",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing",
                                    "expression": "[Utilization_target_hours] - [Utilization_hours_recorded]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing_bridge",
                                    "expression": "[Utilization_hours_missing] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp",
                                    "expression": "IF(ISBLANK('msr v_employee_utilization'[Utilization %_2]), BLANK(), ROUND('msr v_employee_utilization'[Utilization Δ Target]*100, 0) & \" pp\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % LM",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[Month] = MONTH(TODAY())-1, 'pub dim_date'[Year] = YEAR(TODAY()))\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % YTD",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[UpToCurrentMonth] = 1)\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'),'pub dim_date'[UpToCurrentMonth] = 1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target LM",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'), 'pub dim_date'[Month] = MONTH(TODAY())-1 && 'pub dim_date'[Year] = YEAR(TODAY()))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target YTD]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target LM]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_reported",
                                    "expression": "Not available",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Missing Hours",
                                    "expression": "\n    VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR missing_hours = target_hours_utilization - hours_reported \nRETURN\n    missing_hours",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Reported Hours",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Target Hours adj.",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD old",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, 'pub dim_date'[UpToCurrentMonth] = 1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted_table",
                                    "expression": "\"AVG Δ year to date: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted_table",
                                    "expression": "\"AVG Δ last month: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_training_bridge",
                                    "expression": "[Utilization_hours_training]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_illness_bridge",
                                    "expression": "[Utilization_hours_illness]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_internal_bridge",
                                    "expression": "[Utilization_hours_internal]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_acq_bridge",
                                    "expression": "[Utilization_hours_acq]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing_bridge",
                                    "expression": "[Utilization_hours_missing]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Single Employee Selected",
                                    "expression": "\nvar emp = SELECTEDVALUE('rep v_hr_employee'[emp_id],\"multiple\")\nreturn\nif(emp = \"multiple\",0,1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Special Time Model",
                                    "expression": "if([Flag Single Employee Selected] && [Flag Special Time Model],\"Values > 100% may be due to special time models\",\"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Special Time Model",
                                    "expression": "if(max('msr v_employee_utilization'[Utilization % Day]) > 1, 1,0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp PY",
                                    "expression": "ROUND(CALCULATE('msr v_employee_utilization'[Utilization Δ Target pp], SAMEPERIODLASTYEAR('pub dim_date'[Date]))*100, 0)& \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Δ pp PY",
                                    "expression": "\nvar PY = 'msr v_employee_utilization'[Utilization % PY]\nvar CY = 'msr v_employee_utilization'[Utilization %_2]\n\nreturn\nIF(CY > 0 ,IF(PY > 0, \n    ROUND(('msr v_employee_utilization'[Utilization %_2] - 'msr v_employee_utilization'[Utilization % PY]) *100, 0) & \" pp\",\n    \"N/A\"), BLANK())",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_vacation_leave_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_vacation_leave_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_training_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_training_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur_utilization",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days_utilization]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_illness_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_illness_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_internal_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_internal_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_acq_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_acq_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_missing_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_missing_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_on_client_project",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_on_client_project]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing",
                                    "expression": "[Utilization_hours_missing]/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing %",
                                    "expression": "\n    VAR missing = DIVIDE(\n\t                        [Utilization_hours_missing],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(missing <= 0, 0, missing)",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness]",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness %",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [utilization_hours_acq_internal_illness],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Spacer",
                                    "expression": "REPT(\"l\", 15)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion_OLD",
                                    "expression": "\n    IF(ISBLANK(VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)), 0, (VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_recorded",
                                    "expression": "[Utilization_hours_vacation_leave] + [Utilization_hours_training] + [Utilization_hours_illness] + [Utilization_hours_internal] + [Utilization_hours_acq] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG_OLD",
                                    "expression": "AVERAGE('rep v_hr_employee'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG_NEW",
                                    "expression": "AVERAGE('msr v_employee_utilization'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Tooltip_Timetheet_analysis",
                                    "expression": "\"based on target hours adjusted\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Tooltip_completion",
                                    "expression": "\"based on target hours\"",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_utilization_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix",
                            "columns": [
                                {
                                    "name": "key_date",
                                    "dataType": "DateTime",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "std_hours",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_code",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name_short",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "rep v_hr_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "per_org",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_emp_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_full_name",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone_mobile",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "name_prefix",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_display",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nickname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_display_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_manager_level",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "gender",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "empl_class_descr",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "national_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "middle_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "maiden_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "modify_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id_ps",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "legal_entity",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[country_code_iso3] & \"-\" & 'rep v_hr_employee'[jobcode_id]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED(utilization_budgets[utilization_target])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fullname_joblevel4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_joblevel4_mentor",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4] & \" - \" & 'rep v_hr_employee'[mentor_full_name]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id.1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region.old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"rep v_hr_employee_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "pub dim_date",
                            "columns": [
                                {
                                    "name": "DateKey",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Day",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Weekday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekDayName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekOfYear",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "MonthName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthnumber",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ISOWeekOfYearNameInCal",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & 'pub dim_date'[WeekOfYear]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MonthNameShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "UpToCurrentMonth",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR current_month = MONTH(TODAY())\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year, \n                    IF('pub dim_date'[Date].[MonthNo] <= current_month, //temporary switched from <= to < only\n                        1,\n                        0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Last4Next4Weeks",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR firstWeek = WEEKNUM(TODAY())-4\n    VAR lastWeek = WEEKNUM(TODAY())+3\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year,\n                    IF('pub dim_date'[WeekOfYear] >= firstWeek, \n                        IF('pub dim_date'[WeekOfYear] <= lastWeek,\n                            1,\n                            0),0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_month",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH(TODAY()) = 'pub dim_date'[Date].[MonthNo], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_week",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(WEEKNUM(TODAY()+1) = 'pub dim_date'[WeekOfYear], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "temp_CurrentWeek",
                                    "expression": "WEEKNUM(TODAY())",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_FirstWeek",
                                    "expression": "WEEKNUM(TODAY())-3",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_Lastweek",
                                    "expression": "WEEKNUM(TODAY())+4",
                                    "isHidden": false
                                },
                                {
                                    "name": "Column_width",
                                    "expression": "REPT(\"0\", 7)",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveMonthList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[MonthNameShort] ),\n        'pub dim_date'[MonthNameShort],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDay",
                                    "expression": "TODAY()",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDayWeek",
                                    "expression": "[CurrentDay] & \" (\" & [CurrentWeek] & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentWeek",
                                    "expression": "CALCULATE(\n                FIRSTNONBLANK('pub dim_date'[Calendarweek], \"\"), \n                FILTER(ALL('pub dim_date'), 'pub dim_date'[Date] = TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveWeekList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[Calendarweek] ),\n        'pub dim_date'[Calendarweek],\n        \", \"\n    )",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_dim_date = datahub{[Schema=\"pub\",Item=\"dim_date\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_dim_date, each Date.IsInCurrentYear([Date]) or Date.IsInPreviousYear([Date])),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"Date\", \"Day\", \"Weekday\", \"WeekDayName\", \"WeekOfYear\", \"Month\", \"MonthName\", \"Year\", \"YearMonthnumber\", \"FirstDayOfMonth\", \"YearMonthShort\", \"ISOWeekOfYearNameInCal\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Removed Other Columns\", \"MonthNameShort\", each Text.AfterDelimiter(Text.Proper([YearMonthShort]), \"/\"), type text)\nin\n    #\"Inserted Text After Delimiter\""
                                }
                            ]
                        },
                        {
                            "name": "Refresh_Timestamp",
                            "columns": [
                                {
                                    "name": "UTC timestamp",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Local timestamp with offset",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Last_refresh_local",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & WEEKNUM(Refresh_Timestamp[Last_refresh_local])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    StandardOffset = #duration(0, 1, 0, 0),\n    DaylightSavingTimeOffset = #duration(0, 2, 0, 0),\n\n    // get start and end of daylight saving time\n    // this code implements the rules of EU counties\n    // if it doesn't fill your expectations, visit https://en.wikipedia.org/wiki/Daylight_saving_time_by_country and implement your own function\n    fnDaylightSavingTimePeriod = (\n        now as datetime\n    ) as record => \n        let\n            // the daylight saving time starts on the last Sunday of March at 1am UTC\n            LastDayOfMarch = #date(Date.Year(now), 3, 31),\n            StartOfDaylightSavingTime = Date.AddDays(LastDayOfMarch, -Date.DayOfWeek(LastDayOfMarch)) & #time(1, 0, 0),\n            // the daylight saving time ends on the last Sunday in October at 1am UTC\n            LastDayOfOctober = #date(Date.Year(now), 10, 31),\n            EndOfDaylightSavingTime = Date.AddDays(LastDayOfOctober, -Date.DayOfWeek(LastDayOfOctober)) & #time(1, 0, 0)\n        in\n            [From = StartOfDaylightSavingTime, To = EndOfDaylightSavingTime],\n\n    // get a timestamp in UTC (with offset 00:00 all year long)\n    UtcNow = DateTimeZone.UtcNow(),\n    // convert UTC datetime with offset to datetime\n    UtcNowWithoutZone = DateTimeZone.RemoveZone(UtcNow),\n\n    // get daylight saving time period\n    DaylightSavingTimePeriod = fnDaylightSavingTimePeriod(UtcNowWithoutZone),\n\n    // convert UTC time to the local time with respect to current offset\n    LocalTimeWithOffset = \n        if UtcNowWithoutZone >= DaylightSavingTimePeriod[From] and UtcNowWithoutZone <= DaylightSavingTimePeriod[To] then\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(DaylightSavingTimeOffset), \n                Duration.Minutes(DaylightSavingTimeOffset)\n            )\n        else\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(StandardOffset), \n                Duration.Minutes(StandardOffset)\n            ),\n    \n    // current date time without offset\n    LocalTime = DateTimeZone.RemoveZone(LocalTimeWithOffset),\n\n    // result table\n    Result = #table(\n        type table\n        [\n            #\"UTC timestamp\" = datetime, \n            #\"UTC date\" = date,\n            #\"Local timestamp with offset\" = datetimezone,\n            #\"Local timestamp without offset\" = datetime\n        ], \n        {\n            {\n            UtcNowWithoutZone,\n            DateTime.Date(UtcNowWithoutZone),\n            LocalTimeWithOffset,\n            LocalTime\n            }\n        }\n    ),\n    #\"Inserted Date\" = Table.AddColumn(Result, \"Last_refresh_local\", each DateTime.Date([Local timestamp without offset]), type date),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Date\",{\"UTC date\", \"Local timestamp without offset\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_employee_project_hours",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approval_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_manager",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name_old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED('rep v_hr_employee'[mentor_full_name])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "recorded_time",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "time_type_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF('msr v_employee_project_hours'[time_type_category] IN {\"Productive Time\", \"Training\"}, 'msr v_employee_project_hours'[project_number] & \" - \" & 'msr v_employee_project_hours'[project_name], 'msr v_employee_project_hours'[time_type_category])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "approver",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF('msr v_employee_project_hours'[time_type_category] IN {\"Productive Time\", \"Training\"}, 'msr v_employee_project_hours'[project_manager], 'msr v_employee_project_hours'[mentor_full_name])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "project_time_type_combined",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_time_type_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_date_key",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_project_hours'[emp_id] & \"-\" & 'msr v_employee_project_hours'[calendar_day]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Hours_in_approval",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time])+0, 'msr v_employee_project_hours'[approval_status] IN {\"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_approved",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time]), 'msr v_employee_project_hours'[approval_status] IN {\"Approved\", \"Approval not Necessary\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_reported",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time]), 'msr v_employee_project_hours'[approval_status] IN {\"Approved\", \"Approval not Necessary\", \"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_in_approval_%",
                                    "expression": "DIVIDE([Hours_in_approval], [Hours_reported])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_in_approval_CP",
                                    "expression": "CALCULATE([Hours_in_approval]+0, 'msr v_employee_project_hours'[project_type] IN {\"CP\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Sum_recorded_time_hours",
                                    "expression": "SUM('msr v_employee_project_hours'[recorded_time])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Sum_recorded_time_days",
                                    "expression": "SUM('msr v_employee_project_hours'[recorded_time])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Days_in_approval",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time])/8+0, 'msr v_employee_project_hours'[approval_status] IN {\"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Days_in_approval_CP",
                                    "expression": "CALCULATE([Days_in_approval]+0, 'msr v_employee_project_hours'[project_type] IN {\"CP\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Hours in Approval",
                                    "expression": "\"Hours currently in approval: \" & FORMAT([Hours_in_approval],\"0\") & \" (CP: \" & FORMAT([Hours_in_approval_CP],\"0\") & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Days in Approval",
                                    "expression": "\"Days currently in approval: \" & FORMAT([Days_in_approval],\"0\") & \" (CP: \" & FORMAT([Days_in_approval_CP],\"0\") & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Euros_in_approval",
                                    "expression": "CALCULATE(SUMX('msr v_employee_project_hours',[recorded_time]/8*[daily_rate_eur])+0, 'msr v_employee_project_hours'[approval_status] IN {\"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Euros_in_approval_CP",
                                    "expression": "CALCULATE([Euros_in_approval]+0, 'msr v_employee_project_hours'[project_type] IN {\"CP\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Euros in Approval",
                                    "expression": "\"Euros currently in approval: \" & SUBSTITUTE(FORMAT([Euros_in_approval], \"#,##,,.0M\"),\".\",\",\") & \" (CP: \" & SUBSTITUTE(FORMAT([Euros_in_approval_CP],\"#,##,,.0M\"),\".\",\",\") & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic_in_approval",
                                    "expression": "SWITCH(\n    SELECTEDVALUE('D/H Slicer'[D/H]),\n    \"Days\", [Days_in_approval],\n    \"Hours\",[Hours_in_approval],\n    0\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic_in_approval_CP",
                                    "expression": "SWITCH(\n    SELECTEDVALUE('D/H Slicer'[D/H]),\n    \"Days\", [Days_in_approval_CP],\n    \"Hours\",[Hours_in_approval_CP],\n    0\n)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_project_hours_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "Comparison_Table",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Employee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Utilization_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CALCULATE([Utilization % YTD], ALLEXCEPT(Comparison_Table, Comparison_Table[emp_id]))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Utilization_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CALCULATE([Utilization % LM], ALLEXCEPT(Comparison_Table, Comparison_Table[emp_id]))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "(Comparison_Table[Target] - Comparison_Table[Utilization_YTD]) * -1",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "(Comparison_Table[Target] - Comparison_Table[Utilization_LM]) * -1",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_rounded_0.05_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CEILING(Comparison_Table[Delta_YTD], 0.05)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_rounded_0.05_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CEILING(Comparison_Table[Delta_LM], 0.05)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "Comparison_Table[Delta_rounded_0.05_YTD]*100",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "Comparison_Table[Delta_rounded_0.05_LM]*100",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_YTD_table",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "ROUND(Comparison_Table[Delta_YTD] * 100, 0)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_LM_table",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "ROUND(Comparison_Table[Delta_LM] * 100, 0)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Info Button",
                                    "expression": "UNICHAR(128712)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "SELECTCOLUMNS('rep v_hr_employee', \n                        \"emp_id\", 'rep v_hr_employee'[emp_id],\n                        \"Employee\", 'rep v_hr_employee'[full_name], \n                        \"Target\", 'rep v_hr_employee'[utilization_target])"
                                }
                            ]
                        },
                        {
                            "name": "utilization_budgets",
                            "columns": [
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "utilization_budgets[country_code_iso3] & \"-\" & utilization_budgets[jobcode_id]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/utilization_budgets.xlsx\"), null, true),\n    utilization_budgets_Table = Source{[Item=\"utilization_budgets\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(utilization_budgets_Table,{{\"country_code_iso3\", type text}, {\"jobcode_id\", type text}, {\"jobcode\", type text}, {\"job_short\", type text}, {\"utilization_target\", type number}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "D/H Utilization Deepdive",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "SWITCH(\n    TRUE(),\n    CONTAINSSTRING('D/H Utilization Deepdive'[Fields], \"hours\"), \"Hours\",\"Days\"\n)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Target hours\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours]), 0),\n    (\"Target hours adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours_utilization]), 1),\n    (\"Target days\", NAMEOF('msr v_employee_utilization'[Utilization_target_days]), 0),\n    (\"Target days adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_days_utilization]), 1),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_hours_on_client_project]), 2),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_days_on_client_project]), 2)\n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Utilization Drillthrough",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Hours/Days Drillthrough Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Hours/Days Drillthrough Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{ --And Time in Approval\n    (\"Hours\", NAMEOF('msr v_employee_project_hours'[Sum_recorded_time_hours]), 1,\"Hours\"),\n    (\"Days\", NAMEOF('msr v_employee_project_hours'[Sum_recorded_time_days]), 0,\"Days\")\n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Slicer",
                            "columns": [
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{(\"Days\"),(\"Hours\")}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Timesheet Analysis",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Timesheet Analysis Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Timesheet Analysis Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Text Button Details Hours/Days",
                                    "expression": "\"Details \" & LOWER(SELECTEDVALUE('D/H Slicer'[D/H]))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Target days\", NAMEOF('msr v_employee_utilization'[Utilization_target_days]), 0, \"Days\"),\n    (\"Vacation & leave\", NAMEOF('msr v_employee_utilization'[Utilization_days_vacation_leave_bridge]), 1, \"Days\"),\n    (\"Training\", NAMEOF('msr v_employee_utilization'[Utilization_days_training_bridge]), 2, \"Days\"),\n    (\"Target days adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_days_utilization]), 3, \"Days\"),\n    (\"Sickness\", NAMEOF('msr v_employee_utilization'[Utilization_days_illness_bridge]), 4, \"Days\"),\n    (\"Internal\", NAMEOF('msr v_employee_utilization'[Utilization_days_internal_bridge]), 5, \"Days\"),\n    (\"Acq\", NAMEOF('msr v_employee_utilization'[Utilization_days_acq_bridge]), 6, \"Days\"),\n    (\"Missing days\", NAMEOF('msr v_employee_utilization'[Utilization_days_missing_bridge]), 7, \"Days\"),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_days_on_client_project]), 8, \"Days\"),\n\n    (\"Target hours\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours]), 0, \"Hours\"),\n    (\"Vacation & leave\", NAMEOF('msr v_employee_utilization'[Utilization_hours_vacation_leave_bridge]), 1, \"Hours\"),\n    (\"Training\", NAMEOF('msr v_employee_utilization'[Utilization_hours_training_bridge]), 2, \"Hours\"),\n    (\"Target hours adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours_utilization]), 3, \"Hours\"),\n    (\"Sickness\", NAMEOF('msr v_employee_utilization'[Utilization_hours_illness_bridge]), 4, \"Hours\"),\n    (\"Internal\", NAMEOF('msr v_employee_utilization'[Utilization_hours_internal_bridge]), 5, \"Hours\"),\n    (\"Acq\", NAMEOF('msr v_employee_utilization'[Utilization_hours_acq_bridge]), 6, \"Hours\"),\n    (\"Missing hours\", NAMEOF('msr v_employee_utilization'[Utilization_hours_missing_bridge]), 7, \"Hours\"),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_hours_on_client_project]), 8, \"Hours\")   \n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Approval Textbox",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Approval Textbox Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Approval Textbox Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Text days in approval\", NAMEOF('msr v_employee_project_hours'[Text Days in Approval]), 0, \"Days\"),\n    (\"Text dours in approval\", NAMEOF('msr v_employee_project_hours'[Text Hours in Approval]), 1, \"Hours\")\n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Completion Deepdive",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Completion Deepdive Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Completion Deepdive Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Days missing\", NAMEOF('msr v_employee_utilization'[Utilization_days_missing]), 0, \"Days\"),\n    (\"Hours missing\", NAMEOF('msr v_employee_utilization'[Utilization_hours_missing]), 1, \"Hours\")\n}"
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform",
                            "columns": [
                                {
                                    "name": "platform_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform = Source{[Schema=\"rep\",Item=\"v_ll_head_platform\"]}[Data]\nin\n    rep_v_ll_head_platform"
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform_DACH",
                            "columns": [
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform_DACH = Source{[Schema=\"rep\",Item=\"v_ll_head_platform_DACH\"]}[Data]\nin\n    rep_v_ll_head_platform_DACH"
                                }
                            ]
                        },
                        {
                            "name": "rep v_II_head_region_country",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.Combine({#\"rep v_ll_head_region\", #\"rep v_ll_head_country\"})\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "pub v_ll_company_to_region",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    pub_v_ll_company_to_region = Source{[Schema=\"pub\",Item=\"v_ll_company_to_region\"]}[Data],\n    #\"Replaced Value\" = Table.ReplaceValue(pub_v_ll_company_to_region,\"polariXpartner\",\"PXPartner\",Replacer.ReplaceText,{\"region_reporting_level3\"}),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Replaced Value\", \"region_reporting_level1_sort\", each if [region_reporting_level1] = \"EMEA\" then 1 else if [region_reporting_level1] = \"Non-operational companies\" then 6 else if [region_reporting_level1] = \"Holding\" then 5 else if [region_reporting_level1] = \"Other RB companies\" then 4 else if [region_reporting_level1] = \"Americas\" then 2 else if [region_reporting_level1] = \"Asia\" then 3 else if [region_reporting_level1] = \"RUS\" then 7 else null, type number),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Added Conditional Column\", each ([region_reporting_level1] <> null and [region_reporting_level1] <> \"Non-operational companies\" and [region_reporting_level1] <> \"RUS\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "Jobcodes",
                            "expression": "let\n    Source = Jobcodes_T,\n    Publish = Source\nin\n    Publish"
                        },
                        {
                            "name": "Jobcodes_Excel",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"Vc45DoAwDETRu1BTOJi1xCZFIkVYcYkQ978FdEzKp5niX1eXT3mIgu3c3T1waBl+BrKagIsVOIfZyq+BXHHcxGEcJVYgN2SSDOOG4kkxkGfdse9IFfvUC/ZpI4+Y55jHbqA1f9v9Ag==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Jobcode_Excel = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Jobcode_Excel\", type text}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Jobcode_Excel\", Splitter.SplitTextByDelimiter(\"_\", QuoteStyle.Csv), {\"Jobcode_Excel.1\", \"Jobcode_Excel.2\"}),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Jobcode_Excel.1\", type text}, {\"Jobcode_Excel.2\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type1\",{\"Jobcode_Excel.1\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Jobcode_Excel.2\", \"Jobcode_Excel\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_utilization_target",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"key_date\", \"emp_id\", \"job_code\", \"country_code_iso3\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"job.Kurz-Bezeichnung\", \"job_short\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"key_date\", \"emp_id\", \"country_code_iso3\", \"job_code\", \"job_short\", \"job.Bezeichnung\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(Jobcodes_Table,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}, {\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Jobcode\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"Utilization Target Rate\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"Jobcode\", \"jobcode_id\"}, {\"Kurz-Bezeichnung\", \"job_short\"}, {\"Bezeichnung\", \"jobcode\"}, {\"Utilization Target Rate\", \"utilization_target\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach_ger",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_dach\",\n    #\"Added Custom\" = Table.AddColumn(Source, \"country_code_iso3\", each \"GER\", type text),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Reordered Columns\",\"GER\",\"DEU\",Replacer.ReplaceText,{\"country_code_iso3\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach_aut",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_dach\",\n    #\"Added Custom\" = Table.AddColumn(Source, \"country_code_iso3\", each \"AUT\", type text),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach_che",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_dach\",\n    #\"Added Custom\" = Table.AddColumn(Source, \"country_code_iso3\", each \"CHE\", type text),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "msr v_fc_project_data",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_fc_project_data = datahub{[Schema=\"msr\",Item=\"v_fc_project_data\"]}[Data]\nin\n    msr_v_fc_project_data"
                        },
                        {
                            "name": "sec ll_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_ll_job = Source{[Schema=\"sec\",Item=\"ll_job\"]}[Data],\n    #\"Expanded rep.ll_job_reporting_level1\" = Table.ExpandRecordColumn(sec_ll_job, \"rep.ll_job_reporting_level1\", {\"level1_sort_id\"}, {\"job_reporting_level1_sort\"}),\n    #\"Expanded rep.ll_job_reporting_level2\" = Table.ExpandRecordColumn(#\"Expanded rep.ll_job_reporting_level1\", \"rep.ll_job_reporting_level2\", {\"level2_sort_id\"}, {\"job_reporting_level2_sort\"}),\n    #\"Expanded rep.ll_job_reporting_level3\" = Table.ExpandRecordColumn(#\"Expanded rep.ll_job_reporting_level2\", \"rep.ll_job_reporting_level3\", {\"level3_sort_id\"}, {\"job_reporting_level3_sort\"}),\n    #\"Expanded rep.ll_job_reporting_level4\" = Table.ExpandRecordColumn(#\"Expanded rep.ll_job_reporting_level3\", \"rep.ll_job_reporting_level4\", {\"level4_sort_id\"}, {\"job_reporting_level4_sort\"})\nin\n    #\"Expanded rep.ll_job_reporting_level4\""
                        },
                        {
                            "name": "msr v_byd_daily_rates",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_byd_daily_rates = datahub{[Schema=\"msr\",Item=\"v_byd_daily_rates\"]}[Data]\nin\n    msr_v_byd_daily_rates"
                        },
                        {
                            "name": "msr v_employee_utilization_T",
                            "expression": "let\n    Source = #\"msr v_employee_utilization_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_hr_employee_job_matrix\", {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\", \"utilization_target\", \"platform_1_name\", \"platform_1_name_short\", \"platform_1_sort\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\", \"full_name\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}, {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\", \"utilization_target\", \"platform_1_name\", \"platform_1_name_short\", \"platform_1_sort\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\", \"full_name\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each ([job.Im Scope] = \"x\"))\nin\n    #\"Filtered Rows1\""
                        },
                        {
                            "name": "msr v_employee_project_hours_T",
                            "expression": "let\n    Source = #\"msr v_employee_project_hours_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_hr_employee_job_matrix\", {\"job.Im Scope\", \"daily_rate_eur\", \"mentor_full_name\"}, {\"job.Im Scope\", \"daily_rate_eur\", \"mentor_full_name\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each [job.Im Scope] = \"x\"),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows1\", {\"project_number\"}, #\"msr v_fc_project_data\", {\"project_number\"}, \"msr v_fc_project_data\", JoinKind.LeftOuter),\n    #\"Expanded msr v_fc_project_data\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_fc_project_data\", {\"project_name\", \"project_manager\", \"project_type\"}, {\"project_name\", \"project_manager\", \"project_type\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded msr v_fc_project_data\",\"CPA\",\"CP\",Replacer.ReplaceText,{\"project_type\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"INT\",\"INP\",Replacer.ReplaceText,{\"project_type\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Replaced Value1\", \"project_time_type_combined\", each if List.Contains({\"Vacation\",\"Illness\",\"Leave\"},[time_type_category]) then [time_type_category] else if [project_type] = null then \"Other\" else [project_type], type text),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Added Custom\", \"project_time_type_sort\", each if [project_time_type_combined] = \"CP\" then 1 else if [project_time_type_combined] = \"ACQ\" then 2 else if [project_time_type_combined] = \"INP\" then 3 else if [project_time_type_combined] = \"TRN\" then 4 else if [project_time_type_combined] = \"HR\" then 5 else if [project_time_type_combined] = \"Vacation\" then 6 else if [project_time_type_combined] = \"Leave\" then 7 else if [project_time_type_combined] = \"Illness\" then 8 else if [project_time_type_combined] = \"MKT\" then 9 else if [project_time_type_combined] = \"Other\" then 10 else 99, Int64.Type)\nin\n    #\"Added Conditional Column\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_T",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([key_date]) or Date.IsInPreviousYear([key_date])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"job_code\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"JobGroup\", \"Jobcode_Excel\"}, {\"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"job.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([job.Im Scope] = \"x\")),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows1\", {\"job_code\", \"company_id_byd\"}, #\"msr v_byd_daily_rates\", {\"jobcode_id\", \"company_id\"}, \"msr v_byd_daily_rates\", JoinKind.LeftOuter),\n    #\"Expanded msr v_byd_daily_rates\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_byd_daily_rates\", {\"amount_eur\"}, {\"daily_rate_eur\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded msr v_byd_daily_rates\", {\"job_code\", \"country_code_iso3\"}, utilization_budgets, {\"jobcode_id\", \"country_code_iso3\"}, \"utilization_budgets\", JoinKind.LeftOuter),\n    #\"Expanded utilization_budgets\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"utilization_budgets\", {\"utilization_target\"}, {\"utilization_target\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded utilization_budgets\",\"9900\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Replaced Value\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_name\", \"platform_1_name_short\", \"platform_1_sort\"}, {\"platform_1_name\", \"platform_1_name_short\", \"platform_1_sort\"}),\n    #\"Merged Queries4\" = Table.NestedJoin(#\"Expanded platform_sort\", {\"company_id_byd\"}, #\"pub v_ll_company_to_region\", {\"org_unit_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries4\", \"pub v_ll_company_to_region\", {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}, {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}),\n    #\"Merged Queries5\" = Table.NestedJoin(#\"Expanded pub v_ll_company_to_region\", {\"emp_id\"}, #\"rep v_hr_employee\", {\"emp_id\"}, \"rep v_hr_employee\", JoinKind.LeftOuter),\n    #\"Expanded rep v_hr_employee\" = Table.ExpandTableColumn(#\"Merged Queries5\", \"rep v_hr_employee\", {\"full_name\"}, {\"full_name\"}),\n    #\"Merged Queries6\" = Table.NestedJoin(#\"Expanded rep v_hr_employee\", {\"job_code\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries6\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries7\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"mentor_id\"}, #\"rep v_hr_employee\", {\"emp_id\"}, \"rep v_hr_employee\", JoinKind.LeftOuter),\n    #\"Expanded rep v_hr_employee1\" = Table.ExpandTableColumn(#\"Merged Queries7\", \"rep v_hr_employee\", {\"full_name\"}, {\"mentor_full_name\"})\nin\n    #\"Expanded rep v_hr_employee1\""
                        },
                        {
                            "name": "rep v_hr_employee_T",
                            "expression": "let\n    Source = #\"rep v_hr_employee_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each [ter_max_date] > #date(2022, 12, 31)),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows\",\"Junior Consultant 1##\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Junior Consultant 1#\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Group Function RB N3XT\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"jobcode_id\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"company_id\"}, #\"pub v_ll_company_to_region\", {\"company_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"pub v_ll_company_to_region\", {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}, {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Expanded pub v_ll_company_to_region\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Reordered Columns\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_id\", \"platform_1_sort\"}, {\"platform_1_id.1\", \"platform_1_sort\"}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Expanded platform_sort\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_1_sort\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns1\",{{\"region\", \"region.old\"}}),\n    #\"Cleaned Text\" = Table.TransformColumns(#\"Renamed Columns\",{{\"job_reporting_level2\", Text.Clean, type text}}),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"job_reporting_level2\", Text.Trim, type text}}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Trimmed Text\",null,9,Replacer.ReplaceValue,{\"platform_1_sort\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value5\",\"9720\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Group Function F&C\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"})\nin\n    #\"Replaced Value4\""
                        },
                        {
                            "name": "Jobcodes_T",
                            "expression": "let\n    Source = Jobcodes_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type1\", {\"Jobcode\"}, Jobcodes_Excel, {\"Jobcode_Excel\"}, \"Jobcodes_Excel\", JoinKind.FullOuter),\n    #\"Expanded Jobcodes_Excel\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes_Excel\", {\"Jobcode_Excel\"}, {\"Jobcode_Excel\"})\nin\n    #\"Expanded Jobcodes_Excel\""
                        },
                        {
                            "name": "xlsx utilization_targets_T",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_E\",\n    #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Column1\", type any}, {\"2023 Utilization & Capture rate Budget\", type text}, {\"Column3\", type any}, {\"Column4\", type any}, {\"Column5\", type any}, {\"Column6\", type any}, {\"Column7\", type any}, {\"Column8\", type any}, {\"Column9\", type any}, {\"Column10\", type any}, {\"Column11\", type any}, {\"Column12\", type any}, {\"Column13\", type any}, {\"Column14\", type any}, {\"Column15\", type any}, {\"Column16\", type any}, {\"Column17\", type any}, {\"Column18\", type any}, {\"Column19\", type any}, {\"Column20\", type any}, {\"Column21\", type any}, {\"Column22\", type any}, {\"Column23\", type any}, {\"Column24\", type any}, {\"Column25\", type any}, {\"Column26\", type any}, {\"Column27\", type any}, {\"Column28\", type any}, {\"Column29\", type any}, {\"Column30\", type any}, {\"Column31\", type any}, {\"Column32\", type any}, {\"Column33\", type any}, {\"Column34\", type any}, {\"Column35\", type any}, {\"Column36\", type any}, {\"Column37\", type any}, {\"Column38\", type any}, {\"Column39\", type any}, {\"Column40\", type any}, {\"Column41\", type any}, {\"Column42\", type any}, {\"Column43\", type any}, {\"Column44\", type any}, {\"Column45\", type any}, {\"Column46\", type any}, {\"Column47\", type any}, {\"Column48\", type any}, {\"Column49\", type any}, {\"Column50\", type any}, {\"Column51\", type any}, {\"Column52\", type any}, {\"Column53\", type any}, {\"Column54\", type any}, {\"Column55\", type any}, {\"Column56\", type any}, {\"Column57\", type any}, {\"Column58\", type any}, {\"Column59\", type any}, {\"Column60\", type any}, {\"Column61\", type any}, {\"Column62\", Int64.Type}, {\"Column63\", type any}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"}),\n    #\"Removed Top Rows\" = Table.Skip(#\"Removed Columns\",5),\n    #\"Kept First Rows\" = Table.FirstN(#\"Removed Top Rows\",16),\n    #\"Promoted Headers1\" = Table.PromoteHeaders(#\"Kept First Rows\", [PromoteAllScalars=true]),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Promoted Headers1\",{{\"Column1\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", type number}, {\"KSA\", type number}, {\"UAE\", type number}, {\"CIS\", type number}, {\"RUS\", Int64.Type}, {\"UKR\", type number}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", type number}, {\"CHE\", type number}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", type number}, {\"HUN\", type number}, {\"ITA\", type number}, {\"MOR\", type number}, {\"NLD\", type number}, {\"NOR\", type number}, {\"PRT\", type number}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", type number}, {\"CZE\", type number}, {\"CRO\", type number}, {\"POL\", type number}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type any}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", type number}, {\"SEA\", type number}, {\"IDN\", type number}, {\"MMR\", Int64.Type}, {\"MYS\", type number}, {\"SGP\", type number}, {\"THA\", type number}, {\"VNM\", type number}, {\"Asia\", type number}, {\"Polarix\", type number}, {\"PX Partner\", type any}, {\"PX Engineers\", type any}, {\"PX America\", type any}, {\"TMG\", type any}, {\"Placeholder\", type any}, {\"Other RB companies\", type any}, {\"Subtotal\", type number}, {\"HOL\", type number}, {\"Total\", Int64.Type}, {\"Column61\", Int64.Type}, {\"Column62\", type any}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type1\", \"Column1\", Splitter.SplitTextByEachDelimiter({\" \"}, QuoteStyle.Csv, false), {\"Column1.1\", \"Column1.2\"}),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Column1.1\", type text}, {\"Column1.2\", type text}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type2\",{\"Column1.2\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns1\",{{\"Column1.1\", \"job_short\"}}),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Renamed Columns\",{\"job_short\", \"BEL\", \"QAT\", \"BHR\", \"KSA\", \"UAE\", \"CIS\", \"RUS\", \"UKR\", \"ESP\", \"FRA\", \"HUN\", \"ITA\", \"MOR\", \"NLD\", \"NOR\", \"PRT\", \"ROU\", \"UK\", \"CEE\", \"CZE\", \"CRO\", \"POL\", \"BRA\", \"CAN\", \"USA\", \"MEX\", \"CHN_1\", \"HKG\", \"IND\", \"JPN\", \"KOR\", \"IDN\", \"MMR\", \"MYS\", \"SGP\", \"THA\", \"VNM\", \"Polarix\"}),\n    #\"Renamed Columns4\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"CHN_1\", \"CHN\"}}),\n    #\"Replace Null with 0\" = Table.TransformColumns(#\"Renamed Columns4\",{},(x) => Replacer.ReplaceValue(x,null,0)),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Replace Null with 0\", {\"job_short\"}, \"Attribute\", \"Value\"),\n    #\"Replace 0 with Null\" = Table.TransformColumns(#\"Unpivoted Other Columns\",{},(x) => Replacer.ReplaceValue(x,0,null)),\n    #\"Changed Type4\" = Table.TransformColumnTypes(#\"Replace 0 with Null\",{{\"job_short\", type text}, {\"Attribute\", type text}, {\"Value\", type number}}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type4\",{{\"Attribute\", \"country_code_iso3\"}, {\"Value\", \"utilization_target\"}}),\n    #\"Changed Type3\" = Table.TransformColumnTypes(#\"Renamed Columns1\",{{\"utilization_target\", type number}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type3\", {\"job_short\"}, Jobcodes, {\"Kurz-Bezeichnung\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Jobcode\", \"Bezeichnung\"}, {\"Jobcode\", \"Bezeichnung\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded Jobcodes\",{{\"Bezeichnung\", \"jobcode\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns2\",{\"country_code_iso3\", \"jobcode\", \"job_short\", \"utilization_target\"}),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Reordered Columns\",{{\"Jobcode\", \"jobcode_id\"}}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Renamed Columns3\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"}),\n    #\"Appended Query\" = Table.Combine({#\"Reordered Columns1\", #\"xlsx utilization_targets_dach_ger\"}),\n    #\"Appended Query1\" = Table.Combine({#\"Appended Query\", #\"xlsx utilization_targets_dach_aut\"}),\n    #\"Appended Query2\" = Table.Combine({#\"Appended Query1\", #\"xlsx utilization_targets_dach_che\"})\nin\n    #\"Appended Query2\""
                        },
                        {
                            "name": "msr v_employee_utilization_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_utilization = datahub{[Schema=\"msr\",Item=\"v_employee_utilization\"]}[Data]\nin\n    msr_v_employee_utilization"
                        },
                        {
                            "name": "msr v_employee_project_hours_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_project_hours = datahub{[Schema=\"msr\",Item=\"v_employee_project_hours\"]}[Data]\nin\n    msr_v_employee_project_hours"
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_hr_employee_job_matrix = datahub{[Schema=\"msr\",Item=\"v_hr_employee_job_matrix\"]}[Data]\nin\n    msr_v_hr_employee_job_matrix"
                        },
                        {
                            "name": "rep v_hr_employee_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_hr_employee = datahub{[Schema=\"rep\",Item=\"v_hr_employee\"]}[Data]\nin\n    rep_v_hr_employee"
                        },
                        {
                            "name": "Jobcodes_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data]\nin\n    Jobcodes_Table"
                        },
                        {
                            "name": "xlsx utilization_targets_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/2023_Budget_Utilization_Capture%20rate.xlsx\"), null, true),\n    #\"Utilization & Cap. Rate Bdg23_Sheet\" = Source{[Item=\"Utilization & Cap. Rate Bdg23\",Kind=\"Sheet\"]}[Data]\nin\n    #\"Utilization & Cap. Rate Bdg23_Sheet\""
                        },
                        {
                            "name": "sec ll_job (2)",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Name] = \"rep.ll_job_reporting_level1\" or [Name] = \"rep.ll_job_reporting_level2\" or [Name] = \"rep.ll_job_reporting_level3\" or [Name] = \"rep.ll_job_reporting_level4\")),\n    rep_ll_job_reporting_level1 = #\"Filtered Rows\"{[Schema=\"rep\",Item=\"ll_job_reporting_level1\"]}[Data],\n    Consulting = rep_ll_job_reporting_level1{[job_reporting_level1=\"Consulting\"]}[sec.ll_job]\nin\n    Consulting"
                        },
                        {
                            "name": "rep v_ll_head_region",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_region = Source{[Schema=\"rep\",Item=\"v_ll_head_region\"]}[Data]\nin\n    rep_v_ll_head_region"
                        },
                        {
                            "name": "rep v_ll_head_country",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_country = Source{[Schema=\"rep\",Item=\"v_ll_head_country\"]}[Data],\n    #\"Renamed Columns\" = Table.RenameColumns(rep_v_ll_head_country,{{\"emp_id_head\", \"emp_id\"}, {\"email_head\", \"email\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "platform_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}, {\"platform_1_name_short\", type text}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "xlsx utilization_targets",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_T\",\n    Publish = Source\nin\n    Publish"
                        }
                    ],
                    "roles": [
                        {
                            "name": "Admin",
                            "modelPermission": "Read"
                        },
                        {
                            "name": "RLS restricted",
                            "modelPermission": "Read",
                            "members": [
                                {
                                    "memberName": "lion.barone@rolandberger.com",
                                    "memberId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "chris.breitenfeld@rolandberger.com",
                                    "memberId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "adalberto.brinez@rolandberger.com",
                                    "memberId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "till.friedel@rolandberger.com",
                                    "memberId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "michael.gold@rolandberger.com",
                                    "memberId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "vivien.graf@rolandberger.com",
                                    "memberId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Felix.Hubmann@rolandberger.com",
                                    "memberId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "lars.krueger@rolandberger.com",
                                    "memberId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "michael.mueller@rolandberger.com",
                                    "memberId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "peiling.ng@rolandberger.com",
                                    "memberId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Fang.Qian@rolandberger.com",
                                    "memberId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Matthias.Rueckriegel@rolandberger.com",
                                    "memberId": "68201354-f954-42e0-8518-86f1323829b0",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "juliane.schuetze@rolandberger.com",
                                    "memberId": "79279619-938b-4ece-8526-e640e3d90c5c",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sascha.schuster@rolandberger.com",
                                    "memberId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "brandon.smith@rolandberger.com",
                                    "memberId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "juergen.stubert@rolandberger.com",
                                    "memberId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "willi.viefers@org.rolandberger.com",
                                    "memberId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sebastian.weber2@rolandberger.com",
                                    "memberId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "florian.welte@rolandberger.com",
                                    "memberId": "5284d013-644a-48d2-b93b-0d37177c5993",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                }
                            ],
                            "tablePermissions": [
                                {
                                    "name": "rep v_II_head_region_country",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_ll_head_platform",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_ll_head_platform_DACH",
                                    "filterExpression": "[email] = username()"
                                }
                            ]
                        },
                        {
                            "name": "General Head",
                            "modelPermission": "Read",
                            "tablePermissions": [
                                {
                                    "name": "msr v_employee_utilization",
                                    "filterExpression": "[platform_1_name] = \"General\""
                                }
                            ]
                        }
                    ],
                    "configuredBy": "matthias.gessenay@org.rolandberger.com",
                    "configuredById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "isEffectiveIdentityRequired": true,
                    "isEffectiveIdentityRolesRequired": true,
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-08-28T13:02:57.2",
                    "contentProviderType": "PbixInImportMode",
                    "misconfiguredDatasourceUsages": [
                        {
                            "datasourceInstanceId": "918fd35f-ba7f-42d9-af7a-e372ca4eeab9"
                        },
                        {
                            "datasourceInstanceId": "2509d929-2298-4623-8a0e-dc5e3181de05"
                        },
                        {
                            "datasourceInstanceId": "3e436f3a-a73f-410d-87f2-027dda870b3c"
                        },
                        {
                            "datasourceInstanceId": "3336848e-4278-4d97-8038-83d48054a6c5"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "9a48e7fe-5b1a-4c14-a70c-c9d3c7afaa77",
                    "name": "Performance Summary",
                    "tables": [
                        {
                            "name": "msr v_employee_utilization",
                            "columns": [
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "absence_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "training_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_public_holiday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_weekend",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TA: Vacation & other leave",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[vacation_hours] + 'msr v_employee_utilization'[leave_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "TA: Target hours adj.",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[target_hours] - 'msr v_employee_utilization'[TA: Vacation & other leave] - 'msr v_employee_utilization'[training_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "booked_hours",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[absence_hours] + 'msr v_employee_utilization'[training_hours] + 'msr v_employee_utilization'[productive_hours_utilization]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "acq_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Utilization % Day",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nif('msr v_employee_utilization'[target_hours] = 0 && 'msr v_employee_utilization'[productive_hours_utilization] > 0, 8,\nDIVIDE('msr v_employee_utilization'[productive_hours_utilization], 'msr v_employee_utilization'[target_hours],0))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Utilization_target_hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %",
                                    "expression": "\nDIVIDE(\n\t[Utilization_hours_on_client_project],\n\t[Utilization_target_hours]\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target",
                                    "expression": "0.8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance",
                                    "expression": "'msr v_employee_utilization'[Utilization %] - 'msr v_employee_utilization'[Utilization Target]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance String",
                                    "expression": "\"(\" & 'msr v_employee_utilization'[Utilization Performance Short] & \"ppt.)\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance Short",
                                    "expression": "FIXED('msr v_employee_utilization'[Utilization Performance] * 100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target String",
                                    "expression": "\"Target: \" & 'msr v_employee_utilization'[Utilization Target] * 100 & \"%\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target & Performance",
                                    "expression": "[Utilization Target String] & \" \" & [Utilization Performance String]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % CY",
                                    "expression": "\nvar productive_hours_utilization = CALCULATE(SUM('msr v_employee_utilization'[productive_hours_utilization]), DATESYTD('pub dim_date'[Date]))\n \n Return\n    productive_hours_utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute_2",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %_2",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (all vs th)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[booked_hours]), SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (prod+ill vs adj.)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[productive_hours_utilization])+SUM('msr v_employee_utilization'[illness_hours]), SUM('msr v_employee_utilization'[TA: Target hours adj.]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "TA: Target hours adj. Total",
                                    "expression": "SUM('msr v_employee_utilization'[TA: Target hours adj.])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (reported)",
                                    "expression": "DIVIDE([Hours_reported], [TA: Target hours adj. Total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness",
                                    "expression": "SUM('msr v_employee_utilization'[illness_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge",
                                    "expression": "[Utilization_hours_illness] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal",
                                    "expression": "SUM('msr v_employee_utilization'[inp_project_hours_adj])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge",
                                    "expression": "[Utilization_hours_internal] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq",
                                    "expression": "SUM('msr v_employee_utilization'[acq_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge",
                                    "expression": "[Utilization_hours_acq] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training",
                                    "expression": "SUM('msr v_employee_utilization'[training_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge",
                                    "expression": "[Utilization_hours_training] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave",
                                    "expression": "SUM('msr v_employee_utilization'[vacation_hours]) + SUM('msr v_employee_utilization'[leave_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion",
                                    "expression": "\n    IF(ISBLANK(VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)), 0, (VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % PY",
                                    "expression": "CALCULATE([Utilization %_2], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted",
                                    "expression": "\n    VAR number_decimal = DIVIDE([Utilization_target_hours], 1000)\n    VAR number_whole = FIXED(number_decimal, 0)\nRETURN\n    number_whole & \"k h\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted_2",
                                    "expression": "[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge_formatted",
                                    "expression": "[Utilization_hours_vacation_leave_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization_formatted",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge_formatted",
                                    "expression": "[Utilization_hours_training_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge_formatted",
                                    "expression": "[Utilization_hours_illness_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge_formatted",
                                    "expression": "[Utilization_hours_internal_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge_formatted",
                                    "expression": "[Utilization_hours_acq_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project_formatted",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-4)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "start_3_month",
                                    "expression": "EOMONTH(TODAY(),-4)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M_test",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n        MIN('pub dim_date'[Date]),\n        FILTER(\n            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month))\nRETURN\n    utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_12M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_txt",
                                    "expression": "\"L12M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_12M], \"0%\") & \"  |  L3M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_3M], \"0%\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Customer",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Internal_Acq_Sick",
                                    "expression": "([Utilization_hours_illness_bridge_formatted] + [Utilization_hours_internal_bridge_formatted] + [Utilization_hours_acq_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Vacation_Leave_Training",
                                    "expression": "([Utilization_hours_vacation_leave_bridge_formatted] + [Utilization_hours_training_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG",
                                    "expression": "AVERAGE('rep v_hr_employee'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Target_Hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Missing_Hours",
                                    "expression": "[Timesheet_Target_Hours] - [Timesheet_Customer] - [Timesheet_Vacation_Leave_Training] - [Timesheet_Internal_Acq_Sick]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target for Table",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing",
                                    "expression": "[Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing_bridge",
                                    "expression": "[Utilization_hours_missing] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target]*100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % LM",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[Month] = MONTH(TODAY())-1, 'pub dim_date'[Year] = YEAR(TODAY()))\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % YTD",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[UpToCurrentMonth] = 1)\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'),'pub dim_date'[UpToCurrentMonth] = 1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target LM",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'), 'pub dim_date'[Month] = MONTH(TODAY())-1 && 'pub dim_date'[Year] = YEAR(TODAY()))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target YTD]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target LM]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_reported",
                                    "expression": "Not available",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Missing Hours",
                                    "expression": "\n    VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR missing_hours = target_hours_utilization - hours_reported \nRETURN\n    missing_hours",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Reported Hours",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Target Hours adj.",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD old",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, 'pub dim_date'[UpToCurrentMonth] = 1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted_table",
                                    "expression": "\"AVG Δ Year to date: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted_table",
                                    "expression": "\"AVG Δ Last Month: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_training_bridge",
                                    "expression": "[Utilization_hours_training]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_illness_bridge",
                                    "expression": "[Utilization_hours_illness]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_internal_bridge",
                                    "expression": "[Utilization_hours_internal]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_acq_bridge",
                                    "expression": "[Utilization_hours_acq]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing_bridge",
                                    "expression": "[Utilization_hours_missing]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Single Employee Selected",
                                    "expression": "\nvar emp = SELECTEDVALUE('rep v_hr_employee'[emp_id],\"multiple\")\nreturn\nif(emp = \"multiple\",0,1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Special Time Model",
                                    "expression": "if([Flag Single Employee Selected] && [Flag Special Time Model],\"Values > 100% may be due to special time models\",\"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Special Time Model",
                                    "expression": "if(max('msr v_employee_utilization'[Utilization % Day]) > 1, 1,0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp PY",
                                    "expression": "ROUND(CALCULATE('msr v_employee_utilization'[Utilization Δ Target pp], SAMEPERIODLASTYEAR('pub dim_date'[Date]))*100, 0)& \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Δ pp PY",
                                    "expression": "ROUND(('msr v_employee_utilization'[Utilization %_2] - 'msr v_employee_utilization'[Utilization % PY]) *100, 0) & \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_vacation_leave_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_vacation_leave_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_training_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_training_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur_utilization",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days_utilization]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_illness_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_illness_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_internal_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_internal_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_acq_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_acq_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_missing_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_missing_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_on_client_project",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_on_client_project]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing",
                                    "expression": "([Utilization_target_hours_utilization] - [Utilization_hours_illness] - [Utilization_hours_internal] - [Utilization_hours_acq] - [Utilization_hours_on_client_project])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing %",
                                    "expression": "\n    VAR missing = DIVIDE(\n\t                        [Utilization_hours_missing],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(missing <= 0, 0, missing)",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness]",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness %",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [utilization_hours_acq_internal_illness],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_utilization_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix",
                            "columns": [
                                {
                                    "name": "key_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "std_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "rep v_hr_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "per_org",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_emp_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_full_name",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone_mobile",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "name_prefix",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_display",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nickname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_display_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_manager_level",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "gender",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "empl_class_descr",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "national_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "middle_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "maiden_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "modify_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id_ps",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "legal_entity",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Jobcodes.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[country_code_iso3] & \"-\" & 'rep v_hr_employee'[jobcode_id]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED(utilization_budgets[utilization_target])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fullname_joblevel4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_joblevel4_mentor",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4] & \" - \" & 'rep v_hr_employee'[mentor_full_name]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id.1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region.old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Partner_count",
                                    "expression": "COUNTROWS(FILTER('rep v_hr_employee', FIND(\"Partner\", 'rep v_hr_employee'[jobcode],,0)>0))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"rep v_hr_employee_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "pub dim_date",
                            "columns": [
                                {
                                    "name": "DateKey",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Day",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Weekday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekDayName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekOfYear",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "MonthName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthnumber",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ISOWeekOfYearNameInCal",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & 'pub dim_date'[WeekOfYear]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MonthNameShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "UpToCurrentMonth",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR current_month = MONTH(TODAY())\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year, \n                    IF('pub dim_date'[Date].[MonthNo] <= current_month,\n                        1,\n                        0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Last4Next4Weeks",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR firstWeek = WEEKNUM(TODAY())-4\n    VAR lastWeek = WEEKNUM(TODAY())+3\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year,\n                    IF('pub dim_date'[WeekOfYear] >= firstWeek, \n                        IF('pub dim_date'[WeekOfYear] <= lastWeek,\n                            1,\n                            0),0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_month",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH(TODAY()) = 'pub dim_date'[Date].[MonthNo], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_week",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(WEEKNUM(TODAY()+1) = 'pub dim_date'[WeekOfYear], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "temp_CurrentWeek",
                                    "expression": "WEEKNUM(TODAY())",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_FirstWeek",
                                    "expression": "WEEKNUM(TODAY())-3",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_Lastweek",
                                    "expression": "WEEKNUM(TODAY())+4",
                                    "isHidden": false
                                },
                                {
                                    "name": "Column_width",
                                    "expression": "REPT(\"0\", 7)",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveMonthList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[MonthNameShort] ),\n        'pub dim_date'[MonthNameShort],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDay",
                                    "expression": "TODAY()",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDayWeek",
                                    "expression": "[CurrentDay] & \" (\" & [CurrentWeek] & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentWeek",
                                    "expression": "CALCULATE(\n                FIRSTNONBLANK('pub dim_date'[Calendarweek], \"\"), \n                FILTER(ALL('pub dim_date'), 'pub dim_date'[Date] = TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveWeekList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[Calendarweek] ),\n        'pub dim_date'[Calendarweek],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentMonth",
                                    "expression": "FORMAT (TODAY(),\"MMMM\")",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_dim_date = datahub{[Schema=\"pub\",Item=\"dim_date\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_dim_date, each Date.IsInCurrentYear([Date]) or Date.IsInPreviousYear([Date])),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"Date\", \"Day\", \"Weekday\", \"WeekDayName\", \"WeekOfYear\", \"Month\", \"MonthName\", \"Year\", \"YearMonthnumber\", \"FirstDayOfMonth\", \"YearMonthShort\", \"ISOWeekOfYearNameInCal\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Removed Other Columns\", \"MonthNameShort\", each Text.AfterDelimiter(Text.Proper([YearMonthShort]), \"/\"), type text)\nin\n    #\"Inserted Text After Delimiter\""
                                }
                            ]
                        },
                        {
                            "name": "Refresh_Timestamp",
                            "columns": [
                                {
                                    "name": "UTC timestamp",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Local timestamp with offset",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Last_refresh_local",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & WEEKNUM(Refresh_Timestamp[Last_refresh_local])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    StandardOffset = #duration(0, 1, 0, 0),\n    DaylightSavingTimeOffset = #duration(0, 2, 0, 0),\n\n    // get start and end of daylight saving time\n    // this code implements the rules of EU counties\n    // if it doesn't fill your expectations, visit https://en.wikipedia.org/wiki/Daylight_saving_time_by_country and implement your own function\n    fnDaylightSavingTimePeriod = (\n        now as datetime\n    ) as record => \n        let\n            // the daylight saving time starts on the last Sunday of March at 1am UTC\n            LastDayOfMarch = #date(Date.Year(now), 3, 31),\n            StartOfDaylightSavingTime = Date.AddDays(LastDayOfMarch, -Date.DayOfWeek(LastDayOfMarch)) & #time(1, 0, 0),\n            // the daylight saving time ends on the last Sunday in October at 1am UTC\n            LastDayOfOctober = #date(Date.Year(now), 10, 31),\n            EndOfDaylightSavingTime = Date.AddDays(LastDayOfOctober, -Date.DayOfWeek(LastDayOfOctober)) & #time(1, 0, 0)\n        in\n            [From = StartOfDaylightSavingTime, To = EndOfDaylightSavingTime],\n\n    // get a timestamp in UTC (with offset 00:00 all year long)\n    UtcNow = DateTimeZone.UtcNow(),\n    // convert UTC datetime with offset to datetime\n    UtcNowWithoutZone = DateTimeZone.RemoveZone(UtcNow),\n\n    // get daylight saving time period\n    DaylightSavingTimePeriod = fnDaylightSavingTimePeriod(UtcNowWithoutZone),\n\n    // convert UTC time to the local time with respect to current offset\n    LocalTimeWithOffset = \n        if UtcNowWithoutZone >= DaylightSavingTimePeriod[From] and UtcNowWithoutZone <= DaylightSavingTimePeriod[To] then\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(DaylightSavingTimeOffset), \n                Duration.Minutes(DaylightSavingTimeOffset)\n            )\n        else\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(StandardOffset), \n                Duration.Minutes(StandardOffset)\n            ),\n    \n    // current date time without offset\n    LocalTime = DateTimeZone.RemoveZone(LocalTimeWithOffset),\n\n    // result table\n    Result = #table(\n        type table\n        [\n            #\"UTC timestamp\" = datetime, \n            #\"UTC date\" = date,\n            #\"Local timestamp with offset\" = datetimezone,\n            #\"Local timestamp without offset\" = datetime\n        ], \n        {\n            {\n            UtcNowWithoutZone,\n            DateTime.Date(UtcNowWithoutZone),\n            LocalTimeWithOffset,\n            LocalTime\n            }\n        }\n    ),\n    #\"Inserted Date\" = Table.AddColumn(Result, \"Last_refresh_local\", each DateTime.Date([Local timestamp without offset]), type date),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Date\",{\"UTC date\", \"Local timestamp without offset\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "utilization_budgets",
                            "columns": [
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "utilization_budgets[country_code_iso3] & \"-\" & utilization_budgets[jobcode_id]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/utilization_budgets.xlsx\"), null, true),\n    utilization_budgets_Table = Source{[Item=\"utilization_budgets\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(utilization_budgets_Table,{{\"country_code_iso3\", type text}, {\"jobcode_id\", type text}, {\"jobcode\", type text}, {\"job_short\", type text}, {\"utilization_target\", type number}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_subject",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "value",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_total",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "share",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_month_previous_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_previous",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_current",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "order_income_GROSS",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "OI_Monthly",
                                    "expression": "SUM('msr v_fc_order_income_accumulated'[order_income_current])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD",
                                    "expression": "CALCULATE([OI_Monthly], ALL('pub dim_date'[Date]), 'pub dim_date'[Year] = YEAR(TODAY())-1, 'pub dim_date'[Month] <= MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_2",
                                    "expression": "CALCULATE(SUM(OI_Budget_Countries[OI_Budget]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P",
                                    "expression": "DIVIDE([OI_Monthly], [Partner_count])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_YTD",
                                    "expression": "DIVIDE([OI_YTD_BUD_2], CALCULATE(DISTINCTCOUNT('msr v_fc_order_income_accumulated'[project_number]), ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_per_P_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_PY_YTD_formatted",
                                    "expression": "DIVIDE([OI_PY_YTD], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_formatted",
                                    "expression": "DIVIDE([OI_Monthly], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C",
                                    "expression": "\n    var check_industry = calculate(isfiltered(Dim_Industries[industry]) , allselected())\n    var check_function = calculate(isfiltered(Dim_Functions[function]) , allselected())\nreturn\n    if(check_industry || check_function, BLANK(), SUM(OI_Budget_Countries[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_C_formatted",
                                    "expression": "DIVIDE([OI_Monthly_BUD_C], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_FP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_industry = calculate(isfiltered(Dim_Industries[industry]) , allselected())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_industry, BLANK(), SUM(OI_Budget_Platforms_Function[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_Monthly_BUD_IP",
                                    "expression": "\n    var check_region1 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) , allselected())\n    var check_region2 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) , allselected())\n    var check_region3 = calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected())\n    var check_function = calculate(isfiltered(Dim_Functions[function]) , allselected())\nreturn\n    if(check_region1 || check_region2 || check_region3 || check_function, BLANK(), SUM(OI_Budget_Platforms_Industry[OI_Budget]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_C], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_C], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_C_no_future_formatted",
                                    "expression": "DIVIDE([OI_YTD_BUD_C_no_future], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_IP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_IP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_IP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP",
                                    "expression": "TOTALYTD([OI_Monthly_BUD_FP], 'pub dim_date'[Date])",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_FP_no_future",
                                    "expression": "CALCULATE([OI_YTD_BUD_FP], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] < MONTH(TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_YTD_BUD_combined_no_future",
                                    "expression": "\n    var check_region = IF(calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level1]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level2]) || calculate(isfiltered('pub v_ll_company_to_region'[region_reporting_level3]) , allselected()), allselected()) , allselected()), \"R\", \"\")\n    var check_industry = IF(calculate(isfiltered(Dim_Industries[industry]) , allselected()), \"I\", \"\")\n    var check_function = IF(calculate(isfiltered(Dim_Functions[function]) , allselected()), \"F\", \"\")\n    var check_combination = check_region & check_industry & check_function\nreturn\n    IF(check_combination = \"\" || check_combination = \"R\", [OI_YTD_BUD_C_no_future_formatted], \n        IF(check_combination = \"I\", [OI_YTD_BUD_IP_no_future],\n            IF(check_combination = \"F\", [OI_YTD_BUD_FP_no_future], \"\")))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_formatted",
                                    "expression": "DIVIDE([OI_per_P], 1000)",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_PY_YTD",
                                    "expression": "DIVIDE([OI_PY_YTD], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "OI_per_P_BUD_combined_YTD",
                                    "expression": "IF([OI_YTD_BUD_combined_no_future] = \"\", BLANK(), DIVIDE([OI_YTD_BUD_combined_no_future], CALCULATE([Partner_count], ALL('pub dim_date'[Date]), 'pub dim_date'[Month] <= MONTH(TODAY()), 'pub dim_date'[Year] = YEAR(TODAY())-1)))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_T\"\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Countries",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Countries_T\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Function",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] <> \"Health & Consumer\" and [Platform] <> \"Industrials\" and [Platform] <> \"Regulated & Infrastructure\" and [Platform] <> \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "pub v_ll_company_to_region",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    pub_v_ll_company_to_region = Source{[Schema=\"pub\",Item=\"v_ll_company_to_region\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_v_ll_company_to_region, each ([company_id] <> \"77\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Industries",
                            "columns": [
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"industry\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Duplicates\", each ([industry] <> \"Not assigned\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "Dim_Functions",
                            "columns": [
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"function\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Duplicates\", each ([function] <> \"Not assigned\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "OI_Budget_Platforms_Industry",
                            "columns": [
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "OI_Budget",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = OI_Budget_Platforms_T,\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Platform] = \"Health & Consumer\" or [Platform] = \"Industrials\" or [Platform] = \"Regulated & Infrastructure\" or [Platform] = \"Services\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "Jobcodes",
                            "expression": "let\n    Source = Jobcodes_T,\n    Publish = Source\nin\n    Publish"
                        },
                        {
                            "name": "Jobcodes_Excel",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"Vc45DoAwDETRu1BTOJi1xCZFIkVYcYkQ978FdEzKp5niX1eXT3mIgu3c3T1waBl+BrKagIsVOIfZyq+BXHHcxGEcJVYgN2SSDOOG4kkxkGfdse9IFfvUC/ZpI4+Y55jHbqA1f9v9Ag==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Jobcode_Excel = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Jobcode_Excel\", type text}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Jobcode_Excel\", Splitter.SplitTextByDelimiter(\"_\", QuoteStyle.Csv), {\"Jobcode_Excel.1\", \"Jobcode_Excel.2\"}),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Jobcode_Excel.1\", type text}, {\"Jobcode_Excel.2\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type1\",{\"Jobcode_Excel.1\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Jobcode_Excel.2\", \"Jobcode_Excel\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_utilization_target",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"key_date\", \"emp_id\", \"job_code\", \"country_code_iso3\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"job.Kurz-Bezeichnung\", \"job_short\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"key_date\", \"emp_id\", \"country_code_iso3\", \"job_code\", \"job_short\", \"job.Bezeichnung\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "sec ll_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_ll_job = Source{[Schema=\"sec\",Item=\"ll_job\"]}[Data],\n    #\"Merged Queries\" = Table.NestedJoin(sec_ll_job, {\"job_reporting_level4\"}, job_sort, {\"job_reporting_level4\"}, \"job_sort\", JoinKind.LeftOuter),\n    #\"Expanded job_sort\" = Table.ExpandTableColumn(#\"Merged Queries\", \"job_sort\", {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"})\nin\n    #\"Expanded job_sort\""
                        },
                        {
                            "name": "platform_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "job_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/job_sort.xlsx\"), null, true),\n    job_sort_Table = Source{[Item=\"job_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(job_sort_Table,{{\"job_reporting_level1\", type text}, {\"job_reporting_level2\", type text}, {\"job_reporting_level3\", type text}, {\"job_reporting_level4\", type text}, {\"job_reporting_level4_sort\", Int64.Type}, {\"job_reporting_level1_sort\", Int64.Type}, {\"job_reporting_level2_sort\", Int64.Type}, {\"job_reporting_level3_sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "msr v_byd_daily_rates",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_byd_daily_rates = datahub{[Schema=\"msr\",Item=\"v_byd_daily_rates\"]}[Data]\nin\n    msr_v_byd_daily_rates"
                        },
                        {
                            "name": "msr v_employee_utilization_T",
                            "expression": "let\n    Source = #\"msr v_employee_utilization_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_hr_employee_job_matrix\", {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}, {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each ([job.Im Scope] = \"x\"))\nin\n    #\"Filtered Rows1\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_T",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([key_date]) or Date.IsInPreviousYear([key_date])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"job_code\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"JobGroup\", \"Jobcode_Excel\"}, {\"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"job.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([job.Im Scope] = \"x\")),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows1\", {\"job_code\", \"company_id_byd\"}, #\"msr v_byd_daily_rates\", {\"jobcode_id\", \"company_id\"}, \"msr v_byd_daily_rates\", JoinKind.LeftOuter),\n    #\"Expanded msr v_byd_daily_rates\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_byd_daily_rates\", {\"amount_eur\"}, {\"daily_rate_eur\"})\nin\n    #\"Expanded msr v_byd_daily_rates\""
                        },
                        {
                            "name": "rep v_hr_employee_T",
                            "expression": "let\n    Source = #\"rep v_hr_employee_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each [ter_max_date] > #date(2022, 12, 31)),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"jobcode_id\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Jobcode_Excel\"}, {\"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([Jobcodes.Im Scope] = \"x\")),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows1\",\"Junior Consultant 1##\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Junior Consultant 1#\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Group Function RB N3XT\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"jobcode_id\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"company_id\"}, #\"pub v_ll_company_to_region\", {\"company_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"pub v_ll_company_to_region\", {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}, {\"region_reporting_level3\", \"region_reporting_level1\", \"region_reporting_level2\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Expanded pub v_ll_company_to_region\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Reordered Columns\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_id\", \"platform_1_sort\"}, {\"platform_1_id.1\", \"platform_1_sort\"}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Expanded platform_sort\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_1_sort\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"Jobcodes.Im Scope\", \"Jobcodes.Jobcode_Excel\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns1\",{{\"region\", \"region.old\"}}),\n    #\"Cleaned Text\" = Table.TransformColumns(#\"Renamed Columns\",{{\"job_reporting_level2\", Text.Clean, type text}}),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"job_reporting_level2\", Text.Trim, type text}}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Trimmed Text\",null,9,Replacer.ReplaceValue,{\"platform_1_sort\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value5\",\"9720\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Group Function F&C\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"})\nin\n    #\"Replaced Value4\""
                        },
                        {
                            "name": "Jobcodes_T",
                            "expression": "let\n    Source = Jobcodes_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type1\", {\"Jobcode\"}, Jobcodes_Excel, {\"Jobcode_Excel\"}, \"Jobcodes_Excel\", JoinKind.FullOuter),\n    #\"Expanded Jobcodes_Excel\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes_Excel\", {\"Jobcode_Excel\"}, {\"Jobcode_Excel\"})\nin\n    #\"Expanded Jobcodes_Excel\""
                        },
                        {
                            "name": "msr v_employee_utilization_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_utilization = datahub{[Schema=\"msr\",Item=\"v_employee_utilization\"]}[Data]\nin\n    msr_v_employee_utilization"
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_hr_employee_job_matrix = datahub{[Schema=\"msr\",Item=\"v_hr_employee_job_matrix\"]}[Data]\nin\n    msr_v_hr_employee_job_matrix"
                        },
                        {
                            "name": "rep v_hr_employee_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_hr_employee = datahub{[Schema=\"rep\",Item=\"v_hr_employee\"]}[Data]\nin\n    rep_v_hr_employee"
                        },
                        {
                            "name": "Jobcodes_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data]\nin\n    Jobcodes_Table"
                        },
                        {
                            "name": "xlsx utilization_targets_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/2023_Budget_Utilization_Capture%20rate.xlsx\"), null, true),\n    #\"Utilization & Cap. Rate Bdg23_Sheet\" = Source{[Item=\"Utilization & Cap. Rate Bdg23\",Kind=\"Sheet\"]}[Data]\nin\n    #\"Utilization & Cap. Rate Bdg23_Sheet\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_T",
                            "expression": "let\n    Source = #\"msr v_fc_order_income_accumulated_E\",\n    #\"Inserted Month\" = Table.AddColumn(Source, \"Month\", each Date.Month([report_month]), Int64.Type),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Month\",{\"Month\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"report_month_previous\", each Date.AddMonths([report_month], -1), type date),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Added Custom\", \"report_month_previous_id\", each Text.AfterDelimiter(Text.From([report_month_previous], \"de-DE\"), \".\"), type text),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Inserted Text After Delimiter\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_previous_id\"}, #\"msr v_fc_order_income_accumulated_E\", {\"project_number\", \"industry\", \"function\", \"company_name\", \"report_month_id\"}, \"msr v_fc_order_income_accumulated_source\", JoinKind.LeftOuter),\n    #\"Expanded msr v_fc_order_income_accumulated_source\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_fc_order_income_accumulated_source\", {\"order_income\"}, {\"order_income_previous\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded msr v_fc_order_income_accumulated_source\",null,0,Replacer.ReplaceValue,{\"order_income_previous\"}),\n    #\"Added Custom1\" = Table.AddColumn(#\"Replaced Value\", \"order_income_current\", each [order_income] - [order_income_previous], type number),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Custom1\",{{\"order_income\", \"order_income_total\"}}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Renamed Columns\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"industry\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Not assigned\",\"Not Assigned\",Replacer.ReplaceText,{\"function\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"industry\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort2\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded platform_sort2\",{{\"platform_1_sort\", \"industry_sort\"}, {\"platform_1_name_short\", \"industry_name_short\"}}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Renamed Columns2\", {\"function\"}, platform_sort, {\"platform_1_name\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"platform_sort\", {\"platform_1_sort\", \"platform_1_name_short\"}, {\"platform_1_sort\", \"platform_1_name_short\"}),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Expanded platform_sort\",{{\"platform_1_sort\", \"function_sort\"}, {\"platform_1_name_short\", \"function_name_short\"}}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Renamed Columns3\", {\"project_number\", \"report_month_id\"}, #\"sec acp_orderIncome_byMonth_E\", {\"project_number\", \"report_month_id\"}, \"sec acp_orderIncome_byMonth_E\", JoinKind.LeftOuter),\n    #\"Expanded sec acp_orderIncome_byMonth\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"sec acp_orderIncome_byMonth_E\", {\"orderIncome\"}, {\"orderIncome\"}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Expanded sec acp_orderIncome_byMonth\",{{\"orderIncome\", \"order_income_GROSS\"}}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Renamed Columns1\",\"Hongkong\",\"Hong Kong\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Middle East Bahr.\",\"Middle East\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"PX America\",\"PXNorth America\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value6\" = Table.ReplaceValue(#\"Replaced Value5\",\"PX Engineers\",\"PXEngineering\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value7\" = Table.ReplaceValue(#\"Replaced Value6\",\"PX Partner\",\"PXBeteiligungs\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value8\" = Table.ReplaceValue(#\"Replaced Value7\",\"Rep. of Korea\",\"South Korea\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value9\" = Table.ReplaceValue(#\"Replaced Value8\",\"Singapur\",\"Singapore\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value10\" = Table.ReplaceValue(#\"Replaced Value9\",\"TMG\",\"Turnaround Management GmbH\",Replacer.ReplaceText,{\"company_name\"}),\n    #\"Replaced Value11\" = Table.ReplaceValue(#\"Replaced Value10\",\"UK\",\"United Kingdom\",Replacer.ReplaceText,{\"company_name\"})\nin\n    #\"Replaced Value11\""
                        },
                        {
                            "name": "sec acp_orderIncome_byMonth_E",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_acp_orderIncome_byMonth = Source{[Schema=\"sec\",Item=\"acp_orderIncome_byMonth\"]}[Data],\n    #\"Added Custom Column\" = Table.AddColumn(sec_acp_orderIncome_byMonth, \"report_month_id\", each Text.Combine({Text.PadStart(Text.From([month], \"de-DE\"), 2, \"0\"), \".\", Text.From([year], \"de-DE\")}), type text)\nin\n    #\"Added Custom Column\""
                        },
                        {
                            "name": "msr v_fc_order_income_accumulated_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_fc_order_income_accumulated = datahub{[Schema=\"msr\",Item=\"v_fc_order_income_accumulated\"]}[Data],\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(msr_v_fc_order_income_accumulated, \"report_month_id\", each Text.AfterDelimiter(Text.From([report_month], \"de-DE\"), \".\"), type text),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Inserted Text After Delimiter\",null,0,Replacer.ReplaceValue,{\"order_income\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "OI_Budget_Countries_T",
                            "expression": "let\n    Source = OI_Budget_Countries_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", type number}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type number}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", type number}, {\"SEA\", type number}, {\"IDN\", type number}, {\"MMR\", type number}, {\"MYS\", type number}, {\"SGP\", type number}, {\"THA\", type number}, {\"VNM\", type number}, {\"Asia\", type number}, {\"Polarix\", type number}, {\"PX Partner\", type number}, {\"PX Engineers\", type number}, {\"PX America\", type number}, {\"TMG\", type number}, {\"Other RB companies\", type number}, {\"Subtotal\", type number}, {\"HOL\", type number}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"Country\", \"Period\"}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"BHR/KSA/UAE\", \"OLD CHE\", \"EMEA\", \"Americas\", \"CHN_1\", \"HKG\", \"Asia\", \"Other RB companies\", \"Subtotal\", \"HOL\", \"Subtotal_2\", \"Column60\", \"Total\", \"ME\", \"SEA\", \"DACH\"}),\n    #\"Removed Bottom Rows1\" = Table.RemoveLastN(#\"Removed Columns\",1),\n    #\"Added Year\" = Table.AddColumn(#\"Removed Bottom Rows1\", \"Year\", each Text.BeforeDelimiter([Period], \"_\"), type text),\n    #\"Added MonthName\" = Table.AddColumn(#\"Added Year\", \"MonthName\", each Text.BetweenDelimiters([Period], \"_\", \"_\", 1, 0), type text),\n    #\"Added Month\" = Table.AddColumn(#\"Added MonthName\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Added Month\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type1\",{\"Period\", \"Year\", \"MonthName\", \"Month\"}),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Removed Columns1\", {\"FirstDayOfMonth\"}, \"Attribute\", \"Value\"),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Unpivoted Other Columns\",{{\"Attribute\", \"Country\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",\"GER\",\"DEU\",Replacer.ReplaceText,{\"Country\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "OI_Budget_Platforms_T",
                            "expression": "let\n    Source = OI_Budget_Platforms_E,\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(Source, {\"[EUR m]\"}, \"Attribute\", \"Value\"),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Unpivoted Other Columns\",{{\"Value\", type number}}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"[EUR m]\", \"Platform\"}, {\"Attribute\", \"MonthName\"}, {\"Value\", \"OI_Budget\"}}),\n    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Year\", each 2023, Int64.Type),\n    #\"Added Month\" = Table.AddColumn(#\"Added Custom\", \"Month\", each if [MonthName] = \"Jan\" then 1 else if [MonthName] = \"Feb\" then 2 else if [MonthName] = \"Mar\" then 3 else if [MonthName] = \"Apr\" then 4 else if [MonthName] = \"May\" then 5 else if [MonthName] = \"Jun\" then 6 else if [MonthName] = \"Jul\" then 7 else if [MonthName] = \"Aug\" then 8 else if [MonthName] = \"Sep\" then 9 else if [MonthName] = \"Oct\" then 10 else if [MonthName] = \"Nov\" then 11 else if [MonthName] = \"Dec\" then 12 else null, type number),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Added Month\",{{\"Year\", type text}, {\"Month\", type text}}),\n    #\"Inserted Merged Column\" = Table.AddColumn(#\"Changed Type1\", \"FirstDayOfMonth\", each Text.Combine({\"1/\", Text.From([Month], \"en-CH\"), \"/\", [Year]}), type text),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Inserted Merged Column\",{{\"FirstDayOfMonth\", type date}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Changed Type2\",{\"FirstDayOfMonth\", \"Platform\", \"MonthName\", \"OI_Budget\", \"Year\", \"Month\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Reordered Columns\",{\"MonthName\", \"Year\", \"Month\"})\nin\n    #\"Removed Columns\""
                        },
                        {
                            "name": "OI_Budget_Countries_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Countries\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\", 6),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 29),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Removed Bottom Rows\", {\"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\", \"Column17\", \"Column18\", \"Column19\", \"Column20\", \"Column21\", \"Column22\", \"Column23\", \"Column24\", \"Column25\", \"Column26\", \"Column27\", \"Column28\", \"Column29\", \"Column30\", \"Column31\", \"Column32\", \"Column33\", \"Column34\", \"Column35\", \"Column36\", \"Column37\", \"Column38\", \"Column39\", \"Column40\", \"Column41\", \"Column42\", \"Column43\", \"Column44\", \"Column45\", \"Column46\", \"Column47\", \"Column48\", \"Column49\", \"Column50\", \"Column51\", \"Column52\", \"Column53\", \"Column54\", \"Column55\", \"Column56\", \"Column57\", \"Column58\", \"Column59\", \"Column60\", \"Column61\", \"Column62\"}),\n    FilterNullAndWhitespace = each List.Select(_, each _ <> null and (not (_ is text) or Text.Trim(_) <> \"\")),\n    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Other Columns\", each not List.IsEmpty(FilterNullAndWhitespace(Record.FieldValues(_)))),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Blank Rows\", [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Country\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", Int64.Type}, {\"KSA\", type number}, {\"UAE\", Int64.Type}, {\"CIS\", Int64.Type}, {\"RUS\", Int64.Type}, {\"UKR\", Int64.Type}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", Int64.Type}, {\"CHE\", Int64.Type}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", Int64.Type}, {\"HUN\", Int64.Type}, {\"ITA\", Int64.Type}, {\"MOR\", Int64.Type}, {\"PRT\", type number}, {\"NLD\", type number}, {\"NOR\", Int64.Type}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", Int64.Type}, {\"CZE\", Int64.Type}, {\"CRO\", Int64.Type}, {\"POL\", Int64.Type}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type any}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", Int64.Type}, {\"SEA\", Int64.Type}, {\"IDN\", Int64.Type}, {\"MMR\", Int64.Type}, {\"MYS\", Int64.Type}, {\"SGP\", Int64.Type}, {\"THA\", Int64.Type}, {\"VNM\", Int64.Type}, {\"Asia\", type number}, {\"Polarix\", type any}, {\"PX Partner\", type any}, {\"PX Engineers\", type any}, {\"PX America\", type any}, {\"TMG\", type any}, {\"Other RB companies\", type any}, {\"Subtotal\", type number}, {\"HOL\", type any}, {\"Subtotal_2\", type number}, {\"Column60\", type number}, {\"Total\", type number}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "OI_Budget_Platforms_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx\")),\n    #\"OI Budget Countries_sheet\" = Source{[Item=\"OI Budget Platforms\",Kind=\"Sheet\"]}[Data],\n    #\"Removed Top Rows\" = Table.Skip(#\"OI Budget Countries_sheet\",3),\n    #\"Removed Bottom Rows\" = Table.RemoveLastN(#\"Removed Top Rows\", 17),\n    #\"Removed Alternate Rows\" = Table.AlternateRows(#\"Removed Bottom Rows\",2,1,1),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Alternate Rows\", each ([Column2] <> \"Total\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Column2\", \"Column5\", \"Column6\", \"Column7\", \"Column8\", \"Column9\", \"Column10\", \"Column11\", \"Column12\", \"Column13\", \"Column14\", \"Column15\", \"Column16\"}),\n    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Other Columns\", [PromoteAllScalars=true])\nin\n    #\"Promoted Headers\""
                        }
                    ],
                    "configuredBy": "matthias.gessenay@org.rolandberger.com",
                    "configuredById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "isEffectiveIdentityRequired": false,
                    "isEffectiveIdentityRolesRequired": false,
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-08-28T18:33:44",
                    "contentProviderType": "PbixInImportMode",
                    "misconfiguredDatasourceUsages": [
                        {
                            "datasourceInstanceId": "ff1b8dd4-104b-42c8-82f7-6f9e3ac19c95"
                        },
                        {
                            "datasourceInstanceId": "918fd35f-ba7f-42d9-af7a-e372ca4eeab9"
                        },
                        {
                            "datasourceInstanceId": "ad83fa59-55a1-4038-b8d2-5b11b07a4fad"
                        },
                        {
                            "datasourceInstanceId": "2509d929-2298-4623-8a0e-dc5e3181de05"
                        },
                        {
                            "datasourceInstanceId": "3e436f3a-a73f-410d-87f2-027dda870b3c"
                        },
                        {
                            "datasourceInstanceId": "3336848e-4278-4d97-8038-83d48054a6c5"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lars.krueger@rolandberger.com",
                            "displayName": "Lars Krueger",
                            "identifier": "lars.krueger@rolandberger.com",
                            "graphId": "17fdf4c2-f091-42f2-8248-91c39700619f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "florian.welte@rolandberger.com",
                            "displayName": "Florian Welte",
                            "identifier": "florian.welte@rolandberger.com",
                            "graphId": "5284d013-644a-48d2-b93b-0d37177c5993",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Fang.Qian@rolandberger.com",
                            "displayName": "Fang Qian",
                            "identifier": "Fang.Qian@rolandberger.com",
                            "graphId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "chris.breitenfeld@rolandberger.com",
                            "displayName": "Chris Breitenfeld",
                            "identifier": "chris.breitenfeld@rolandberger.com",
                            "graphId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Matthias.Rueckriegel@rolandberger.com",
                            "displayName": "Matthias Rueckriegel",
                            "identifier": "Matthias.Rueckriegel@rolandberger.com",
                            "graphId": "68201354-f954-42e0-8518-86f1323829b0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "brandon.smith@rolandberger.com",
                            "displayName": "Brandon Smith",
                            "identifier": "brandon.smith@rolandberger.com",
                            "graphId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sascha.schuster@rolandberger.com",
                            "displayName": "Sascha Schuster",
                            "identifier": "sascha.schuster@rolandberger.com",
                            "graphId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "peiling.ng@rolandberger.com",
                            "displayName": "Peiling Ng",
                            "identifier": "peiling.ng@rolandberger.com",
                            "graphId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juergen.stubert@rolandberger.com",
                            "displayName": "Juergen Stubert",
                            "identifier": "juergen.stubert@rolandberger.com",
                            "graphId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "willi.viefers@org.rolandberger.com",
                            "displayName": "Willi Viefers",
                            "identifier": "willi.viefers@org.rolandberger.com",
                            "graphId": "e78a169c-eb97-4b5d-b518-b4de42661ec0",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "juliane.schuetze@rolandberger.com",
                            "displayName": "Juliane Schuetze",
                            "identifier": "juliane.schuetze@rolandberger.com",
                            "graphId": "79279619-938b-4ece-8526-e640e3d90c5c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "till.friedel@rolandberger.com",
                            "displayName": "Till Friedel",
                            "identifier": "till.friedel@rolandberger.com",
                            "graphId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "adalberto.brinez@rolandberger.com",
                            "displayName": "Adalberto Brinez",
                            "identifier": "adalberto.brinez@rolandberger.com",
                            "graphId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "2b06ef8b-2943-4a9a-9e7d-0d7ae3c7568c",
                    "name": "Project Status Report",
                    "tables": [
                        {
                            "name": "dim_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Employee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "dim_employee[last_name] & \", \" & dim_employee[first_name] ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "All Employees",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"All\"",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Employee Id and Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CONCATENATE(CONCATENATE(dim_employee[emp_id],\" - \"), dim_employee[Employee])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "SortByNameIndex",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "debug userprincipalname",
                                    "expression": "userprincipalname()",
                                    "isHidden": false
                                },
                                {
                                    "name": "debug is admin user",
                                    "expression": "CONTAINS('rep v_fc_psr_permisson_admin','rep v_fc_psr_permisson_admin'[email], USERPRINCIPALNAME(), 'rep v_fc_psr_permisson_admin'[report_id],100)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_employee = Source{[Schema=\"rep\",Item=\"v_fc_psr_employee\"]}[Data],\n    #\"Appended Query\" = Table.Combine({rep_v_fc_psr_employee, PlannedForUnknownEmployee}),\n    #\"Sorted Rows\" = Table.Sort(#\"Appended Query\",{{\"last_name\", Order.Ascending}, {\"first_name\", Order.Ascending}}),\n    #\"Added Index\" = Table.AddIndexColumn(#\"Sorted Rows\", \"SortByNameIndex\", 0, 1)\nin\n    #\"Added Index\""
                                }
                            ]
                        },
                        {
                            "name": "dim_project",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_client",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_planned_start",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_planned_end",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_closedate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dm_cc_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dm_cc",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dm_emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "delivery_manager",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pm_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_manager",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_master (wrong)",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_unit_cou_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "source",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Main Project Number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CALCULATE(min(dim_project_hierarchy[master_project_number]),dim_project_hierarchy[project_number] = earlier(dim_project[project_number]))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "IsMaster",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CONTAINS(dim_project_hierarchy, dim_project_hierarchy[project_number], dim_project[project_number], dim_project_hierarchy[is_master], TRUE())",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MP Project Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster],dim_project[project_name],Blank())",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "PM Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_employee[last_name], dim_employee[emp_id], dim_project[pm_emp_id]) & \", \"  & LOOKUPVALUE(dim_employee[first_name], dim_employee[emp_id], dim_project[pm_emp_id])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Accounting Responsible",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "dim_project[responsible_accounting]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "IsMasterFormat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster],1,Blank())",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "responsible_accounting_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_accounting",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Project Time Completion Col",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "//percent completed, 1 if closed, otherwise calculated by dates\nvar res = IF(dim_project[project_status]=\"Closed\",1,IF(DIVIDE(DATEDIFF(NOW(),dim_project[project_startdate],DAY),DATEDIFF(dim_project[project_startdate],dim_project[project_planned_end],DAY))>0,1,DIVIDE(DATEDIFF(dim_project[project_startdate],NOW(),DAY),DATEDIFF(dim_project[project_startdate],dim_project[project_planned_end],DAY))))\n\nvar res2  = if(res > 1, 1, res) \nreturn res2",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "sales_unit_cou_country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Fee Budget (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=TRUE()\n    , CALCULATE([Fee Budget],ALLEXCEPT(dim_project, dim_project[Main Project Number]), dim_project[IsMaster]) - CALCULATE([Fee Budget],ALLEXCEPT(dim_project, dim_project[Main Project Number]), dim_project[IsMaster]=false)\n    ,[Fee Budget]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "IE Budget (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=TRUE()\n    , CALCULATE([IE Budget],ALLEXCEPT(dim_project, dim_project[Main Project Number]), dim_project[IsMaster]) - CALCULATE([IE Budget],ALLEXCEPT(dim_project, dim_project[Main Project Number]), dim_project[IsMaster]=false)\n    ,[IE Budget]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Total Budget (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "dim_project[Fee Budget (part)] + dim_project[IE Budget (part)]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Invoiced Fee (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=TRUE()\n    ,Blank()\n    ,[Invoiced Fee]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Invoiced IE (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=TRUE()\n    ,Blank()\n    ,[Invoiced IE]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Total Invoiced Revenue (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "dim_project[Invoiced Fee (part)] + dim_project[Invoiced IE (part)]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "sales_order_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Main Project Filter",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=FALSE(),Blank(), dim_project[Main Project Number] & \" -- \" & dim_project[project_client] & \" -- \" & dim_project[MP Project Name] & \" -- \" & dim_project[project_status])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "sales_order_currency",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_unit_cou_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_unit_cou",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "has_success_fee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sector",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "theme",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Project Name (short)",
                                    "expression": "\nvar title =  min(dim_project[project_name]) \nreturn if(\n    HASONEVALUE(dim_project[project_name])\n    , if(LEN(title) <=20, title, CONCATENATE( LEFT(title,17), \"...\"))\n    , \"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Client (short)",
                                    "expression": "\nvar title =  min(dim_project[project_client]) \nreturn if(\n    HASONEVALUE(dim_project[project_client])\n    , if(LEN(title) <=20, title, CONCATENATE( LEFT(title,17), \"...\"))\n    , \"\")",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_data = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_data\"]}[Data],\n    #\"Renamed Columns\" = Table.RenameColumns(rep_v_fc_psr_project_data,{{\"is_master\", \"is_master (wrong)\"}}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",\"Released MIS\",\"Released\",Replacer.ReplaceText,{\"project_status\"})\nin\n    #\"Replaced Value\""
                                }
                            ]
                        },
                        {
                            "name": "dim_project_hierarchy",
                            "columns": [
                                {
                                    "name": "master_project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_master",
                                    "dataType": "Boolean",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_hierarchy = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_hierarchy_test\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(rep_v_fc_psr_project_hierarchy,{{\"is_master\", type logical}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "fact_project_invoices_ppo",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cleared_amount",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "net_value",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "exported_on",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Cleared Invoice Amount",
                                    "expression": "sum(fact_project_invoices_ppo[cleared_amount])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Net Value",
                                    "expression": "Sum(fact_project_invoices_ppo[net_value]) \n",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_invoices_ppo = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_invoices_ppo\"]}[Data]\nin\n    rep_v_fc_psr_project_invoices_ppo"
                                }
                            ]
                        },
                        {
                            "name": "fact_project_oview_budget_costs",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_status_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_client",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "budget_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "budget_ie_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoiced_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoiced_ie_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_estimate_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_estimate_ie_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "incurred_costs_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "incurred_costs_ie_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_completion",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoicing_delta_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "incurred_costs_fee_100pct_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "internal_costs_not_ic_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Indicative Rev. Col",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "expression": "\n    if(fact_project_oview_budget_costs[project_status]=\"Closed\", \n        fact_project_oview_budget_costs[budget_fee_eur],\n         fact_project_oview_budget_costs[budget_fee_eur] * DIVIDE(fact_project_oview_budget_costs[project_completion_fee]\n          , 100))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "exported_on",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_completion_fee",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_period_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "product_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "revenue_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Fee value depending on product",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(fact_project_oview_budget_costs[product_id] = 97, fact_project_oview_budget_costs[revenue_eur],  fact_project_oview_budget_costs[budget_fee_eur]* fact_project_oview_budget_costs[project_completion] /100 )",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Indicative IE Rev Incomplete",
                                    "expression": "CALCULATE(if([IE internal costs] > [IE Budget], [IE Budget], [IE internal costs]), dim_project[project_status] <>\"Closed\")",
                                    "isHidden": true
                                },
                                {
                                    "name": "Indicative IE Rev Completed",
                                    "expression": "CALCULATE([Invoiced IE], dim_project[project_status]=\"Closed\")",
                                    "isHidden": true
                                },
                                {
                                    "name": "Indicative Fee Completed",
                                    "expression": "CALCULATE([Invoiced Fee],dim_project[project_status] = \"Closed\")",
                                    "isHidden": true
                                },
                                {
                                    "name": "Indicative Fee Incomplete",
                                    "expression": "\nvar _states = ALLSELECTED(dim_project[project_status]) //could be filtered i.e. Closed\n    \nreturn Calculate(\n    sum(fact_project_oview_budget_costs[Indicative Rev. Col])\n    , _states\n    ,dim_project[project_status]<>\"Closed\"\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n)\n",
                                    "isHidden": true
                                },
                                {
                                    "name": "Internal (not I/C) costs",
                                    "expression": "sum(fact_project_oview_budget_costs[internal_costs_not_ic_eur])",
                                    "isHidden": true
                                },
                                {
                                    "name": "Indicative IE Rev Incomplete (main)",
                                    "expression": "CALCULATE(if([IE internal costs incl. Sub] > [IE Budget], [IE Budget], [IE internal costs incl. Sub]), dim_project[project_status] <>\"Closed\")",
                                    "isHidden": true
                                },
                                {
                                    "name": "Product97",
                                    "expression": "CALCULATE( sum(fact_project_oview_budget_costs[invoiced_fee_eur]), FILTER(fact_project_oview_budget_costs, fact_project_oview_budget_costs[product_id] = 97))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_oview_budget_costs = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_oview_budget_costs\"]}[Data]\nin\n    rep_v_fc_psr_project_oview_budget_costs"
                                }
                            ]
                        },
                        {
                            "name": "fact_project_time_recording",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "day_of_work",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "actual_work",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "actual_work_days",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Actual Days",
                                    "expression": "sum(fact_project_time_recording[actual_work_days])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual Days To Date",
                                    "expression": "CALCULATE([Actual Days], Filter(all(fact_project_time_recording[day_of_work]), fact_project_time_recording[day_of_work]<= max(fact_project_time_recording[day_of_work]))) ",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_recording = Source{[Schema=\"rep\",Item=\"v_fc_psr_time_recording\"]}[Data]\nin\n    rep_v_fc_psr_project_recording"
                                }
                            ]
                        },
                        {
                            "name": "fact_project_time_planned",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "estimated_work_days",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "exported_on",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Planned Days",
                                    "expression": "sum(fact_project_time_planned[estimated_work_days])",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "description": "without date",
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_time_planned = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_time_planned\"]}[Data],\n    #\"Replaced Value\" = Table.ReplaceValue(rep_v_fc_psr_project_time_planned,null,\"-999\",Replacer.ReplaceValue,{\"emp_id\"}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Replaced Value\", each [estimated_work_days] > 0)\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "fact_sales_order_items",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "planned_od_budget_sheet",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Planned OD Fee",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,MAX(fact_sales_order_items[planned_od_budget_sheet]) / 100\n    , Blank()\n)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_sales_order_items = Source{[Schema=\"rep\",Item=\"v_fc_psr_sales_order_items\"]}[Data]\nin\n    rep_v_fc_psr_sales_order_items"
                                }
                            ]
                        },
                        {
                            "name": "_Project Measures (budget/cost)",
                            "columns": [],
                            "measures": [
                                {
                                    "name": "Actual IE Ratio as of Fee",
                                    "expression": "DIVIDE([IE internal costs],[Fee Budget])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual OD Fee",
                                    "expression": "[Fee internal costs @100%] - [Indicative Fee Revenue]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual OD Fee %",
                                    "expression": "DIVIDE([Actual OD Fee], [Indicative Fee Revenue])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual Overdraft IE",
                                    "expression": "[IE internal costs] - [IE Budget]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee internal costs @100%",
                                    "expression": "\ncalculate(\n    Sum(fact_project_oview_budget_costs[fee_internal_costs_100pct_eur])\n    //[Σ Fee Used]\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee Budget",
                                    "expression": "\nvar calc=\ncalculate(\n    SUM(fact_project_oview_budget_costs[budget_fee_eur] )\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )\n\nreturn if(calc=blank(),0,calc)",
                                    "isHidden": false
                                },
                                {
                                    "name": "IE internal costs",
                                    "expression": "\n calculate(\n     //[Σ IE Used]\n    Sum(fact_project_oview_budget_costs[ie_internal_costs_eur])\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    ) ",
                                    "isHidden": false
                                },
                                {
                                    "name": "IE Budget",
                                    "expression": "\n calculate(\n    SUM(fact_project_oview_budget_costs[budget_ie_eur])\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Indicative Fee Revenue",
                                    "expression": "\n    if(\n        min(dim_project[project_status]) = \"Released\"\n            , sum(fact_project_oview_budget_costs[Fee value depending on product])\n            , [Indicative Fee Completed] + [Indicative Fee Incomplete] + if(min(dim_project[project_status]) = \"Released\", [Product97], 0)\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Indicative IE Revenue",
                                    "expression": "[Indicative IE Rev Completed] + [Indicative IE Rev Incomplete]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Internal (not I/C) costs @ 100%",
                                    "expression": "[Σ Fee Used] + [Σ IE Used]// [Fee internal costs @100%] + [IE internal costs]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Invoiced and Paid",
                                    "expression": "[Net Value]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Invoiced Fee",
                                    "expression": "\ncalculate(\n    SUM(fact_project_oview_budget_costs[invoiced_fee_eur])\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Invoiced IE",
                                    "expression": "\ncalculate(\n    SUM(fact_project_oview_budget_costs[invoiced_ie_eur])\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Invoiced Revenue",
                                    "expression": "[Invoiced Fee] + [Invoiced IE] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Open WIP Fee",
                                    "expression": "[Indicative Fee Revenue]-[Invoiced Fee]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Planned IE Ratio as of Fee",
                                    "expression": "DIVIDE([IE Budget],[Fee Budget])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Fee Completion",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,If(FIRSTNONBLANK(dim_project[project_status],1)=\"Closed\",1,Divide([Indicative Fee Incomplete],[Fee Budget])) \n    ,AVERAGEX(dim_project, If(FIRSTNONBLANK(dim_project[project_status],1)=\"Closed\",1,Divide([Indicative Fee Incomplete],[Fee Budget])) )\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project IE Completion",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,If(FIRSTNONBLANK(dim_project[project_status], 1)=\"Closed\",1,DIVIDE([IE internal costs],[IE Budget]))\n    ,AVERAGEX(dim_project, If(FIRSTNONBLANK(dim_project[project_status], 1)=\"Closed\",1,DIVIDE([IE internal costs],[IE Budget])) )\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin",
                                    "expression": "[Invoiced Revenue] - [Internal (not I/C) costs]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin %",
                                    "expression": "Divide ([Project Margin], [Invoiced Revenue])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Time Completion",
                                    "expression": "AVERAGE(dim_project[Project Time Completion Col])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Actual Overdraft",
                                    "expression": "[Actual OD Fee] + [Actual Overdraft IE] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Budget",
                                    "expression": "[Fee Budget] + [IE Budget]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Indicative Revenue",
                                    "expression": "[Indicative Fee Revenue] + [Indicative IE Revenue] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Unpaid Invoices",
                                    "expression": "[Invoiced Revenue] - [Invoiced and Paid]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee internal costs @100% incl. Sub",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,CALCULATE([Σ Fee Used], filter(All(dim_project), dim_project[Main Project Number] = max(dim_project[Main Project Number])))\n    ,CALCULATE([Σ Fee Used], filter(All(dim_project), dim_project[Main Project Number] in Values(dim_project[Main Project Number])))\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "IE internal costs incl. Sub",
                                    "expression": "\nCALCULATE([Σ IE Used], filter(All(dim_project), dim_project[Main Project Number] in Values(dim_project[Main Project Number]) ), All(dim_employee))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Internal (not I/C) costs @ 100% incl. Sub",
                                    "expression": "[Fee internal costs @100% incl. Sub] + [IE internal costs incl. Sub]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual OD Fee incl. Sub",
                                    "expression": "[Fee internal costs @100% incl. Sub] - [Indicative Fee Revenue]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual Overdraft IE incl. Sub",
                                    "expression": "[IE internal costs incl. Sub] - [IE Budget]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Actual Overdraft incl. Sub",
                                    "expression": "[Actual OD Fee incl. Sub] + [Actual Overdraft IE incl. Sub] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual IE Ratio as of Fee incl. Sub",
                                    "expression": "DIVIDE([IE internal costs incl. Sub],[Fee Budget])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin incl. Sub",
                                    "expression": "if(and(HASONEVALUE(dim_project[project_status]),min(dim_project[project_status])=\"Closed\"),[Invoiced Revenue] -([Fee internal costs @100% incl. Sub] + [IE internal costs incl. Sub]- [Fee internal costs @100% employee incl. Sub]*0.35), Blank())",
                                    "isHidden": false
                                },
                                {
                                    "name": "Internal (not I/C) costs incl. Sub",
                                    "expression": "\nCALCULATE([Internal (not I/C) costs], filter(All(dim_project), dim_project[Main Project Number] in Values(dim_project[Main Project Number])))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin % incl. Sub",
                                    "expression": "Divide ([Project Margin incl. Sub], [Invoiced Revenue])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual OD Fee % incl. Sub",
                                    "expression": "DIVIDE([Actual OD Fee incl. Sub], [Indicative Fee Revenue])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Indicative IE Revenue (main)",
                                    "expression": "[Indicative IE Rev Completed] + [Indicative IE Rev Incomplete (main)]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Indicative Revenue (main)",
                                    "expression": "[Indicative Fee Revenue] + [Indicative IE Revenue (main)] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project IE Completion (main)",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,If(FIRSTNONBLANK(dim_project[project_status], 1)=\"Closed\",1,DIVIDE([IE internal costs incl. Sub],[IE Budget]))\n    ,AVERAGEX(dim_project, If(FIRSTNONBLANK(dim_project[project_status], 1)=\"Closed\",1,DIVIDE([IE internal costs incl. Sub],[IE Budget])) )\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "TOOLTIP_PATTERN",
                                    "expression": "\n\"                                                           \"",
                                    "isHidden": false
                                },
                                {
                                    "name": "SEMI_TRANSPARENT",
                                    "expression": "\"#55555555\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee Indicative Remaining (main)",
                                    "expression": "[Fee Budget] - [Indicative Fee Revenue]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Measure",
                                    "expression": "min (dim_project[project_status])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin incl. Sub 2",
                                    "expression": "if(and(HASONEVALUE(dim_project[project_status]),min(dim_project[project_status])=\"Closed\"),[Invoiced Revenue] - [Internal (not I/C) costs incl. Sub], Blank())",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee internal costs @100% employee incl. Sub",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,CALCULATE([Σ Fee Used employee], filter(All(dim_project), dim_project[Main Project Number] = max(dim_project[Main Project Number] )))\n    ,CALCULATE([Σ Fee Used employee], filter(All(dim_project), dim_project[Main Project Number] in Values(dim_project[Main Project Number])))\n)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [#\"Spalte \"\"1\"\"\" = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Spalte \"\"1\"\"\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Spalte \"\"1\"\"\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "DisplayProjectTableData",
                            "columns": [
                                {
                                    "name": "Field",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "IsTotal",
                                    "dataType": "Boolean",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Type",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Part",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Dynamic Table Value",
                                    "expression": "\nSwitch(min(DisplayProjectTableData[Field])\n    ,\"Fee Budget\", [Fee Budget]\n    , \"IE Budget\", [IE Budget]\n    ,\"Total Budget\", [Total Budget]\n\n    ,\"Fee Invoiced\", [Invoiced Fee]\n    ,\"IE Invoiced\", [Invoiced IE]\n    ,\"Total Invoiced\", [Invoiced Revenue]\n\n    ,\"Fee Used\", [Fee internal costs @100% incl. Sub]\n    \n    ,\"IE used\", [IE internal costs incl. Sub]\n    ,\"Total Used\", [Internal (not I/C) costs @ 100% incl. Sub]\n\n    ,\"FEE Actual OD\", [Actual OD Fee incl. Sub]\n    ,\"IE Actual OD\", [Actual Overdraft IE incl. Sub]\n    ,\"Total Actual OD\", [Total Actual Overdraft incl. Sub]\n\n    ,\"Total Invoice Paid\", [Invoiced and Paid]\n    ,\"Total Invoice Unpaid\", [Unpaid Invoices]\n\n    ,\"Open WIP Fee\", [Open WIP Fee]\n\n    ,\"Fee Indicative Revenue\", [Indicative Fee Revenue]\n    ,\"IE Indicative Revenue\", [Indicative IE Revenue (main)]\n    ,\"Total Indicative Revenue\",[Total Indicative Revenue (main)]\n    ,\"Project Margin\", [Project Margin incl. Sub]\n    ,\"Fee Indicative Remaining\", if(min(dim_project[project_status]) = \"Closed\" ,\"-\", [Fee Budget] - [Indicative Fee Revenue])\n    \n    \n    , \"\") \n",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic Table Percent",
                                    "expression": "\nSwitch(min(DisplayProjectTableData[Field])\n    ,\"Fee Actual OD\", [Actual OD Fee % incl. Sub]\n    ,\"Fee Completion\", [Project Fee Completion]\n    ,\"Planned OD Fee\",[Planned OD Fee]\n    ,\"Time Completion\", [Project Time Completion]\n    ,\"IE Completion\", [Project IE Completion (main)]\n    ,\"IE Planned in % of Fee\", [Planned IE Ratio as of Fee]\n    ,\"IE Actual in % of Fee\", [Actual IE Ratio as of Fee incl. Sub]\n    ,\"Project Margin\", [Project Margin % incl. Sub]\n, Blank()) ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic Table Value Meta",
                                    "expression": "\nSwitch(min(DisplayProjectTableData[Field])    ,\"RB Company\",min(dim_project[responsible_unit_cou])        ,\"Project ID\", min(dim_project[project_number]),\"Sales Order ID\", min(dim_project[sales_order_id])    ,\"Currency of Sales Order\", min(dim_project[sales_order_currency])    ,\"Start Date\", min(dim_project[project_startdate])\n    ,\"End Date\", min(dim_project[project_planned_end])    ,\"Project Status\", min(dim_project[project_status])\n\n\n    ,\"Project Title\", min(dim_project[project_name])\n    ,\"Customer\", min(dim_project[project_client])\n\n\n\n    ,\"Industry\", min(dim_project[dm_cc])\n    ,\"Project Manager\", min(dim_project[PM Name])\n    ,\"Delivery Manager\", min(dim_project[delivery_manager])\n    ,\"Controlling\", min(dim_project[responsible_accounting])\n    ,\"Industry platform\", min(dim_project[industry])  ,\"Function platform\", min(dim_project[function])  ,\"Sector\", min(dim_project[sector])  ,\"Theme\", min(dim_project[theme])\n    , \"\")  \n",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"dZQxb4MwEIX/ioXULUOAtE3HpqQSQ5WopeoQdbDgmroyNnJMpPz72mAH2zgDisT7cu/unc3hkLwCoE3fHEEmiyRVj/lJk+/FISm3k5iFYsUlppOeq6cSPXiMLl+yMyc1NOrlKmLgyPdxC4d4uGXyeRr0x4iBkdbx4kZ9ulX4uZa9wnaFfus0aKt7+kOgjxYe8ugbXX1eeNtRkIQznXUWFNpTzBg0qgZSsFZWkTpeXGiPiZ4sXUebstQn6wz3FHC7Dhj6KvfGMVsG+rjbhtRYkjOgdzgDG/txSGfNMXJ24mxzMTiL7agibRhemsy25AP5HLABE4buEP+xM6/mpNlmAIYnYy/4H9QSvWFxJINpeDYsURbmcpnRliFQEUndWJcDr4mX/iR5C8KcX0+z//6QWPYnc3Xc8koQEhVYwnRvruKWNVZaB9L7ZkgTs8v0xZiKYgontBMNiHGwPACmXBg+Dp2nedh6AVRtXlxcKJvNzpkUnFLCjvY6ePrsdLaYMAM7+09NkEIAqy96oc4IyfWLde1flVShq946iuUPF61mnMXko3nPan3YPCoLqQ8VBB9M0lCqfqHV4a9yT/n+Bw==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Field = _t, Sort = _t, IsTotal = _t, Type = _t, Part = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"IsTotal\", type logical}, {\"Sort\", Int64.Type}, {\"Type\", Int64.Type}, {\"Part\", Int64.Type}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Field] <> \"Industry\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "rep v_fc_psr_permisson",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_fc_psr_permisson = datahub{[Schema=\"rep\",Item=\"v_fc_psr_permisson\"]}[Data]\nin\n    rep_v_fc_psr_permisson"
                                }
                            ]
                        },
                        {
                            "name": "Distinct Main Project Numbers",
                            "columns": [
                                {
                                    "name": "Main Project Number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Main Project Filter",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_project[Main Project Filter],dim_project[project_number],'Distinct Main Project Numbers'[Main Project Number])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "StartDate",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_project[project_startdate], dim_project[project_number], 'Distinct Main Project Numbers'[Main Project Number]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Project Client",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_project[project_client], dim_project[project_number], 'Distinct Main Project Numbers'[Main Project Number]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Project Status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_project[project_status], dim_project[project_number], 'Distinct Main Project Numbers'[Main Project Number]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Has Success Fee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nvar lu = LOOKUPVALUE(dim_project[has_success_fee], dim_project[project_number], 'Distinct Main Project Numbers'[Main Project Number]) \nreturn if (lu = blank(), \"No\", lu)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Selected Main Project",
                                    "expression": "if(HASONEVALUE('Distinct Main Project Numbers'[Main Project Number]), min('Distinct Main Project Numbers'[Main Project Filter]),\"Project Selection\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Multiple Selected Main Projects",
                                    "expression": "\n\nVAR ConCat =\n    CALCULATE (\n        CONCATENATEX (\n            VALUES ( dim_project[Main Project Filter])\n            ,dim_project[Main Project Filter]\n            ,\",\n\"\n        ), Filter(all(Dates),True())\n    )\nVAR IsItFiltered =\n    IF ( or(or(ISFILTERED ( dim_project[Main Project Filter] ),ISFILTERED ( dim_project[project_client] )),ISFILTERED ( dim_project[delivery_manager] ))\n    , ConCat\n    , \"Please select one or more projects\" )\n\nRETURN\n    IsItFiltered\n",
                                    "isHidden": false
                                },
                                {
                                    "name": "Selected Client",
                                    "expression": "\n\n \nif(ISFILTERED('Distinct Main Project Numbers'[Main Project Filter]),\n    \"\"\n,   \nif(ISFILTERED('Distinct Main Project Numbers'[Project Client])\n    ,calculate(CONCATENATEX(values('Distinct Main Project Numbers'[Project Client]), 'Distinct Main Project Numbers'[Project Client], \",\n\"))\n    ,\"[optionally filter by selecting one or more clients]\")\n )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Multiple Selected Client",
                                    "expression": "\n\nif(ISFILTERED('dim_project'[project_client])\n    ,calculate(CONCATENATEX(values('dim_project'[project_client]), 'dim_project'[project_client], \",\n\"))\n    ,\"[optionally filter by selecting one or more clients]\")\n",
                                    "isHidden": false
                                },
                                {
                                    "name": "Multiple Scelected Delivery Manager",
                                    "expression": "if(ISFILTERED('dim_project'[delivery_manager])\n    ,calculate(CONCATENATEX(values('dim_project'[delivery_manager]), 'dim_project'[delivery_manager], \",\n\"))\n    ,\"[optionally filter by selecting one or more delivery managers]\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Multiple Projects - nothing selected",
                                    "expression": "\nVAR IsItFiltered =\n    IF ( or(or(ISFILTERED ( dim_project[Main Project Filter] ),ISFILTERED ( dim_project[project_client] )),ISFILTERED ( dim_project[delivery_manager] ))\n    , \"\"\n    , \"Please select one or more projects\" )\n\nRETURN\n    IsItFiltered",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "Filter(VALUES(dim_project[Main Project Number]), dim_project[Main Project Number] <> Blank())"
                                }
                            ]
                        },
                        {
                            "name": "rep v_fc_psr_permisson_admin",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_id",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_desc",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_fc_psr_permisson_admin = datahub{[Schema=\"rep\",Item=\"v_fc_psr_permisson_admin\"]}[Data]\nin\n    rep_v_fc_psr_permisson_admin"
                                }
                            ]
                        },
                        {
                            "name": "_progressMeasures by status date",
                            "columns": [],
                            "measures": [
                                {
                                    "name": "PGR Earliest Start",
                                    "expression": "min(dim_project[project_startdate])",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Latest Finish",
                                    "expression": "max(dim_project[project_planned_end])",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Total Days",
                                    "expression": "DATEDIFF([PGR Earliest Start], [PGR Latest Finish], DAY)",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Days to Status Date",
                                    "expression": "\nif([PGR Earliest Start] > [StatusDate]\n    ,Blank()\n    ,if([PGR Latest Finish] > [StatusDate]\n        , DATEDIFF([PGR Earliest Start], [StatusDate],DAY)\n        , [PGR Total Days]\n      )\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Remaining Days",
                                    "expression": "[PGR Total Days] - [PGR Days to Status Date]",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Progress by Status Date",
                                    "expression": "DIVIDE([PGR Days to Status Date], [PGR Total Days], 0) ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Linear Planned Days to Status",
                                    "expression": "if(\n    or(max(Dates[Date]) < [PGR Earliest Start], min(Dates[Date])>[StatusDate])\n        ,blank(),  [PGR Progress by Status Date] * [Planned Days])",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Progess by Actuals vs Planned by Status Date",
                                    "expression": "DIVIDE([PGR Actual Days To Status Date] , [Linear Planned Days to Status], 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "StatusDate",
                                    "expression": "\nvar _lastActual = max(fact_project_time_recording[day_of_work])\nreturn \n   if (Today() > _lastActual, TODAY(),_lastActual)\n",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Actual Days To Date",
                                    "expression": "\nif(And(max(Dates[Date]) > [PGR Latest Finish] , max(Dates[Date]) > max(fact_project_time_recording[day_of_work]))\n     , Blank()  \n     ,\n     if(min(Dates[Date]) > [lastActualDate by date]\n        , blank()\n        ,CALCULATE([Actual Days], Filter(all(Dates[Date]), Dates[Date]<= [StatusDate] && Dates[Date] <= max(Dates[Date])))\n     )\n)\n     ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Max stat date",
                                    "expression": "max(Dates[Date]) ",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Days to Date",
                                    "expression": "\nif([PGR Earliest Start] > [Max stat date]\n    ,Blank()\n    ,if([PGR Latest Finish] > [Max stat date]\n        , DATEDIFF([PGR Earliest Start], [Max stat date],DAY)\n        , [PGR Total Days]\n      )\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Progress by Date",
                                    "expression": "if(max(Dates[Date])>[PGR Latest Finish],blank(), DIVIDE([PGR Days to Date], [PGR Total Days], 0) )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Linear Planned Days to Date",
                                    "expression": "if(max(Dates[Date])> [PGR Latest Finish],blank(), [PGR Progress by Date] * [Planned Days])",
                                    "isHidden": false
                                },
                                {
                                    "name": "AvgActualsPerDay",
                                    "expression": "\nif([Total Actuals (date independent)] > 0\n    , DIVIDE([Total Actuals (date independent)] , DATEDIFF([firstActualDate by date], [lastActualDate by date],DAY), Blank())\n    , [LinearPlannedPerDay])",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Actual Days To Status Date",
                                    "expression": "\n     CALCULATE([Actual Days], Filter(all(Dates[Date]), Dates[Date]<= [StatusDate] && Dates[Date] <= max(Dates[Date])))\n",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Progess by Actuals vs Planned by Status Date (valid dates)",
                                    "expression": "if(max(Dates[Date])> [lastActualDate by date],blank(), [PGR Progess by Actuals vs Planned by Status Date] )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Goal 100%",
                                    "expression": "if(or( max(Dates[Date])> [lastActualDate by date], max(Dates[Date])<[PGR Earliest Start]) ,blank(), 1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "LinearPlannedPerDay",
                                    "expression": "DIVIDE( [Planned Days], [PGR Total Days], Blank())",
                                    "isHidden": false
                                },
                                {
                                    "name": "linear Forecast until planned project end",
                                    "expression": "\nvar calcDate = max(Dates[Date])\nvar lastActualDate = [lastActualDate by date]\nvar startDate = if(ISBLANK(lastActualDate), [PGR Earliest Start], lastActualDate)\nreturn if(or(or(or( calcDate > [PGR Latest Finish], lastActualDate >= calcDate), calcDate < [PGR Earliest Start]), calcDate < Today())\n    , blank()\n    , [Total Actuals (date independent)]  + [AvgActualsPerDay] * DATEDIFF(startDate, calcDate,DAY)\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "lastActualDate by date",
                                    "expression": "\nvar _max = calculate(max(fact_project_time_recording[day_of_work]), All(Dates[Date]))\nreturn if(_max < TODAY(), TODAY(),  _max)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Actuals (date independent)",
                                    "expression": "CALCULATE([Actual Days], All(Dates[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Forecast Result",
                                    "expression": "\nif(min(dim_project[project_status]) = \"Closed\"\n    , [Total Actuals (date independent)]\n    , CALCULATE([linear Forecast until planned project end], Filter(All(Dates[Date]),Dates[Date] =[PGR Latest Finish]))\n     )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Max of Status or Finish Date",
                                    "expression": "\n   if ([PGR Latest Finish] > [StatusDate]\n    , [PGR Latest Finish]\n    , [StatusDate]\n   )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Forecast Result (bar)",
                                    "expression": "\nif(min(dim_project[project_status]) = \"Closed\"\n    , blank()\n    , [Forecast Result]\n     )",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Actual Days To Last Actual",
                                    "expression": "if(min(Dates[Date])> [lastActualDate by date], blank(), \n     CALCULATE([Actual Days], Filter(all(Dates[Date]), Dates[Date]<= [StatusDate] && Dates[Date] <= max(Dates[Date]))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Forecast Result (trend)",
                                    "expression": "\nif(min(Dates[Date]) <  [lastActualDate by date]\n    , [PGR Actual Days To Date]\n    , if(min(Dates[Date])> [PGR Latest Finish], blank(), \n    CALCULATE([linear Forecast until planned project end], Filter(All(Dates[Date]),Dates[Date] <= max(Dates[Date])))\n     ))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Planned Days (in project duration)",
                                    "expression": "\nif(or(max(Dates[Date]) < [PGR Earliest Start] ,min(Dates[Date]) > [PGR Latest Finish]), blank(), [Planned Days])",
                                    "isHidden": false
                                },
                                {
                                    "name": "firstActualDate by date",
                                    "expression": "\nvar _min = calculate(min(fact_project_time_recording[day_of_work]), All(Dates[Date]))\nreturn  _min",
                                    "isHidden": false
                                },
                                {
                                    "name": "Difference",
                                    "expression": "//f([Planned Days] == blank(), blank(), [Planned Days] - [Actual Days])\n[Planned Days] - [Actual Days]",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Column1 = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "Dates",
                            "columns": [
                                {
                                    "name": "Date",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "CALENDAR(Date(2018,01,01), DATE(2023,12,31 ))"
                                }
                            ]
                        },
                        {
                            "name": "ReportingDates",
                            "columns": [
                                {
                                    "name": "Date",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "YearMonth",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "expression": "CONCATENATE( Format(Year(ReportingDates[Date]),\"####\"), Format(Month(ReportingDates[Date]),\"00\"))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Period",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CONCATENATE(Format(ReportingDates[Date],\"MMMM\"), Format(YEAR(ReportingDates[Date]),\" ####\"))",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Reporting Date",
                                    "expression": "max(ReportingDates[Date])",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "CALENDAR(min(fact_project_oview_budget_costs[accounting_period_date]), max(fact_project_oview_budget_costs[accounting_period_date]))"
                                }
                            ]
                        },
                        {
                            "name": "rep v_fc_psr_invoice",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "clearing_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "INVOICE_ID",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "STATUS",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "BILL_TO",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "INVOICE_DATE",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "NET_DUE_DATE",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "LAST_DUNNING_DATE",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FEE_TOTAL_NET_VALUE_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FEE_TOTAL_NET_VALUE_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "INC_EXP_TOTAL_NET_VALUE_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "INC_EXP_TOTAL_NET_VALUE_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TAX_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TAX_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TOTAL_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TOTAL_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "NET_VALUE_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "NET_VALUE_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "POSTING_DATE",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "CLEARED_AMOUNT_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "CLEARED_AMOUNT_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "AMOUNT_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "AMOUNT_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TAX_RATE",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "CLEARED_AMOUNT_NET_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "OPEN AMOUNT",
                                    "expression": "sumx('rep v_fc_psr_invoice', if('rep v_fc_psr_invoice'[STATUS]=\"Canceled\",0, 'rep v_fc_psr_invoice'[AMOUNT_TC] -  'rep v_fc_psr_invoice'[CLEARED_AMOUNT_TC] ))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_invoice = Source{[Schema=\"rep\",Item=\"v_fc_psr_invoice\"]}[Data],\n    #\"Replaced Value\" = Table.ReplaceValue(rep_v_fc_psr_invoice,null,0,Replacer.ReplaceValue,{\"CLEARED_AMOUNT_TC\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",null,0,Replacer.ReplaceValue,{\"AMOUNT_TC\"})\nin\n    #\"Replaced Value1\""
                                }
                            ]
                        },
                        {
                            "name": "ProjectStatus",
                            "columns": [
                                {
                                    "name": "Status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WCkrNSU0sTk1R0lEyVIrViVZyzsmHcI0g3PzcgpzUErCIMVgkuCS/oADMN1GKjQUA\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Status = _t, Sort = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Status\", type text}, {\"Sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "pub ll_fc_data_explanation",
                            "columns": [
                                {
                                    "name": "sort_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dataname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "explanation",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "IsActive",
                                    "dataType": "Boolean",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ShowInP_PRI",
                                    "dataType": "Boolean",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_ll_fc_data_explanation = datahub{[Schema=\"pub\",Item=\"ll_fc_data_explanation\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_ll_fc_data_explanation, each ([IsActive] = true))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "dim_service",
                            "columns": [
                                {
                                    "name": "service_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service_desc",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sort_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_report_type_byd_service = Source{[Schema=\"rep\",Item=\"v_ll_report_type_byd_service\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(rep_v_ll_report_type_byd_service, each [report_id] = 100),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows\",{{\"service_description\", \"service_desc\"}}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"sort_id\", Int64.Type}}),\n    #\"Sorted Rows\" = Table.Sort(#\"Changed Type\",{{\"sort_id\", Order.Ascending}})\nin\n    #\"Sorted Rows\""
                                }
                            ]
                        },
                        {
                            "name": "v_fc_psr_byd_project_internal_incurred_costs",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ic_source_project_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_task_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "expense_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "source_document_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "posting_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "business_transaction_type_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "journal_entry_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoice",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoice_item",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_company",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_company_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_transactional",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_transactional_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "category_id",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "creditor_debitor_indicator",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "creditor_business_partner",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "debitor_business_partner",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "source_document_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "business_transaction_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "source_document_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "item_text",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_order_currency",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs_tc",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct_tc",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "fee internal costs 100 by employee",
                                    "expression": "\nif(HASONEVALUE(dim_employee[emp_id]) && HASONEVALUE(dim_service[service_desc]) && (not ISBLANK([Planned Days]) || not ISBLANK(sum(fact_project_time_recording[actual_work_days])) )\n    , calculate(Sum(v_fc_psr_byd_project_internal_incurred_costs[fee_internal_costs_100pct_eur])\n        ,Filter(v_fc_psr_byd_project_internal_incurred_costs,v_fc_psr_byd_project_internal_incurred_costs[employee_id] = min(dim_employee[emp_id]) \n                                                            //&& v_fc_psr_byd_project_internal_incurred_costs[service] = min(dim_service[service_desc])\n                                                            && v_fc_psr_byd_project_internal_incurred_costs[service_id] = min(dim_service[service_id])\n                ))\n    , if(HASONEVALUE(dim_employee[country_code]), Blank(), Sum(v_fc_psr_byd_project_internal_incurred_costs[fee_internal_costs_100pct_eur]))\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Σ Fee Used",
                                    "expression": "calculate(Sum(v_fc_psr_byd_project_internal_incurred_costs[fee_internal_costs_100pct_eur]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Σ IE Used",
                                    "expression": "Sum(v_fc_psr_byd_project_internal_incurred_costs[ie_internal_costs_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Σ Total Used",
                                    "expression": "[Σ Fee Used] + [Σ IE Used]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Σ Fee Used employee",
                                    "expression": "calculate(Sum(v_fc_psr_byd_project_internal_incurred_costs[fee_internal_costs_100pct_eur]),Filter(dim_employee, dim_employee[emp_id] <> blank() && dim_employee[emp_id] <> \"-999\"))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_report_type_byd_service = Source{[Schema=\"rep\",Item=\"v_fc_psr_byd_project_internal_incurred_costs\"]}[Data],\n    #\"Removed Columns\" = Table.RemoveColumns(rep_v_ll_report_type_byd_service,{ \"category\", \"sort_id\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns\",null,100,Replacer.ReplaceValue,{\"category_id\"})\nin\n    #\"Replaced Value\""
                                }
                            ]
                        },
                        {
                            "name": "v_fc_psr_byd_sales_order_acquisition_performance",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "opportunity_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_quote_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_order_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "rate",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Employee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_employee[Employee Id and Name], dim_employee[emp_id], v_fc_psr_byd_sales_order_acquisition_performance[emp_id])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_fc_psr_byd_sales_order_acquisition_performance = datahub{[Schema=\"rep\",Item=\"v_fc_psr_byd_sales_order_acquisition_performance\"]}[Data]\nin\n    rep_v_fc_psr_byd_sales_order_acquisition_performance"
                                }
                            ]
                        },
                        {
                            "name": "ll_fc_ie_cost_category",
                            "columns": [
                                {
                                    "name": "category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "category_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sort_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_report_type_byd_service = Source{[Schema=\"pub\",Item=\"ll_fc_ie_cost_category\"]}[Data]\nin\n    rep_v_ll_report_type_byd_service"
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "PlannedForUnknownEmployee",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45W0rW0tFTSUSrNy87LL8+LBTKjC3IS8/JSU5RiYwE=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [emp_id = _t, last_name = _t, first_name = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"emp_id\", type text}, {\"last_name\", type text}, {\"first_name\", type text}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "dim_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_data = Source{[Schema=\"rep\",Item=\"v_ll_job\"]}[Data]\nin\n    rep_v_fc_psr_project_data"
                        }
                    ],
                    "roles": [
                        {
                            "name": "PM",
                            "modelPermission": "Read",
                            "members": [
                                {
                                    "memberName": "IntranetUsers@rolandberger.com",
                                    "memberId": "71ac8d69-16bc-424d-b217-dbc15ed5e133",
                                    "memberType": "Group",
                                    "identityProvider": "AzureAD"
                                }
                            ],
                            "tablePermissions": [
                                {
                                    "name": "rep v_fc_psr_permisson",
                                    "filterExpression": "or([email] = userprincipalname(), CONTAINS('rep v_fc_psr_permisson_admin','rep v_fc_psr_permisson_admin'[email], USERPRINCIPALNAME(), 'rep v_fc_psr_permisson_admin'[report_id],100))"
                                }
                            ]
                        },
                        {
                            "name": "ADMIN",
                            "modelPermission": "Read"
                        },
                        {
                            "name": "Test eric",
                            "modelPermission": "Read",
                            "tablePermissions": [
                                {
                                    "name": "rep v_fc_psr_permisson",
                                    "filterExpression": "[email] = \"eric.kirstetter@rolandberger.com\""
                                }
                            ]
                        }
                    ],
                    "configuredBy": "Yi.Faber@rolandberger.com",
                    "configuredById": "9265d727-f2f5-4266-8763-f44f81a3d433",
                    "isEffectiveIdentityRequired": true,
                    "isEffectiveIdentityRolesRequired": true,
                    "refreshSchedule": {
                        "days": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                        ],
                        "times": [
                            "09:00"
                        ],
                        "enabled": true,
                        "localTimeZoneId": "Romance Standard Time",
                        "notifyOption": "MailOnFailure"
                    },
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-09-05T20:23:13.02",
                    "contentProviderType": "PbixInImportMode",
                    "datasourceUsages": [
                        {
                            "datasourceInstanceId": "9fbc6fc2-1774-4c3e-bd82-9e86586a6e47"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "gabriele.hayek@rolandberger.com",
                            "displayName": "Gabriele Hayek",
                            "identifier": "gabriele.hayek@rolandberger.com",
                            "graphId": "7276f27d-4b78-48bd-97db-2e93a457c11c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "4c500140-2399-4cca-b354-627b1ba8f673",
                    "name": "PSR Multiple project view",
                    "tables": [
                        {
                            "name": "dim_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Employee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "dim_employee[last_name] & \", \" & dim_employee[first_name] ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "All Employees",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"All\"",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Employee Id and Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CONCATENATE(CONCATENATE(dim_employee[emp_id],\" - \"), dim_employee[Employee])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "SortByNameIndex",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "debug userprincipalname",
                                    "expression": "userprincipalname()",
                                    "isHidden": false
                                },
                                {
                                    "name": "debug is admin user",
                                    "expression": "CONTAINS('rep v_fc_psr_permisson_admin','rep v_fc_psr_permisson_admin'[email], USERPRINCIPALNAME(), 'rep v_fc_psr_permisson_admin'[report_id],100)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_employee = Source{[Schema=\"rep\",Item=\"v_fc_psr_employee\"]}[Data],\n    #\"Appended Query\" = Table.Combine({rep_v_fc_psr_employee, PlannedForUnknownEmployee}),\n    #\"Sorted Rows\" = Table.Sort(#\"Appended Query\",{{\"last_name\", Order.Ascending}, {\"first_name\", Order.Ascending}}),\n    #\"Added Index\" = Table.AddIndexColumn(#\"Sorted Rows\", \"SortByNameIndex\", 0, 1)\nin\n    #\"Added Index\""
                                }
                            ]
                        },
                        {
                            "name": "dim_project",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_client",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_startdate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_enddate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_planned_start",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_planned_end",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_closedate",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dm_cc_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dm_cc",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dm_emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "delivery_manager",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pm_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_manager",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_master (wrong)",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_unit_cou_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "source",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Main Project Number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CALCULATE(min(dim_project_hierarchy[master_project_number]),dim_project_hierarchy[project_number] = earlier(dim_project[project_number]))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "IsMaster",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CONTAINS(dim_project_hierarchy, dim_project_hierarchy[project_number], dim_project[project_number], dim_project_hierarchy[is_master], TRUE())",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MP Project Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster],dim_project[project_name],Blank())",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "PM Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_employee[last_name], dim_employee[emp_id], dim_project[pm_emp_id]) & \", \"  & LOOKUPVALUE(dim_employee[first_name], dim_employee[emp_id], dim_project[pm_emp_id])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Accounting Responsible",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "dim_project[responsible_accounting]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "IsMasterFormat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster],1,Blank())",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "responsible_accounting_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_accounting",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Project Time Completion Col",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "//percent completed, 1 if closed, otherwise calculated by dates\nvar res = IF(dim_project[project_status]=\"Closed\",1,IF(DIVIDE(DATEDIFF(NOW(),dim_project[project_startdate],DAY),DATEDIFF(dim_project[project_startdate],dim_project[project_planned_end],DAY))>0,1,DIVIDE(DATEDIFF(dim_project[project_startdate],NOW(),DAY),DATEDIFF(dim_project[project_startdate],dim_project[project_planned_end],DAY))))\n\nvar res2  = if(res > 1, 1, res) \nreturn res2",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "sales_unit_cou_country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Fee Budget (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=TRUE()\n    , CALCULATE([Fee Budget],ALLEXCEPT(dim_project, dim_project[Main Project Number]), dim_project[IsMaster]) - CALCULATE([Fee Budget],ALLEXCEPT(dim_project, dim_project[Main Project Number]), dim_project[IsMaster]=false)\n    ,[Fee Budget]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "IE Budget (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=TRUE()\n    , CALCULATE([IE Budget],ALLEXCEPT(dim_project, dim_project[Main Project Number]), dim_project[IsMaster]) - CALCULATE([IE Budget],ALLEXCEPT(dim_project, dim_project[Main Project Number]), dim_project[IsMaster]=false)\n    ,[IE Budget]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Total Budget (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "dim_project[Fee Budget (part)] + dim_project[IE Budget (part)]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Invoiced Fee (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=TRUE()\n    ,Blank()\n    ,[Invoiced Fee]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Invoiced IE (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=TRUE()\n    ,Blank()\n    ,[Invoiced IE]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Total Invoiced Revenue (part)",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "dim_project[Invoiced Fee (part)] + dim_project[Invoiced IE (part)]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "sales_order_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Main Project Filter",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(dim_project[IsMaster]=FALSE(),Blank(), dim_project[Main Project Number] & \" -- \" & dim_project[project_client] & \" -- \" & dim_project[MP Project Name] & \" -- \" & dim_project[project_status])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "sales_order_currency",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_unit_cou_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "responsible_unit_cou",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "has_success_fee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "function",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "industry",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sector",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "theme",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Project Name (short)",
                                    "expression": "\nvar title =  min(dim_project[project_name]) \nreturn if(\n    HASONEVALUE(dim_project[project_name])\n    , if(LEN(title) <=20, title, CONCATENATE( LEFT(title,17), \"...\"))\n    , \"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Client (short)",
                                    "expression": "\nvar title =  min(dim_project[project_client]) \nreturn if(\n    HASONEVALUE(dim_project[project_client])\n    , if(LEN(title) <=20, title, CONCATENATE( LEFT(title,17), \"...\"))\n    , \"\")",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_data = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_data\"]}[Data],\n    #\"Renamed Columns\" = Table.RenameColumns(rep_v_fc_psr_project_data,{{\"is_master\", \"is_master (wrong)\"}}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",\"Released MIS\",\"Released\",Replacer.ReplaceText,{\"project_status\"})\nin\n    #\"Replaced Value\""
                                }
                            ]
                        },
                        {
                            "name": "dim_project_hierarchy",
                            "columns": [
                                {
                                    "name": "master_project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_master",
                                    "dataType": "Boolean",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_hierarchy = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_hierarchy_test\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(rep_v_fc_psr_project_hierarchy,{{\"is_master\", type logical}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "fact_project_invoices_ppo",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cleared_amount",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "net_value",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "exported_on",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Cleared Invoice Amount",
                                    "expression": "sum(fact_project_invoices_ppo[cleared_amount])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Net Value",
                                    "expression": "Sum(fact_project_invoices_ppo[net_value]) \n",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_invoices_ppo = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_invoices_ppo\"]}[Data]\nin\n    rep_v_fc_psr_project_invoices_ppo"
                                }
                            ]
                        },
                        {
                            "name": "fact_project_oview_budget_costs",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_status_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_client",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "budget_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "budget_ie_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoiced_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoiced_ie_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_estimate_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_estimate_ie_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "incurred_costs_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "incurred_costs_ie_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_completion",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoicing_delta_fee_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "incurred_costs_fee_100pct_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "internal_costs_not_ic_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Indicative Rev. Col",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "expression": "\n    if(fact_project_oview_budget_costs[project_status]=\"Closed\", \n        fact_project_oview_budget_costs[budget_fee_eur],\n         fact_project_oview_budget_costs[budget_fee_eur] * DIVIDE(fact_project_oview_budget_costs[project_completion_fee]\n          , 100))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "exported_on",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_completion_fee",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_period_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "product_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "revenue_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Fee value depending on product",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "if(fact_project_oview_budget_costs[product_id] = 97, fact_project_oview_budget_costs[revenue_eur],  fact_project_oview_budget_costs[budget_fee_eur]* fact_project_oview_budget_costs[project_completion] /100 )",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Indicative IE Rev Incomplete",
                                    "expression": "CALCULATE(if([IE internal costs] > [IE Budget], [IE Budget], [IE internal costs]), dim_project[project_status] <>\"Closed\")",
                                    "isHidden": true
                                },
                                {
                                    "name": "Indicative IE Rev Completed",
                                    "expression": "CALCULATE([Invoiced IE], dim_project[project_status]=\"Closed\")",
                                    "isHidden": true
                                },
                                {
                                    "name": "Indicative Fee Completed",
                                    "expression": "CALCULATE([Invoiced Fee],dim_project[project_status] = \"Closed\")",
                                    "isHidden": true
                                },
                                {
                                    "name": "Indicative Fee Incomplete",
                                    "expression": "\nvar _states = ALLSELECTED(dim_project[project_status]) //could be filtered i.e. Closed\n    \nreturn Calculate(\n    sum(fact_project_oview_budget_costs[Indicative Rev. Col])\n    , _states\n    ,dim_project[project_status]<>\"Closed\"\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n)\n",
                                    "isHidden": true
                                },
                                {
                                    "name": "Internal (not I/C) costs",
                                    "expression": "sum(fact_project_oview_budget_costs[internal_costs_not_ic_eur])",
                                    "isHidden": true
                                },
                                {
                                    "name": "Indicative IE Rev Incomplete (main)",
                                    "expression": "CALCULATE(if([IE internal costs incl. Sub] > [IE Budget], [IE Budget], [IE internal costs incl. Sub]), dim_project[project_status] <>\"Closed\")",
                                    "isHidden": true
                                },
                                {
                                    "name": "Product97",
                                    "expression": "CALCULATE( sum(fact_project_oview_budget_costs[invoiced_fee_eur]), FILTER(fact_project_oview_budget_costs, fact_project_oview_budget_costs[product_id] = 97))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_oview_budget_costs = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_oview_budget_costs\"]}[Data]\nin\n    rep_v_fc_psr_project_oview_budget_costs"
                                }
                            ]
                        },
                        {
                            "name": "fact_project_time_recording",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "day_of_work",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "actual_work",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "actual_work_days",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Actual Days",
                                    "expression": "sum(fact_project_time_recording[actual_work_days])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual Days To Date",
                                    "expression": "CALCULATE([Actual Days], Filter(all(fact_project_time_recording[day_of_work]), fact_project_time_recording[day_of_work]<= max(fact_project_time_recording[day_of_work]))) ",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_recording = Source{[Schema=\"rep\",Item=\"v_fc_psr_time_recording\"]}[Data]\nin\n    rep_v_fc_psr_project_recording"
                                }
                            ]
                        },
                        {
                            "name": "fact_project_time_planned",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "estimated_work_days",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "exported_on",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Planned Days",
                                    "expression": "sum(fact_project_time_planned[estimated_work_days])",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "description": "without date",
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_time_planned = Source{[Schema=\"rep\",Item=\"v_fc_psr_project_time_planned\"]}[Data],\n    #\"Replaced Value\" = Table.ReplaceValue(rep_v_fc_psr_project_time_planned,null,\"-999\",Replacer.ReplaceValue,{\"emp_id\"}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Replaced Value\", each [estimated_work_days] > 0)\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "fact_sales_order_items",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "planned_od_budget_sheet",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Planned OD Fee",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,MAX(fact_sales_order_items[planned_od_budget_sheet]) / 100\n    , Blank()\n)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_sales_order_items = Source{[Schema=\"rep\",Item=\"v_fc_psr_sales_order_items\"]}[Data]\nin\n    rep_v_fc_psr_sales_order_items"
                                }
                            ]
                        },
                        {
                            "name": "_Project Measures (budget/cost)",
                            "columns": [],
                            "measures": [
                                {
                                    "name": "Actual IE Ratio as of Fee",
                                    "expression": "DIVIDE([IE internal costs],[Fee Budget])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual OD Fee",
                                    "expression": "[Fee internal costs @100%] - [Indicative Fee Revenue]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual OD Fee %",
                                    "expression": "DIVIDE([Actual OD Fee], [Indicative Fee Revenue])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual Overdraft IE",
                                    "expression": "[IE internal costs] - [IE Budget]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee internal costs @100%",
                                    "expression": "\ncalculate(\n    Sum(fact_project_oview_budget_costs[fee_internal_costs_100pct_eur])\n    //[Σ Fee Used]\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee Budget",
                                    "expression": "\nvar calc=\ncalculate(\n    SUM(fact_project_oview_budget_costs[budget_fee_eur] )\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )\n\nreturn if(calc=blank(),0,calc)",
                                    "isHidden": false
                                },
                                {
                                    "name": "IE internal costs",
                                    "expression": "\n calculate(\n     //[Σ IE Used]\n    Sum(fact_project_oview_budget_costs[ie_internal_costs_eur])\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    ) ",
                                    "isHidden": false
                                },
                                {
                                    "name": "IE Budget",
                                    "expression": "\n calculate(\n    SUM(fact_project_oview_budget_costs[budget_ie_eur])\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Indicative Fee Revenue",
                                    "expression": "\n    if(\n        min(dim_project[project_status]) = \"Released\"\n            , sum(fact_project_oview_budget_costs[Fee value depending on product])\n            , [Indicative Fee Completed] + [Indicative Fee Incomplete] + if(min(dim_project[project_status]) = \"Released\", [Product97], 0)\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Indicative IE Revenue",
                                    "expression": "[Indicative IE Rev Completed] + [Indicative IE Rev Incomplete]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Internal (not I/C) costs @ 100%",
                                    "expression": "[Σ Fee Used] + [Σ IE Used]// [Fee internal costs @100%] + [IE internal costs]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Invoiced and Paid",
                                    "expression": "[Net Value]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Invoiced Fee",
                                    "expression": "\ncalculate(\n    SUM(fact_project_oview_budget_costs[invoiced_fee_eur])\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Invoiced IE",
                                    "expression": "\ncalculate(\n    SUM(fact_project_oview_budget_costs[invoiced_ie_eur])\n    , Filter(all(fact_project_oview_budget_costs[accounting_period_date]), fact_project_oview_budget_costs[accounting_period_date]<= ReportingDates[Reporting Date])\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Invoiced Revenue",
                                    "expression": "[Invoiced Fee] + [Invoiced IE] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Open WIP Fee",
                                    "expression": "[Indicative Fee Revenue]-[Invoiced Fee]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Planned IE Ratio as of Fee",
                                    "expression": "DIVIDE([IE Budget],[Fee Budget])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Fee Completion",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,If(FIRSTNONBLANK(dim_project[project_status],1)=\"Closed\",1,Divide([Indicative Fee Incomplete],[Fee Budget])) \n    ,AVERAGEX(dim_project, If(FIRSTNONBLANK(dim_project[project_status],1)=\"Closed\",1,Divide([Indicative Fee Incomplete],[Fee Budget])) )\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project IE Completion",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,If(FIRSTNONBLANK(dim_project[project_status], 1)=\"Closed\",1,DIVIDE([IE internal costs],[IE Budget]))\n    ,AVERAGEX(dim_project, If(FIRSTNONBLANK(dim_project[project_status], 1)=\"Closed\",1,DIVIDE([IE internal costs],[IE Budget])) )\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin",
                                    "expression": "[Invoiced Revenue] - [Internal (not I/C) costs]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin %",
                                    "expression": "Divide ([Project Margin], [Invoiced Revenue])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Time Completion",
                                    "expression": "AVERAGE(dim_project[Project Time Completion Col])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Actual Overdraft",
                                    "expression": "[Actual OD Fee] + [Actual Overdraft IE] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Budget",
                                    "expression": "[Fee Budget] + [IE Budget]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Indicative Revenue",
                                    "expression": "[Indicative Fee Revenue] + [Indicative IE Revenue] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Unpaid Invoices",
                                    "expression": "[Invoiced Revenue] - [Invoiced and Paid]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee internal costs @100% incl. Sub",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,CALCULATE([Σ Fee Used], filter(All(dim_project), dim_project[Main Project Number] = max(dim_project[Main Project Number])))\n    ,CALCULATE([Σ Fee Used], filter(All(dim_project), dim_project[Main Project Number] in Values(dim_project[Main Project Number])))\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "IE internal costs incl. Sub",
                                    "expression": "\nCALCULATE([Σ IE Used], filter(All(dim_project), dim_project[Main Project Number] in Values(dim_project[Main Project Number]) ), All(dim_employee))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Internal (not I/C) costs @ 100% incl. Sub",
                                    "expression": "[Fee internal costs @100% incl. Sub] + [IE internal costs incl. Sub]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual OD Fee incl. Sub",
                                    "expression": "[Fee internal costs @100% incl. Sub] - [Indicative Fee Revenue]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual Overdraft IE incl. Sub",
                                    "expression": "[IE internal costs incl. Sub] - [IE Budget]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Actual Overdraft incl. Sub",
                                    "expression": "[Actual OD Fee incl. Sub] + [Actual Overdraft IE incl. Sub] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual IE Ratio as of Fee incl. Sub",
                                    "expression": "DIVIDE([IE internal costs incl. Sub],[Fee Budget])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin incl. Sub",
                                    "expression": "if(and(HASONEVALUE(dim_project[project_status]),min(dim_project[project_status])=\"Closed\"),[Invoiced Revenue] -([Fee internal costs @100% incl. Sub] + [IE internal costs incl. Sub]- [Fee internal costs @100% employee incl. Sub]*0.35), Blank())",
                                    "isHidden": false
                                },
                                {
                                    "name": "Internal (not I/C) costs incl. Sub",
                                    "expression": "\nCALCULATE([Internal (not I/C) costs], filter(All(dim_project), dim_project[Main Project Number] in Values(dim_project[Main Project Number])))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin % incl. Sub",
                                    "expression": "Divide ([Project Margin incl. Sub], [Invoiced Revenue])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Actual OD Fee % incl. Sub",
                                    "expression": "DIVIDE([Actual OD Fee incl. Sub], [Indicative Fee Revenue])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Indicative IE Revenue (main)",
                                    "expression": "[Indicative IE Rev Completed] + [Indicative IE Rev Incomplete (main)]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Indicative Revenue (main)",
                                    "expression": "[Indicative Fee Revenue] + [Indicative IE Revenue (main)] ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project IE Completion (main)",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,If(FIRSTNONBLANK(dim_project[project_status], 1)=\"Closed\",1,DIVIDE([IE internal costs incl. Sub],[IE Budget]))\n    ,AVERAGEX(dim_project, If(FIRSTNONBLANK(dim_project[project_status], 1)=\"Closed\",1,DIVIDE([IE internal costs incl. Sub],[IE Budget])) )\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "TOOLTIP_PATTERN",
                                    "expression": "\n\"                                                           \"",
                                    "isHidden": false
                                },
                                {
                                    "name": "SEMI_TRANSPARENT",
                                    "expression": "\"#55555555\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee Indicative Remaining (main)",
                                    "expression": "[Fee Budget] - [Indicative Fee Revenue]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Measure",
                                    "expression": "min (dim_project[project_status])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Project Margin incl. Sub 2",
                                    "expression": "if(and(HASONEVALUE(dim_project[project_status]),min(dim_project[project_status])=\"Closed\"),[Invoiced Revenue] - [Internal (not I/C) costs incl. Sub], Blank())",
                                    "isHidden": false
                                },
                                {
                                    "name": "Fee internal costs @100% employee incl. Sub",
                                    "expression": "\nif(HASONEVALUE(dim_project[Main Project Number])\n    ,CALCULATE([Σ Fee Used employee], filter(All(dim_project), dim_project[Main Project Number] = max(dim_project[Main Project Number] )))\n    ,CALCULATE([Σ Fee Used employee], filter(All(dim_project), dim_project[Main Project Number] in Values(dim_project[Main Project Number])))\n)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [#\"Spalte \"\"1\"\"\" = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Spalte \"\"1\"\"\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Spalte \"\"1\"\"\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "DisplayProjectTableData",
                            "columns": [
                                {
                                    "name": "Field",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "IsTotal",
                                    "dataType": "Boolean",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Type",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Part",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Dynamic Table Value",
                                    "expression": "\nSwitch(min(DisplayProjectTableData[Field])\n    ,\"Fee Budget\", [Fee Budget]\n    , \"IE Budget\", [IE Budget]\n    ,\"Total Budget\", [Total Budget]\n\n    ,\"Fee Invoiced\", [Invoiced Fee]\n    ,\"IE Invoiced\", [Invoiced IE]\n    ,\"Total Invoiced\", [Invoiced Revenue]\n\n    ,\"Fee Used\", [Fee internal costs @100% incl. Sub]\n    \n    ,\"IE used\", [IE internal costs incl. Sub]\n    ,\"Total Used\", [Internal (not I/C) costs @ 100% incl. Sub]\n\n    ,\"FEE Actual OD\", [Actual OD Fee incl. Sub]\n    ,\"IE Actual OD\", [Actual Overdraft IE incl. Sub]\n    ,\"Total Actual OD\", [Total Actual Overdraft incl. Sub]\n\n    ,\"Total Invoice Paid\", [Invoiced and Paid]\n    ,\"Total Invoice Unpaid\", [Unpaid Invoices]\n\n    ,\"Open WIP Fee\", [Open WIP Fee]\n\n    ,\"Fee Indicative Revenue\", [Indicative Fee Revenue]\n    ,\"IE Indicative Revenue\", [Indicative IE Revenue (main)]\n    ,\"Total Indicative Revenue\",[Total Indicative Revenue (main)]\n    ,\"Project Margin\", [Project Margin incl. Sub]\n    ,\"Fee Indicative Remaining\", if(min(dim_project[project_status]) = \"Closed\" ,\"-\", [Fee Budget] - [Indicative Fee Revenue])\n    \n    \n    , \"\") \n",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic Table Percent",
                                    "expression": "\nSwitch(min(DisplayProjectTableData[Field])\n    ,\"Fee Actual OD\", [Actual OD Fee % incl. Sub]\n    ,\"Fee Completion\", [Project Fee Completion]\n    ,\"Planned OD Fee\",[Planned OD Fee]\n    ,\"Time Completion\", [Project Time Completion]\n    ,\"IE Completion\", [Project IE Completion (main)]\n    ,\"IE Planned in % of Fee\", [Planned IE Ratio as of Fee]\n    ,\"IE Actual in % of Fee\", [Actual IE Ratio as of Fee incl. Sub]\n    ,\"Project Margin\", [Project Margin % incl. Sub]\n, Blank()) ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic Table Value Meta",
                                    "expression": "\nSwitch(min(DisplayProjectTableData[Field])    ,\"RB Company\",min(dim_project[sales_unit_cou_country])        ,\"Project ID\", min(dim_project[project_number]),\"Sales Order ID\", min(dim_project[sales_order_id])    ,\"Currency of Sales Order\", min(dim_project[sales_order_currency])    ,\"Start Date\", min(dim_project[project_startdate])\n    ,\"End Date\", min(dim_project[project_planned_end])    ,\"Project Status\", min(dim_project[project_status])\n\n\n    ,\"Project Title\", min(dim_project[project_name])\n    ,\"Customer\", min(dim_project[project_client])\n\n\n\n    ,\"Industry\", min(dim_project[dm_cc])\n    ,\"Project Manager\", min(dim_project[PM Name])\n    ,\"Delivery Manager\", min(dim_project[delivery_manager])\n    ,\"Controlling\", min(dim_project[responsible_accounting])\n    ,\"Industry platform\", min(dim_project[industry])  ,\"Function platform\", min(dim_project[function])  ,\"Sector\", min(dim_project[sector])  ,\"Theme\", min(dim_project[theme])\n    , \"\")  \n",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"dZRPj4IwEMW/SkOyNw8Crn+Oq7iJh41GMXswe2hgdLspranFxG+/BVppSz0QE97PeTNvWk6n6BMALevyAjIaRbF69E8c/YxO0Wbdi4kv5lxi2uupenJRg8M05TfszkkBpXo5CRhY8nvYwiKmr0yOt1afBQy0NA8X1+riVeGPQtYK22bNW6tBU93Rp57eWTjIzDV6+qx4daUgCWdN1olXaEcxY1CqGkjBjTIJ1HHiQjtMmsniebApQx3ZVXMLj9tegaHvzU47JmNP73ZbkgJLcge0hzuwrh+LtNYcIgcnzjQXgpPQjnJS+eHF0WBLLpAOARMwYegN8bOZeTIk9TY90D8ZO8H/oJDoC4sLaU39s2GITaYvlx5t7AM5kdSOddzyDbGqb5JXIPT5dTTz74PEsr7pq2OXV4KQKMMS+nvzFNesNNLck/bLNk3MHv0Xoy+KKdzQVpQgusFSD+hzYfjSdh4nfusZULV58bChdDA7Z1JwSgm7mOvg6IPTWWHCNGztP9ZBCgGseDQLtUaInl+sZ/+qpApd9XalWJ65qNwQ0s67ZkVz1mwo8aGDioELN6JOyX+hAtdbCT//\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Field = _t, Sort = _t, IsTotal = _t, Type = _t, Part = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"IsTotal\", type logical}, {\"Sort\", Int64.Type}, {\"Type\", Int64.Type}, {\"Part\", Int64.Type}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "rep v_fc_psr_permisson",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_fc_psr_permisson = datahub{[Schema=\"rep\",Item=\"v_fc_psr_permisson\"]}[Data]\nin\n    rep_v_fc_psr_permisson"
                                }
                            ]
                        },
                        {
                            "name": "Distinct Main Project Numbers",
                            "columns": [
                                {
                                    "name": "Main Project Number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Main Project Filter",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_project[Main Project Filter],dim_project[project_number],'Distinct Main Project Numbers'[Main Project Number])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "StartDate",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_project[project_startdate], dim_project[project_number], 'Distinct Main Project Numbers'[Main Project Number]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Project Client",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_project[project_client], dim_project[project_number], 'Distinct Main Project Numbers'[Main Project Number]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Project Status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_project[project_status], dim_project[project_number], 'Distinct Main Project Numbers'[Main Project Number]) ",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Has Success Fee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nvar lu = LOOKUPVALUE(dim_project[has_success_fee], dim_project[project_number], 'Distinct Main Project Numbers'[Main Project Number]) \nreturn if (lu = blank(), \"No\", lu)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Selected Main Project",
                                    "expression": "if(HASONEVALUE('Distinct Main Project Numbers'[Main Project Number]), min('Distinct Main Project Numbers'[Main Project Filter]),\"Project Selection\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Multiple Selected Main Projects",
                                    "expression": "\n\nVAR ConCat =\n    CALCULATE (\n        CONCATENATEX (\n            VALUES ( dim_project[Main Project Filter])\n            ,dim_project[Main Project Filter]\n            ,\",\n\"\n        ), Filter(all(Dates),True())\n    )\nVAR IsItFiltered =\n    IF ( or(or(ISFILTERED ( dim_project[Main Project Filter] ),ISFILTERED ( dim_project[project_client] )),ISFILTERED ( dim_project[delivery_manager] ))\n    , ConCat\n    , \"Please select one or more projects\" )\n\nRETURN\n    IsItFiltered\n",
                                    "isHidden": false
                                },
                                {
                                    "name": "Selected Client",
                                    "expression": "\n\n \nif(ISFILTERED('Distinct Main Project Numbers'[Main Project Filter]),\n    \"\"\n,   \nif(ISFILTERED('Distinct Main Project Numbers'[Project Client])\n    ,calculate(CONCATENATEX(values('Distinct Main Project Numbers'[Project Client]), 'Distinct Main Project Numbers'[Project Client], \",\n\"))\n    ,\"[optionally filter by selecting one or more clients]\")\n )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Multiple Selected Client",
                                    "expression": "\n\nif(ISFILTERED('dim_project'[project_client])\n    ,calculate(CONCATENATEX(values('dim_project'[project_client]), 'dim_project'[project_client], \",\n\"))\n    ,\"[optionally filter by selecting one or more clients]\")\n",
                                    "isHidden": false
                                },
                                {
                                    "name": "Multiple Scelected Delivery Manager",
                                    "expression": "if(ISFILTERED('dim_project'[delivery_manager])\n    ,calculate(CONCATENATEX(values('dim_project'[delivery_manager]), 'dim_project'[delivery_manager], \",\n\"))\n    ,\"[optionally filter by selecting one or more delivery managers]\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Multiple Projects - nothing selected",
                                    "expression": "\nVAR IsItFiltered =\n    IF ( or(or(ISFILTERED ( dim_project[Main Project Filter] ),ISFILTERED ( dim_project[project_client] )),ISFILTERED ( dim_project[delivery_manager] ))\n    , \"\"\n    , \"Please select one or more projects\" )\n\nRETURN\n    IsItFiltered",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "Filter(VALUES(dim_project[Main Project Number]), dim_project[Main Project Number] <> Blank())"
                                }
                            ]
                        },
                        {
                            "name": "rep v_fc_psr_permisson_admin",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_id",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_desc",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_fc_psr_permisson_admin = datahub{[Schema=\"rep\",Item=\"v_fc_psr_permisson_admin\"]}[Data]\nin\n    rep_v_fc_psr_permisson_admin"
                                }
                            ]
                        },
                        {
                            "name": "_progressMeasures by status date",
                            "columns": [],
                            "measures": [
                                {
                                    "name": "PGR Earliest Start",
                                    "expression": "min(dim_project[project_startdate])",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Latest Finish",
                                    "expression": "max(dim_project[project_planned_end])",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Total Days",
                                    "expression": "DATEDIFF([PGR Earliest Start], [PGR Latest Finish], DAY)",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Days to Status Date",
                                    "expression": "\nif([PGR Earliest Start] > [StatusDate]\n    ,Blank()\n    ,if([PGR Latest Finish] > [StatusDate]\n        , DATEDIFF([PGR Earliest Start], [StatusDate],DAY)\n        , [PGR Total Days]\n      )\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Remaining Days",
                                    "expression": "[PGR Total Days] - [PGR Days to Status Date]",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Progress by Status Date",
                                    "expression": "DIVIDE([PGR Days to Status Date], [PGR Total Days], 0) ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Linear Planned Days to Status",
                                    "expression": "if(\n    or(max(Dates[Date]) < [PGR Earliest Start], min(Dates[Date])>[StatusDate])\n        ,blank(),  [PGR Progress by Status Date] * [Planned Days])",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Progess by Actuals vs Planned by Status Date",
                                    "expression": "DIVIDE([PGR Actual Days To Status Date] , [Linear Planned Days to Status], 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "StatusDate",
                                    "expression": "\nvar _lastActual = max(fact_project_time_recording[day_of_work])\nreturn \n   if (Today() > _lastActual, TODAY(),_lastActual)\n",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Actual Days To Date",
                                    "expression": "\nif(And(max(Dates[Date]) > [PGR Latest Finish] , max(Dates[Date]) > max(fact_project_time_recording[day_of_work]))\n     , Blank()  \n     ,\n     if(min(Dates[Date]) > [lastActualDate by date]\n        , blank()\n        ,CALCULATE([Actual Days], Filter(all(Dates[Date]), Dates[Date]<= [StatusDate] && Dates[Date] <= max(Dates[Date])))\n     )\n)\n     ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Max stat date",
                                    "expression": "max(Dates[Date]) ",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Days to Date",
                                    "expression": "\nif([PGR Earliest Start] > [Max stat date]\n    ,Blank()\n    ,if([PGR Latest Finish] > [Max stat date]\n        , DATEDIFF([PGR Earliest Start], [Max stat date],DAY)\n        , [PGR Total Days]\n      )\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Progress by Date",
                                    "expression": "if(max(Dates[Date])>[PGR Latest Finish],blank(), DIVIDE([PGR Days to Date], [PGR Total Days], 0) )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Linear Planned Days to Date",
                                    "expression": "if(max(Dates[Date])> [PGR Latest Finish],blank(), [PGR Progress by Date] * [Planned Days])",
                                    "isHidden": false
                                },
                                {
                                    "name": "AvgActualsPerDay",
                                    "expression": "\nif([Total Actuals (date independent)] > 0\n    , DIVIDE([Total Actuals (date independent)] , DATEDIFF([firstActualDate by date], [lastActualDate by date],DAY), Blank())\n    , [LinearPlannedPerDay])",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Actual Days To Status Date",
                                    "expression": "\n     CALCULATE([Actual Days], Filter(all(Dates[Date]), Dates[Date]<= [StatusDate] && Dates[Date] <= max(Dates[Date])))\n",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Progess by Actuals vs Planned by Status Date (valid dates)",
                                    "expression": "if(max(Dates[Date])> [lastActualDate by date],blank(), [PGR Progess by Actuals vs Planned by Status Date] )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Goal 100%",
                                    "expression": "if(or( max(Dates[Date])> [lastActualDate by date], max(Dates[Date])<[PGR Earliest Start]) ,blank(), 1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "LinearPlannedPerDay",
                                    "expression": "DIVIDE( [Planned Days], [PGR Total Days], Blank())",
                                    "isHidden": false
                                },
                                {
                                    "name": "linear Forecast until planned project end",
                                    "expression": "\nvar calcDate = max(Dates[Date])\nvar lastActualDate = [lastActualDate by date]\nvar startDate = if(ISBLANK(lastActualDate), [PGR Earliest Start], lastActualDate)\nreturn if(or(or(or( calcDate > [PGR Latest Finish], lastActualDate >= calcDate), calcDate < [PGR Earliest Start]), calcDate < Today())\n    , blank()\n    , [Total Actuals (date independent)]  + [AvgActualsPerDay] * DATEDIFF(startDate, calcDate,DAY)\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "lastActualDate by date",
                                    "expression": "\nvar _max = calculate(max(fact_project_time_recording[day_of_work]), All(Dates[Date]))\nreturn if(_max < TODAY(), TODAY(),  _max)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Total Actuals (date independent)",
                                    "expression": "CALCULATE([Actual Days], All(Dates[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Forecast Result",
                                    "expression": "\nif(min(dim_project[project_status]) = \"Closed\"\n    , [Total Actuals (date independent)]\n    , CALCULATE([linear Forecast until planned project end], Filter(All(Dates[Date]),Dates[Date] =[PGR Latest Finish]))\n     )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Max of Status or Finish Date",
                                    "expression": "\n   if ([PGR Latest Finish] > [StatusDate]\n    , [PGR Latest Finish]\n    , [StatusDate]\n   )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Forecast Result (bar)",
                                    "expression": "\nif(min(dim_project[project_status]) = \"Closed\"\n    , blank()\n    , [Forecast Result]\n     )",
                                    "isHidden": false
                                },
                                {
                                    "name": "PGR Actual Days To Last Actual",
                                    "expression": "if(min(Dates[Date])> [lastActualDate by date], blank(), \n     CALCULATE([Actual Days], Filter(all(Dates[Date]), Dates[Date]<= [StatusDate] && Dates[Date] <= max(Dates[Date]))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Forecast Result (trend)",
                                    "expression": "\nif(min(Dates[Date]) <  [lastActualDate by date]\n    , [PGR Actual Days To Date]\n    , if(min(Dates[Date])> [PGR Latest Finish], blank(), \n    CALCULATE([linear Forecast until planned project end], Filter(All(Dates[Date]),Dates[Date] <= max(Dates[Date])))\n     ))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Planned Days (in project duration)",
                                    "expression": "\nif(or(max(Dates[Date]) < [PGR Earliest Start] ,min(Dates[Date]) > [PGR Latest Finish]), blank(), [Planned Days])",
                                    "isHidden": false
                                },
                                {
                                    "name": "firstActualDate by date",
                                    "expression": "\nvar _min = calculate(min(fact_project_time_recording[day_of_work]), All(Dates[Date]))\nreturn  _min",
                                    "isHidden": false
                                },
                                {
                                    "name": "Difference",
                                    "expression": "//f([Planned Days] == blank(), blank(), [Planned Days] - [Actual Days])\n[Planned Days] - [Actual Days]",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i44FAA==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Column1 = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Column1\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "Dates",
                            "columns": [
                                {
                                    "name": "Date",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "CALENDAR(Date(2018,01,01), DATE(2023,12,31 ))"
                                }
                            ]
                        },
                        {
                            "name": "ReportingDates",
                            "columns": [
                                {
                                    "name": "Date",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "YearMonth",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "expression": "CONCATENATE( Format(Year(ReportingDates[Date]),\"####\"), Format(Month(ReportingDates[Date]),\"00\"))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Period",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CONCATENATE(Format(ReportingDates[Date],\"MMMM\"), Format(YEAR(ReportingDates[Date]),\" ####\"))",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Reporting Date",
                                    "expression": "max(ReportingDates[Date])",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "CALENDAR(min(fact_project_oview_budget_costs[accounting_period_date]), max(fact_project_oview_budget_costs[accounting_period_date]))"
                                }
                            ]
                        },
                        {
                            "name": "rep v_fc_psr_invoice",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "clearing_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "INVOICE_ID",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "STATUS",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "BILL_TO",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "INVOICE_DATE",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "NET_DUE_DATE",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "LAST_DUNNING_DATE",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FEE_TOTAL_NET_VALUE_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FEE_TOTAL_NET_VALUE_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "INC_EXP_TOTAL_NET_VALUE_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "INC_EXP_TOTAL_NET_VALUE_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TAX_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TAX_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TOTAL_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TOTAL_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "NET_VALUE_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "NET_VALUE_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "POSTING_DATE",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "CLEARED_AMOUNT_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "CLEARED_AMOUNT_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "AMOUNT_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "AMOUNT_TC_CUR",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TAX_RATE",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "CLEARED_AMOUNT_NET_TC",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "OPEN AMOUNT",
                                    "expression": "sumx('rep v_fc_psr_invoice', if('rep v_fc_psr_invoice'[STATUS]=\"Canceled\",0, 'rep v_fc_psr_invoice'[AMOUNT_TC] -  'rep v_fc_psr_invoice'[CLEARED_AMOUNT_TC] ))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_invoice = Source{[Schema=\"rep\",Item=\"v_fc_psr_invoice\"]}[Data],\n    #\"Replaced Value\" = Table.ReplaceValue(rep_v_fc_psr_invoice,null,0,Replacer.ReplaceValue,{\"CLEARED_AMOUNT_TC\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",null,0,Replacer.ReplaceValue,{\"AMOUNT_TC\"})\nin\n    #\"Replaced Value1\""
                                }
                            ]
                        },
                        {
                            "name": "ProjectStatus",
                            "columns": [
                                {
                                    "name": "Status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WCkrNSU0sTk1R0lEyVIrViVZyzsmHcI0g3PzcgpzUErCIMVgkuCS/oADMN1GKjQUA\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Status = _t, Sort = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Status\", type text}, {\"Sort\", Int64.Type}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "pub ll_fc_data_explanation",
                            "columns": [
                                {
                                    "name": "sort_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "dataname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "explanation",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "IsActive",
                                    "dataType": "Boolean",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ShowInP_PRI",
                                    "dataType": "Boolean",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_ll_fc_data_explanation = datahub{[Schema=\"pub\",Item=\"ll_fc_data_explanation\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_ll_fc_data_explanation, each ([IsActive] = true))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        },
                        {
                            "name": "dim_service",
                            "columns": [
                                {
                                    "name": "service_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service_desc",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "report_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sort_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_report_type_byd_service = Source{[Schema=\"rep\",Item=\"v_ll_report_type_byd_service\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(rep_v_ll_report_type_byd_service, each [report_id] = 100),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows\",{{\"service_description\", \"service_desc\"}}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"sort_id\", Int64.Type}}),\n    #\"Sorted Rows\" = Table.Sort(#\"Changed Type\",{{\"sort_id\", Order.Ascending}})\nin\n    #\"Sorted Rows\""
                                }
                            ]
                        },
                        {
                            "name": "v_fc_psr_byd_project_internal_incurred_costs",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ic_source_project_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_task_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "expense_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "source_document_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "posting_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "business_transaction_type_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "journal_entry_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoice",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "invoice_item",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_company",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_company_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_transactional",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_transactional_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "amount_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct_cur",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "category_id",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "creditor_debitor_indicator",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "creditor_business_partner",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "debitor_business_partner",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "source_document_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "business_transaction_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "service_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "source_document_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "item_text",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_order_currency",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ie_internal_costs_tc",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fee_internal_costs_100pct_tc",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "fee internal costs 100 by employee",
                                    "expression": "\nif(HASONEVALUE(dim_employee[emp_id]) && HASONEVALUE(dim_service[service_desc]) && (not ISBLANK([Planned Days]) || not ISBLANK(sum(fact_project_time_recording[actual_work_days])) )\n    , calculate(Sum(v_fc_psr_byd_project_internal_incurred_costs[fee_internal_costs_100pct_eur])\n        ,Filter(v_fc_psr_byd_project_internal_incurred_costs,v_fc_psr_byd_project_internal_incurred_costs[employee_id] = min(dim_employee[emp_id]) \n                                                            //&& v_fc_psr_byd_project_internal_incurred_costs[service] = min(dim_service[service_desc])\n                                                            && v_fc_psr_byd_project_internal_incurred_costs[service_id] = min(dim_service[service_id])\n                ))\n    , if(HASONEVALUE(dim_employee[country_code]), Blank(), Sum(v_fc_psr_byd_project_internal_incurred_costs[fee_internal_costs_100pct_eur]))\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "Σ Fee Used",
                                    "expression": "calculate(Sum(v_fc_psr_byd_project_internal_incurred_costs[fee_internal_costs_100pct_eur]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Σ IE Used",
                                    "expression": "Sum(v_fc_psr_byd_project_internal_incurred_costs[ie_internal_costs_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Σ Total Used",
                                    "expression": "[Σ Fee Used] + [Σ IE Used]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Σ Fee Used employee",
                                    "expression": "calculate(Sum(v_fc_psr_byd_project_internal_incurred_costs[fee_internal_costs_100pct_eur]),Filter(dim_employee, dim_employee[emp_id] <> blank() && dim_employee[emp_id] <> \"-999\"))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_report_type_byd_service = Source{[Schema=\"rep\",Item=\"v_fc_psr_byd_project_internal_incurred_costs\"]}[Data],\n    #\"Removed Columns\" = Table.RemoveColumns(rep_v_ll_report_type_byd_service,{ \"category\", \"sort_id\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns\",null,100,Replacer.ReplaceValue,{\"category_id\"})\nin\n    #\"Replaced Value\""
                                }
                            ]
                        },
                        {
                            "name": "v_fc_psr_byd_sales_order_acquisition_performance",
                            "columns": [
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "opportunity_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_quote_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sales_order_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "rate",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Employee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "LOOKUPVALUE(dim_employee[Employee Id and Name], dim_employee[emp_id], v_fc_psr_byd_sales_order_acquisition_performance[emp_id])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_fc_psr_byd_sales_order_acquisition_performance = datahub{[Schema=\"rep\",Item=\"v_fc_psr_byd_sales_order_acquisition_performance\"]}[Data]\nin\n    rep_v_fc_psr_byd_sales_order_acquisition_performance"
                                }
                            ]
                        },
                        {
                            "name": "ll_fc_ie_cost_category",
                            "columns": [
                                {
                                    "name": "category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "category_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sort_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_report_type_byd_service = Source{[Schema=\"pub\",Item=\"ll_fc_ie_cost_category\"]}[Data]\nin\n    rep_v_ll_report_type_byd_service"
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "PlannedForUnknownEmployee",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45W0rW0tFTSUSrNy87LL8+LBTKjC3IS8/JSU5RiYwE=\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [emp_id = _t, last_name = _t, first_name = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"emp_id\", type text}, {\"last_name\", type text}, {\"first_name\", type text}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "dim_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_fc_psr_project_data = Source{[Schema=\"rep\",Item=\"v_ll_job\"]}[Data]\nin\n    rep_v_fc_psr_project_data"
                        }
                    ],
                    "roles": [
                        {
                            "name": "PM",
                            "modelPermission": "Read",
                            "tablePermissions": [
                                {
                                    "name": "rep v_fc_psr_permisson",
                                    "filterExpression": "or([email] = userprincipalname(), CONTAINS('rep v_fc_psr_permisson_admin','rep v_fc_psr_permisson_admin'[email], USERPRINCIPALNAME(), 'rep v_fc_psr_permisson_admin'[report_id],100))"
                                }
                            ]
                        },
                        {
                            "name": "ADMIN",
                            "modelPermission": "Read"
                        },
                        {
                            "name": "Test eric",
                            "modelPermission": "Read",
                            "tablePermissions": [
                                {
                                    "name": "rep v_fc_psr_permisson",
                                    "filterExpression": "[email] = \"eric.kirstetter@rolandberger.com\""
                                }
                            ]
                        }
                    ],
                    "configuredBy": "Yi.Faber@rolandberger.com",
                    "configuredById": "9265d727-f2f5-4266-8763-f44f81a3d433",
                    "isEffectiveIdentityRequired": true,
                    "isEffectiveIdentityRolesRequired": true,
                    "refreshSchedule": {
                        "days": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                        ],
                        "times": [
                            "09:00"
                        ],
                        "enabled": true,
                        "localTimeZoneId": "Romance Standard Time",
                        "notifyOption": "MailOnFailure"
                    },
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-09-08T15:51:34.697",
                    "contentProviderType": "PbixInImportMode",
                    "datasourceUsages": [
                        {
                            "datasourceInstanceId": "9fbc6fc2-1774-4c3e-bd82-9e86586a6e47"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "Felix.Hubmann@rolandberger.com",
                            "displayName": "Felix Hubmann",
                            "identifier": "Felix.Hubmann@rolandberger.com",
                            "graphId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "gabriele.hayek@rolandberger.com",
                            "displayName": "Gabriele Hayek",
                            "identifier": "gabriele.hayek@rolandberger.com",
                            "graphId": "7276f27d-4b78-48bd-97db-2e93a457c11c",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                },
                {
                    "id": "aa8098b8-0be3-47c4-b036-ffb5cdb2aae2",
                    "name": "Capacity & Utilization - F&C",
                    "tables": [
                        {
                            "name": "msr v_employee_utilization",
                            "columns": [
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "absence_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "training_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "leave_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "vacation_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "illness_hrs_unpaid",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_investment",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "productive_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_utilization",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "target_hours_fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_public_holiday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "is_not_weekend",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "TA: Vacation & other leave",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[vacation_hours] + 'msr v_employee_utilization'[leave_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "TA: Target hours adj.",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[target_hours] - 'msr v_employee_utilization'[TA: Vacation & other leave] - 'msr v_employee_utilization'[training_hours]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "booked_hours",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[absence_hours] + 'msr v_employee_utilization'[training_hours] + 'msr v_employee_utilization'[productive_hours_utilization]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "acq_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "inp_project_hours_adj",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Utilization % Day",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\nif('msr v_employee_utilization'[target_hours] = 0 && 'msr v_employee_utilization'[productive_hours_utilization] > 0, 8,\nDIVIDE('msr v_employee_utilization'[productive_hours_utilization], 'msr v_employee_utilization'[target_hours],0))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "hr_project_hours",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[full_name] & \" - \" & 'msr v_employee_utilization'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "employee_date_key",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_utilization'[emp_id] & \"-\" & 'msr v_employee_utilization'[calendar_day]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Utilization_target_hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %",
                                    "expression": "\nDIVIDE(\n\t[Utilization_hours_on_client_project],\n\t[Utilization_target_hours]\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target",
                                    "expression": "0.8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance",
                                    "expression": "'msr v_employee_utilization'[Utilization %] - 'msr v_employee_utilization'[Utilization Target]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance String",
                                    "expression": "\"(\" & 'msr v_employee_utilization'[Utilization Performance Short] & \"ppt.)\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Performance Short",
                                    "expression": "FIXED('msr v_employee_utilization'[Utilization Performance] * 100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target String",
                                    "expression": "\"Target: \" & 'msr v_employee_utilization'[Utilization Target] * 100 & \"%\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target & Performance",
                                    "expression": "[Utilization Target String] & \" \" & [Utilization Performance String]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % CY",
                                    "expression": "\nvar productive_hours_utilization = CALCULATE(SUM('msr v_employee_utilization'[productive_hours_utilization]), DATESYTD('pub dim_date'[Date]))\n \n Return\n    productive_hours_utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_absolute_2",
                                    "expression": "[Utilization_hours_on_client_project] / 'msr v_employee_utilization'[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization %_2",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, BLANK(), utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (all vs th)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[booked_hours]), SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (prod+ill vs adj.)",
                                    "expression": "DIVIDE(SUM('msr v_employee_utilization'[productive_hours_utilization])+SUM('msr v_employee_utilization'[illness_hours]), SUM('msr v_employee_utilization'[TA: Target hours adj.]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "TA: Target hours adj. Total",
                                    "expression": "SUM('msr v_employee_utilization'[TA: Target hours adj.])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion rate (reported)",
                                    "expression": "DIVIDE([Hours_reported], [TA: Target hours adj. Total])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness",
                                    "expression": "SUM('msr v_employee_utilization'[illness_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge",
                                    "expression": "[Utilization_hours_illness] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal",
                                    "expression": "SUM('msr v_employee_utilization'[inp_project_hours_adj]) + SUM('msr v_employee_utilization'[hr_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge",
                                    "expression": "[Utilization_hours_internal] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq",
                                    "expression": "SUM('msr v_employee_utilization'[acq_project_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge",
                                    "expression": "[Utilization_hours_acq] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training",
                                    "expression": "SUM('msr v_employee_utilization'[training_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge",
                                    "expression": "[Utilization_hours_training] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave",
                                    "expression": "SUM('msr v_employee_utilization'[vacation_hours]) + SUM('msr v_employee_utilization'[leave_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion",
                                    "expression": "DIVIDE([Utilization_hours_recorded], SUM('msr v_employee_utilization'[target_hours]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % PY",
                                    "expression": "CALCULATE([Utilization %_2], SAMEPERIODLASTYEAR('pub dim_date'[Date]))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted",
                                    "expression": "\n    VAR number_decimal = DIVIDE([Utilization_target_hours], 1000)\n    VAR number_whole = FIXED(number_decimal, 0)\nRETURN\n    number_whole & \"k h\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_formatted_2",
                                    "expression": "[Utilization_target_hours]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_vacation_leave_bridge_formatted",
                                    "expression": "[Utilization_hours_vacation_leave_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_hours_utilization_formatted",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_training_bridge_formatted",
                                    "expression": "[Utilization_hours_training_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_illness_bridge_formatted",
                                    "expression": "[Utilization_hours_illness_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_internal_bridge_formatted",
                                    "expression": "[Utilization_hours_internal_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_acq_bridge_formatted",
                                    "expression": "[Utilization_hours_acq_bridge]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_on_client_project_formatted",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-4)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "start_3_month",
                                    "expression": "EOMONTH(TODAY(),-4)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_3M_test",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n        MIN('pub dim_date'[Date]),\n        FILTER(\n            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month))\nRETURN\n    utilization",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_12M",
                                    "expression": "\n    VAR start_3_month = EOMONTH(TODAY(),-13)\n    VAR end_3_month = EOMONTH(TODAY(),-1)\n    VAR utilization = CALCULATE(\n                        DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]),\n                        FILTER(\n                            ALL('pub dim_date'), 'pub dim_date'[Date] > start_3_month && 'pub dim_date'[Date] <= end_3_month)\n                    )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % AVG_txt",
                                    "expression": "\"L12M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_12M], \"0%\") & \"  |  L3M AVG: \" & FORMAT('msr v_employee_utilization'[Utilization % AVG_3M], \"0%\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Customer",
                                    "expression": "[Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Internal_Acq_Sick",
                                    "expression": "([Utilization_hours_illness_bridge_formatted] + [Utilization_hours_internal_bridge_formatted] + [Utilization_hours_acq_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Vacation_Leave_Training",
                                    "expression": "([Utilization_hours_vacation_leave_bridge_formatted] + [Utilization_hours_training_bridge_formatted]) * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG",
                                    "expression": "AVERAGE('msr v_employee_utilization'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Target_Hours",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Timesheet_Missing_Hours",
                                    "expression": "[Timesheet_Target_Hours] - [Timesheet_Customer] - [Timesheet_Vacation_Leave_Training] - [Timesheet_Internal_Acq_Sick]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target for Table",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, ([Utilization Target AVG] - [Utilization %_2]) * -1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing",
                                    "expression": "[Utilization_target_hours] - [Utilization_hours_recorded]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing_bridge",
                                    "expression": "[Utilization_hours_missing] * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp",
                                    "expression": "IF(ISBLANK('msr v_employee_utilization'[Utilization %_2]), BLANK(), ROUND('msr v_employee_utilization'[Utilization Δ Target]*100, 0) & \" pp\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % LM",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[Month] = MONTH(TODAY())-1, 'pub dim_date'[Year] = YEAR(TODAY()))\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization % YTD",
                                    "expression": "\n    VAR utilization = CALCULATE(DIVIDE(\n\t                        [Utilization_hours_on_client_project],\n\t                        [Utilization_target_hours_utilization]\n                        ),\n                        'pub dim_date'[UpToCurrentMonth] = 1)\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'),'pub dim_date'[UpToCurrentMonth] = 1)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target LM",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, FILTER(ALL('pub dim_date'), 'pub dim_date'[Month] = MONTH(TODAY())-1 && 'pub dim_date'[Year] = YEAR(TODAY()))))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target YTD]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM",
                                    "expression": "ROUND('msr v_employee_utilization'[Utilization Δ Target LM]*100, 0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_reported",
                                    "expression": "Not available",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Missing Hours",
                                    "expression": "\n    VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR missing_hours = target_hours_utilization - hours_reported \nRETURN\n    missing_hours",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Reported Hours",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion Target Hours adj.",
                                    "expression": "[Utilization_target_hours_utilization]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target YTD old",
                                    "expression": "IF([Utilization Target AVG] = 0, 0, \n                                CALCULATE(([Utilization Target AVG] - [Utilization %_2]) * -1, 'pub dim_date'[UpToCurrentMonth] = 1))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted",
                                    "expression": "\"AVG Δ: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp YTD formatted_table",
                                    "expression": "\"AVG Δ year to date: \" & [Utilization Δ Target pp YTD] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp LM formatted_table",
                                    "expression": "\"AVG Δ last month: \" & [Utilization Δ Target pp LM] & \"pp\" ",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_days_utilization",
                                    "expression": "SUM('msr v_employee_utilization'[target_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_on_client_project",
                                    "expression": "SUM('msr v_employee_utilization'[productive_hours_utilization])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_vacation_leave_bridge",
                                    "expression": "[Utilization_hours_vacation_leave]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_training_bridge",
                                    "expression": "[Utilization_hours_training]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_illness_bridge",
                                    "expression": "[Utilization_hours_illness]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_internal_bridge",
                                    "expression": "[Utilization_hours_internal]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_acq_bridge",
                                    "expression": "[Utilization_hours_acq]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing_bridge",
                                    "expression": "[Utilization_hours_missing]/8 * -1",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Single Employee Selected",
                                    "expression": "\nvar emp = SELECTEDVALUE('rep v_hr_employee'[emp_id],\"multiple\")\nreturn\nif(emp = \"multiple\",0,1)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Special Time Model",
                                    "expression": "if([Flag Single Employee Selected] && [Flag Special Time Model],\"Values > 100% may be due to special time models\",\"\")",
                                    "isHidden": false
                                },
                                {
                                    "name": "Flag Special Time Model",
                                    "expression": "if(max('msr v_employee_utilization'[Utilization % Day]) > 1, 1,0)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Δ Target pp PY",
                                    "expression": "ROUND(CALCULATE('msr v_employee_utilization'[Utilization Δ Target pp], SAMEPERIODLASTYEAR('pub dim_date'[Date]))*100, 0)& \" pp\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Δ pp PY",
                                    "expression": "\nvar PY = 'msr v_employee_utilization'[Utilization % PY]\nvar CY = 'msr v_employee_utilization'[Utilization %_2]\n\nreturn\nIF(CY > 0 ,IF(PY > 0, \n    ROUND(('msr v_employee_utilization'[Utilization %_2] - 'msr v_employee_utilization'[Utilization % PY]) *100, 0) & \" pp\",\n    \"N/A\"), BLANK())",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_vacation_leave_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_vacation_leave_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_training_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_training_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_target_eur_utilization",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_target_days_utilization]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_illness_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_illness_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_internal_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_internal_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_acq_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_acq_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_missing_bridge",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_missing_bridge]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_eur_on_client_project",
                                    "expression": "SUMX('msr v_employee_utilization',[Utilization_days_on_client_project]*[daily_rate_eur])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_days_missing",
                                    "expression": "[Utilization_hours_missing]/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_missing %",
                                    "expression": "\n    VAR missing = DIVIDE(\n\t                        [Utilization_hours_missing],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(missing <= 0, 0, missing)",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness",
                                    "expression": "[Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness]",
                                    "isHidden": false
                                },
                                {
                                    "name": "utilization_hours_acq_internal_illness %",
                                    "expression": "\n    VAR utilization = DIVIDE(\n\t                        [utilization_hours_acq_internal_illness],\n\t                        [Utilization_target_hours_utilization]\n                        )\nRETURN\n    IF(utilization <= 0, 0, utilization)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Spacer",
                                    "expression": "REPT(\"l\", 15)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Completion_OLD",
                                    "expression": "\n    IF(ISBLANK(VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)), 0, (VAR hours_reported = [Utilization_hours_acq] + [Utilization_hours_internal] + [Utilization_hours_illness] + [Utilization_hours_on_client_project]\n    VAR target_hours_utilization = [Utilization_target_hours_utilization]\n    VAR completion_total = DIVIDE(hours_reported, target_hours_utilization) \nRETURN\n    IF(completion_total < 0, 0, completion_total)))",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization_hours_recorded",
                                    "expression": "[Utilization_hours_vacation_leave] + [Utilization_hours_training] + [Utilization_hours_illness] + [Utilization_hours_internal] + [Utilization_hours_acq] + [Utilization_hours_on_client_project]",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG_OLD",
                                    "expression": "AVERAGE('rep v_hr_employee'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Utilization Target AVG_NEW",
                                    "expression": "AVERAGE('msr v_employee_utilization'[utilization_target])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Tooltip_Timetheet_analysis",
                                    "expression": "\"based on target hours adjusted\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Tooltip_completion",
                                    "expression": "\"based on target hours\"",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_utilization_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix",
                            "columns": [
                                {
                                    "name": "key_date",
                                    "dataType": "DateTime",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "std_hours",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_code",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id_byd",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Kurz-Bezeichnung",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.JobGroup",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job.Jobcode_Excel",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name_short",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": true,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": true,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "rep v_hr_employee",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_hire_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ter_max_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobfunction",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cc_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "pa_emp_last_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "sex",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_cat",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_start_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "per_org",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_2_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fte",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_emp_id",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "supervisor_full_name",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approver_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "phone_mobile",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "name_prefix",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_display",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "nickname",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "last_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "first_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "full_name_ad",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_display_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_manager_level",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "accounting_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "work_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "office_location_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "gender",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "empl_class_descr",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "national_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "middle_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "maiden_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "modify_date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_first_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_description",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fax",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "toe_id_ps",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "legal_entity",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[country_code_iso3] & \"-\" & 'rep v_hr_employee'[jobcode_id]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED(utilization_budgets[utilization_target])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "fullname_joblevel4",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "platform_1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_joblevel4_mentor",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'rep v_hr_employee'[full_name] & \" - \" & 'rep v_hr_employee'[job_reporting_level4] & \" - \" & 'rep v_hr_employee'[mentor_full_name]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job_reporting_level4_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level1_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level2_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_reporting_level3_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_1_id.1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region.old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"rep v_hr_employee_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "pub dim_date",
                            "columns": [
                                {
                                    "name": "DateKey",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Date",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Day",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Weekday",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekDayName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "WeekOfYear",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Month",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "MonthName",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Year",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthnumber",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "FirstDayOfMonth",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "YearMonthShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "ISOWeekOfYearNameInCal",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & 'pub dim_date'[WeekOfYear]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "MonthNameShort",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "UpToCurrentMonth",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR current_month = MONTH(TODAY())\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year, \n                    IF('pub dim_date'[Date].[MonthNo] <= current_month, //temporary switched from <= to < only\n                        1,\n                        0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Last4Next4Weeks",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\n    VAR current_year = YEAR(TODAY())\n    VAR firstWeek = WEEKNUM(TODAY())-4\n    VAR lastWeek = WEEKNUM(TODAY())+3\n    VAR result = IF('pub dim_date'[Date].[Year] = current_year,\n                    IF('pub dim_date'[WeekOfYear] >= firstWeek, \n                        IF('pub dim_date'[WeekOfYear] <= lastWeek,\n                            1,\n                            0),0),0)\nRETURN\n    result",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_month",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(MONTH(TODAY()) = 'pub dim_date'[Date].[MonthNo], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Color_current_week",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF(WEEKNUM(TODAY()+1) = 'pub dim_date'[WeekOfYear], \"#008080\", \"#66B3B3\")",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "temp_CurrentWeek",
                                    "expression": "WEEKNUM(TODAY())",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_FirstWeek",
                                    "expression": "WEEKNUM(TODAY())-3",
                                    "isHidden": false
                                },
                                {
                                    "name": "temp_Lastweek",
                                    "expression": "WEEKNUM(TODAY())+4",
                                    "isHidden": false
                                },
                                {
                                    "name": "Column_width",
                                    "expression": "REPT(\"0\", 7)",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveMonthList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[MonthNameShort] ),\n        'pub dim_date'[MonthNameShort],\n        \", \"\n    )",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDay",
                                    "expression": "TODAY()",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentDayWeek",
                                    "expression": "[CurrentDay] & \" (\" & [CurrentWeek] & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "CurrentWeek",
                                    "expression": "CALCULATE(\n                FIRSTNONBLANK('pub dim_date'[Calendarweek], \"\"), \n                FILTER(ALL('pub dim_date'), 'pub dim_date'[Date] = TODAY()))",
                                    "isHidden": false
                                },
                                {
                                    "name": "ActiveWeekList",
                                    "expression": "\n    CONCATENATEX (\n        VALUES ('pub dim_date'[Calendarweek] ),\n        'pub dim_date'[Calendarweek],\n        \", \"\n    )",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    pub_dim_date = datahub{[Schema=\"pub\",Item=\"dim_date\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(pub_dim_date, each Date.IsInCurrentYear([Date]) or Date.IsInPreviousYear([Date])),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"Date\", \"Day\", \"Weekday\", \"WeekDayName\", \"WeekOfYear\", \"Month\", \"MonthName\", \"Year\", \"YearMonthnumber\", \"FirstDayOfMonth\", \"YearMonthShort\", \"ISOWeekOfYearNameInCal\"}),\n    #\"Inserted Text After Delimiter\" = Table.AddColumn(#\"Removed Other Columns\", \"MonthNameShort\", each Text.AfterDelimiter(Text.Proper([YearMonthShort]), \"/\"), type text)\nin\n    #\"Inserted Text After Delimiter\""
                                }
                            ]
                        },
                        {
                            "name": "Refresh_Timestamp",
                            "columns": [
                                {
                                    "name": "UTC timestamp",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Local timestamp with offset",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Last_refresh_local",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Calendarweek",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "\"CW-\" & WEEKNUM(Refresh_Timestamp[Last_refresh_local])",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    StandardOffset = #duration(0, 1, 0, 0),\n    DaylightSavingTimeOffset = #duration(0, 2, 0, 0),\n\n    // get start and end of daylight saving time\n    // this code implements the rules of EU counties\n    // if it doesn't fill your expectations, visit https://en.wikipedia.org/wiki/Daylight_saving_time_by_country and implement your own function\n    fnDaylightSavingTimePeriod = (\n        now as datetime\n    ) as record => \n        let\n            // the daylight saving time starts on the last Sunday of March at 1am UTC\n            LastDayOfMarch = #date(Date.Year(now), 3, 31),\n            StartOfDaylightSavingTime = Date.AddDays(LastDayOfMarch, -Date.DayOfWeek(LastDayOfMarch)) & #time(1, 0, 0),\n            // the daylight saving time ends on the last Sunday in October at 1am UTC\n            LastDayOfOctober = #date(Date.Year(now), 10, 31),\n            EndOfDaylightSavingTime = Date.AddDays(LastDayOfOctober, -Date.DayOfWeek(LastDayOfOctober)) & #time(1, 0, 0)\n        in\n            [From = StartOfDaylightSavingTime, To = EndOfDaylightSavingTime],\n\n    // get a timestamp in UTC (with offset 00:00 all year long)\n    UtcNow = DateTimeZone.UtcNow(),\n    // convert UTC datetime with offset to datetime\n    UtcNowWithoutZone = DateTimeZone.RemoveZone(UtcNow),\n\n    // get daylight saving time period\n    DaylightSavingTimePeriod = fnDaylightSavingTimePeriod(UtcNowWithoutZone),\n\n    // convert UTC time to the local time with respect to current offset\n    LocalTimeWithOffset = \n        if UtcNowWithoutZone >= DaylightSavingTimePeriod[From] and UtcNowWithoutZone <= DaylightSavingTimePeriod[To] then\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(DaylightSavingTimeOffset), \n                Duration.Minutes(DaylightSavingTimeOffset)\n            )\n        else\n            DateTimeZone.SwitchZone(\n                UtcNow, \n                Duration.Hours(StandardOffset), \n                Duration.Minutes(StandardOffset)\n            ),\n    \n    // current date time without offset\n    LocalTime = DateTimeZone.RemoveZone(LocalTimeWithOffset),\n\n    // result table\n    Result = #table(\n        type table\n        [\n            #\"UTC timestamp\" = datetime, \n            #\"UTC date\" = date,\n            #\"Local timestamp with offset\" = datetimezone,\n            #\"Local timestamp without offset\" = datetime\n        ], \n        {\n            {\n            UtcNowWithoutZone,\n            DateTime.Date(UtcNowWithoutZone),\n            LocalTimeWithOffset,\n            LocalTime\n            }\n        }\n    ),\n    #\"Inserted Date\" = Table.AddColumn(Result, \"Last_refresh_local\", each DateTime.Date([Local timestamp without offset]), type date),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Date\",{\"UTC date\", \"Local timestamp without offset\"})\nin\n    #\"Removed Columns\""
                                }
                            ]
                        },
                        {
                            "name": "msr v_employee_project_hours",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "calendar_day",
                                    "dataType": "DateTime",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_number",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "approval_status",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_manager",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_type",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "mentor_full_name_old",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "RELATED('rep v_hr_employee'[mentor_full_name])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "job.Im Scope",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "recorded_time",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "time_type_category",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_title",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF('msr v_employee_project_hours'[time_type_category] IN {\"Productive Time\", \"Training\"}, 'msr v_employee_project_hours'[project_number] & \" - \" & 'msr v_employee_project_hours'[project_name], 'msr v_employee_project_hours'[time_type_category])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "approver",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "IF('msr v_employee_project_hours'[time_type_category] IN {\"Productive Time\", \"Training\"}, 'msr v_employee_project_hours'[project_manager], 'msr v_employee_project_hours'[mentor_full_name])",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "project_time_type_combined",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "project_time_type_sort",
                                    "dataType": "Int64",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "daily_rate_eur",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "employee_date_key",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "'msr v_employee_project_hours'[emp_id] & \"-\" & 'msr v_employee_project_hours'[calendar_day]",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "mentor_full_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Hours_in_approval",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time])+0, 'msr v_employee_project_hours'[approval_status] IN {\"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_approved",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time]), 'msr v_employee_project_hours'[approval_status] IN {\"Approved\", \"Approval not Necessary\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_reported",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time]), 'msr v_employee_project_hours'[approval_status] IN {\"Approved\", \"Approval not Necessary\", \"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_in_approval_%",
                                    "expression": "DIVIDE([Hours_in_approval], [Hours_reported])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Hours_in_approval_CP",
                                    "expression": "CALCULATE([Hours_in_approval]+0, 'msr v_employee_project_hours'[project_type] IN {\"CP\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Sum_recorded_time_hours",
                                    "expression": "SUM('msr v_employee_project_hours'[recorded_time])",
                                    "isHidden": false
                                },
                                {
                                    "name": "Sum_recorded_time_days",
                                    "expression": "SUM('msr v_employee_project_hours'[recorded_time])/8",
                                    "isHidden": false
                                },
                                {
                                    "name": "Days_in_approval",
                                    "expression": "CALCULATE(SUM('msr v_employee_project_hours'[recorded_time])/8+0, 'msr v_employee_project_hours'[approval_status] IN {\"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Days_in_approval_CP",
                                    "expression": "CALCULATE([Days_in_approval]+0, 'msr v_employee_project_hours'[project_type] IN {\"CP\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Hours in Approval",
                                    "expression": "\"Hours currently in approval: \" & FORMAT([Hours_in_approval],\"0\") & \" (CP: \" & FORMAT([Hours_in_approval_CP],\"0\") & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Days in Approval",
                                    "expression": "\"Days currently in approval: \" & FORMAT([Days_in_approval],\"0\") & \" (CP: \" & FORMAT([Days_in_approval_CP],\"0\") & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Euros_in_approval",
                                    "expression": "CALCULATE(SUMX('msr v_employee_project_hours',[recorded_time]/8*[daily_rate_eur])+0, 'msr v_employee_project_hours'[approval_status] IN {\"In Approval\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Euros_in_approval_CP",
                                    "expression": "CALCULATE([Euros_in_approval]+0, 'msr v_employee_project_hours'[project_type] IN {\"CP\"})",
                                    "isHidden": false
                                },
                                {
                                    "name": "Text Euros in Approval",
                                    "expression": "\"Euros currently in approval: \" & SUBSTITUTE(FORMAT([Euros_in_approval], \"#,##,,.0M\"),\".\",\",\") & \" (CP: \" & SUBSTITUTE(FORMAT([Euros_in_approval_CP],\"#,##,,.0M\"),\".\",\",\") & \")\"",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic_in_approval",
                                    "expression": "SWITCH(\n    SELECTEDVALUE('D/H Slicer'[D/H]),\n    \"Days\", [Days_in_approval],\n    \"Hours\",[Hours_in_approval],\n    0\n)",
                                    "isHidden": false
                                },
                                {
                                    "name": "Dynamic_in_approval_CP",
                                    "expression": "SWITCH(\n    SELECTEDVALUE('D/H Slicer'[D/H]),\n    \"Days\", [Days_in_approval_CP],\n    \"Hours\",[Hours_in_approval_CP],\n    0\n)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = #\"msr v_employee_project_hours_T\",\n    Publish = Source\nin\n    Publish"
                                }
                            ]
                        },
                        {
                            "name": "Comparison_Table",
                            "columns": [
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Employee",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Target",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Utilization_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CALCULATE([Utilization % YTD], ALLEXCEPT(Comparison_Table, Comparison_Table[emp_id]))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Utilization_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CALCULATE([Utilization % LM], ALLEXCEPT(Comparison_Table, Comparison_Table[emp_id]))",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "(Comparison_Table[Target] - Comparison_Table[Utilization_YTD]) * -1",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "(Comparison_Table[Target] - Comparison_Table[Utilization_LM]) * -1",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_rounded_0.05_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CEILING(Comparison_Table[Delta_YTD], 0.05)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_rounded_0.05_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "CEILING(Comparison_Table[Delta_LM], 0.05)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_YTD",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "Comparison_Table[Delta_rounded_0.05_YTD]*100",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_LM",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "Comparison_Table[Delta_rounded_0.05_LM]*100",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_YTD_table",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "ROUND(Comparison_Table[Delta_YTD] * 100, 0)",
                                    "columnType": "Calculated"
                                },
                                {
                                    "name": "Delta_pp_LM_table",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "ROUND(Comparison_Table[Delta_LM] * 100, 0)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Info Button",
                                    "expression": "UNICHAR(128712)",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "SELECTCOLUMNS('rep v_hr_employee', \n                        \"emp_id\", 'rep v_hr_employee'[emp_id],\n                        \"Employee\", 'rep v_hr_employee'[full_name], \n                        \"Target\", 'rep v_hr_employee'[utilization_target])"
                                }
                            ]
                        },
                        {
                            "name": "utilization_budgets",
                            "columns": [
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "job_short",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "utilization_target",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "Country-Jobcode",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "utilization_budgets[country_code_iso3] & \"-\" & utilization_budgets[jobcode_id]",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/utilization_budgets.xlsx\"), null, true),\n    utilization_budgets_Table = Source{[Item=\"utilization_budgets\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(utilization_budgets_Table,{{\"country_code_iso3\", type text}, {\"jobcode_id\", type text}, {\"jobcode\", type text}, {\"job_short\", type text}, {\"utilization_target\", type number}})\nin\n    #\"Changed Type\""
                                }
                            ]
                        },
                        {
                            "name": "D/H Utilization Deepdive",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "expression": "SWITCH(\n    TRUE(),\n    CONTAINSSTRING('D/H Utilization Deepdive'[Fields], \"hours\"), \"Hours\",\"Days\"\n)",
                                    "columnType": "Calculated"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Target hours\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours]), 0),\n    (\"Target hours adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours_utilization]), 1),\n    (\"Target days\", NAMEOF('msr v_employee_utilization'[Utilization_target_days]), 0),\n    (\"Target days adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_days_utilization]), 1),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_hours_on_client_project]), 2),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_days_on_client_project]), 2)\n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Utilization Drillthrough",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Hours/Days Drillthrough Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "Hours/Days Drillthrough Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{ --And Time in Approval\n    (\"Hours\", NAMEOF('msr v_employee_project_hours'[Sum_recorded_time_hours]), 1,\"Hours\"),\n    (\"Days\", NAMEOF('msr v_employee_project_hours'[Sum_recorded_time_days]), 0,\"Days\")\n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Slicer",
                            "columns": [
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{(\"Days\"),(\"Hours\")}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Timesheet Analysis",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Timesheet Analysis Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Timesheet Analysis Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [
                                {
                                    "name": "Text Button Details Hours/Days",
                                    "expression": "\"Details \" & LOWER(SELECTEDVALUE('D/H Slicer'[D/H]))",
                                    "isHidden": false
                                }
                            ],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Target days\", NAMEOF('msr v_employee_utilization'[Utilization_target_days]), 0, \"Days\"),\n    (\"Vacation & leave\", NAMEOF('msr v_employee_utilization'[Utilization_days_vacation_leave_bridge]), 1, \"Days\"),\n    (\"Training\", NAMEOF('msr v_employee_utilization'[Utilization_days_training_bridge]), 2, \"Days\"),\n    (\"Target days adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_days_utilization]), 3, \"Days\"),\n    (\"Sickness\", NAMEOF('msr v_employee_utilization'[Utilization_days_illness_bridge]), 4, \"Days\"),\n    (\"Internal\", NAMEOF('msr v_employee_utilization'[Utilization_days_internal_bridge]), 5, \"Days\"),\n    (\"Acq\", NAMEOF('msr v_employee_utilization'[Utilization_days_acq_bridge]), 6, \"Days\"),\n    (\"Missing days\", NAMEOF('msr v_employee_utilization'[Utilization_days_missing_bridge]), 7, \"Days\"),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_days_on_client_project]), 8, \"Days\"),\n\n    (\"Target hours\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours]), 0, \"Hours\"),\n    (\"Vacation & leave\", NAMEOF('msr v_employee_utilization'[Utilization_hours_vacation_leave_bridge]), 1, \"Hours\"),\n    (\"Training\", NAMEOF('msr v_employee_utilization'[Utilization_hours_training_bridge]), 2, \"Hours\"),\n    (\"Target hours adj.\", NAMEOF('msr v_employee_utilization'[Utilization_target_hours_utilization]), 3, \"Hours\"),\n    (\"Sickness\", NAMEOF('msr v_employee_utilization'[Utilization_hours_illness_bridge]), 4, \"Hours\"),\n    (\"Internal\", NAMEOF('msr v_employee_utilization'[Utilization_hours_internal_bridge]), 5, \"Hours\"),\n    (\"Acq\", NAMEOF('msr v_employee_utilization'[Utilization_hours_acq_bridge]), 6, \"Hours\"),\n    (\"Missing hours\", NAMEOF('msr v_employee_utilization'[Utilization_hours_missing_bridge]), 7, \"Hours\"),\n    (\"Client projects\", NAMEOF('msr v_employee_utilization'[Utilization_hours_on_client_project]), 8, \"Hours\")   \n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Approval Textbox",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Approval Textbox Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Approval Textbox Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Text days in approval\", NAMEOF('msr v_employee_project_hours'[Text Days in Approval]), 0, \"Days\"),\n    (\"Text dours in approval\", NAMEOF('msr v_employee_project_hours'[Text Hours in Approval]), 1, \"Hours\")\n}"
                                }
                            ]
                        },
                        {
                            "name": "D/H Completion Deepdive",
                            "columns": [
                                {
                                    "name": "Name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Completion Deepdive Fields",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H Completion Deepdive Order",
                                    "dataType": "String",
                                    "isHidden": true,
                                    "columnType": "CalculatedTableColumn"
                                },
                                {
                                    "name": "D/H",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "CalculatedTableColumn"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "{\n    (\"Days missing\", NAMEOF('msr v_employee_utilization'[Utilization_days_missing]), 0, \"Days\"),\n    (\"Hours missing\", NAMEOF('msr v_employee_utilization'[Utilization_hours_missing]), 1, \"Hours\")\n}"
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform",
                            "columns": [
                                {
                                    "name": "platform_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform = Source{[Schema=\"rep\",Item=\"v_ll_head_platform\"]}[Data]\nin\n    rep_v_ll_head_platform"
                                }
                            ]
                        },
                        {
                            "name": "rep v_ll_head_platform_DACH",
                            "columns": [
                                {
                                    "name": "cost_center_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "cost_center",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "platform_DACH",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_platform_DACH = Source{[Schema=\"rep\",Item=\"v_ll_head_platform_DACH\"]}[Data]\nin\n    rep_v_ll_head_platform_DACH"
                                }
                            ]
                        },
                        {
                            "name": "rep v_II_head_region_country",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company_name",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "emp_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "email",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Table.Combine({#\"rep v_ll_head_region\", #\"rep v_ll_head_country\"})\nin\n    Source"
                                }
                            ]
                        },
                        {
                            "name": "pub v_ll_company_to_region",
                            "columns": [
                                {
                                    "name": "company_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "org_unit_id",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "company",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country_code_iso3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "country",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level2",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level3",
                                    "dataType": "String",
                                    "isHidden": false,
                                    "columnType": "Data"
                                },
                                {
                                    "name": "region_reporting_level1_sort",
                                    "dataType": "Double",
                                    "isHidden": false,
                                    "columnType": "Data"
                                }
                            ],
                            "measures": [],
                            "isHidden": false,
                            "source": [
                                {
                                    "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    pub_v_ll_company_to_region = Source{[Schema=\"pub\",Item=\"v_ll_company_to_region\"]}[Data],\n    #\"Replaced Value\" = Table.ReplaceValue(pub_v_ll_company_to_region,\"polariXpartner\",\"PXPartner\",Replacer.ReplaceText,{\"region_reporting_level3\"}),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Replaced Value\", \"region_reporting_level1_sort\", each if [region_reporting_level1] = \"EMEA\" then 1 else if [region_reporting_level1] = \"Non-operational companies\" then 6 else if [region_reporting_level1] = \"Holding\" then 5 else if [region_reporting_level1] = \"Other RB companies\" then 4 else if [region_reporting_level1] = \"Americas\" then 2 else if [region_reporting_level1] = \"Asia\" then 3 else if [region_reporting_level1] = \"RUS\" then 7 else null, type number),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Added Conditional Column\", each ([region_reporting_level1] <> null and [region_reporting_level1] <> \"Non-operational companies\" and [region_reporting_level1] <> \"RUS\"))\nin\n    #\"Filtered Rows\""
                                }
                            ]
                        }
                    ],
                    "expressions": [
                        {
                            "name": "Jobcodes",
                            "expression": "let\n    Source = Jobcodes_T,\n    Publish = Source\nin\n    Publish"
                        },
                        {
                            "name": "Jobcodes_Excel",
                            "expression": "let\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"Vc45DoAwDETRu1BTOJi1xCZFIkVYcYkQ978FdEzKp5niX1eXT3mIgu3c3T1waBl+BrKagIsVOIfZyq+BXHHcxGEcJVYgN2SSDOOG4kkxkGfdse9IFfvUC/ZpI4+Y55jHbqA1f9v9Ag==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Jobcode_Excel = _t]),\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Jobcode_Excel\", type text}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Jobcode_Excel\", Splitter.SplitTextByDelimiter(\"_\", QuoteStyle.Csv), {\"Jobcode_Excel.1\", \"Jobcode_Excel.2\"}),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Jobcode_Excel.1\", type text}, {\"Jobcode_Excel.2\", type text}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type1\",{\"Jobcode_Excel.1\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Jobcode_Excel.2\", \"Jobcode_Excel\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_utilization_target",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix\",\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"key_date\", \"emp_id\", \"job_code\", \"country_code_iso3\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"job.Kurz-Bezeichnung\", \"job_short\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns\",{\"key_date\", \"emp_id\", \"country_code_iso3\", \"job_code\", \"job_short\", \"job.Bezeichnung\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(Jobcodes_Table,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}, {\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"Jobcode\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"Utilization Target Rate\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"Jobcode\", \"jobcode_id\"}, {\"Kurz-Bezeichnung\", \"job_short\"}, {\"Bezeichnung\", \"jobcode\"}, {\"Utilization Target Rate\", \"utilization_target\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach_ger",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_dach\",\n    #\"Added Custom\" = Table.AddColumn(Source, \"country_code_iso3\", each \"GER\", type text),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Reordered Columns\",\"GER\",\"DEU\",Replacer.ReplaceText,{\"country_code_iso3\"})\nin\n    #\"Replaced Value\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach_aut",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_dach\",\n    #\"Added Custom\" = Table.AddColumn(Source, \"country_code_iso3\", each \"AUT\", type text),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "xlsx utilization_targets_dach_che",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_dach\",\n    #\"Added Custom\" = Table.AddColumn(Source, \"country_code_iso3\", each \"CHE\", type text),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Added Custom\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"})\nin\n    #\"Reordered Columns\""
                        },
                        {
                            "name": "msr v_fc_project_data",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_fc_project_data = datahub{[Schema=\"msr\",Item=\"v_fc_project_data\"]}[Data]\nin\n    msr_v_fc_project_data"
                        },
                        {
                            "name": "sec ll_job",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    sec_ll_job = Source{[Schema=\"sec\",Item=\"ll_job\"]}[Data],\n    #\"Expanded rep.ll_job_reporting_level1\" = Table.ExpandRecordColumn(sec_ll_job, \"rep.ll_job_reporting_level1\", {\"level1_sort_id\"}, {\"job_reporting_level1_sort\"}),\n    #\"Expanded rep.ll_job_reporting_level2\" = Table.ExpandRecordColumn(#\"Expanded rep.ll_job_reporting_level1\", \"rep.ll_job_reporting_level2\", {\"level2_sort_id\"}, {\"job_reporting_level2_sort\"}),\n    #\"Expanded rep.ll_job_reporting_level3\" = Table.ExpandRecordColumn(#\"Expanded rep.ll_job_reporting_level2\", \"rep.ll_job_reporting_level3\", {\"level3_sort_id\"}, {\"job_reporting_level3_sort\"}),\n    #\"Expanded rep.ll_job_reporting_level4\" = Table.ExpandRecordColumn(#\"Expanded rep.ll_job_reporting_level3\", \"rep.ll_job_reporting_level4\", {\"level4_sort_id\"}, {\"job_reporting_level4_sort\"})\nin\n    #\"Expanded rep.ll_job_reporting_level4\""
                        },
                        {
                            "name": "msr v_byd_daily_rates",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_byd_daily_rates = datahub{[Schema=\"msr\",Item=\"v_byd_daily_rates\"]}[Data]\nin\n    msr_v_byd_daily_rates"
                        },
                        {
                            "name": "msr v_employee_utilization_T",
                            "expression": "let\n    Source = #\"msr v_employee_utilization_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_hr_employee_job_matrix\", {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\", \"utilization_target\", \"platform_1_name\", \"platform_1_name_short\", \"platform_1_sort\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\", \"full_name\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}, {\"toe_description\", \"cost_center_id\", \"company_id_byd\", \"office\", \"platform_1_id\", \"country_code_iso3\", \"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"daily_rate_eur\", \"utilization_target\", \"platform_1_name\", \"platform_1_name_short\", \"platform_1_sort\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\", \"full_name\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each ([job.Im Scope] = \"x\"))\nin\n    #\"Filtered Rows1\""
                        },
                        {
                            "name": "msr v_employee_project_hours_T",
                            "expression": "let\n    Source = #\"msr v_employee_project_hours_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([calendar_day]) or Date.IsInPreviousYear([calendar_day])),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows\", {\"calendar_day\", \"emp_id\"}, #\"msr v_hr_employee_job_matrix\", {\"key_date\", \"emp_id\"}, \"msr v_hr_employee_job_matrix\", JoinKind.LeftOuter),\n    #\"Expanded msr v_hr_employee_job_matrix\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_hr_employee_job_matrix\", {\"job.Im Scope\", \"daily_rate_eur\", \"mentor_full_name\"}, {\"job.Im Scope\", \"daily_rate_eur\", \"mentor_full_name\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded msr v_hr_employee_job_matrix\", each [job.Im Scope] = \"x\"),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows1\", {\"project_number\"}, #\"msr v_fc_project_data\", {\"project_number\"}, \"msr v_fc_project_data\", JoinKind.LeftOuter),\n    #\"Expanded msr v_fc_project_data\" = Table.ExpandTableColumn(#\"Merged Queries\", \"msr v_fc_project_data\", {\"project_name\", \"project_manager\", \"project_type\"}, {\"project_name\", \"project_manager\", \"project_type\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded msr v_fc_project_data\",\"CPA\",\"CP\",Replacer.ReplaceText,{\"project_type\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"INT\",\"INP\",Replacer.ReplaceText,{\"project_type\"}),\n    #\"Added Custom\" = Table.AddColumn(#\"Replaced Value1\", \"project_time_type_combined\", each if List.Contains({\"Vacation\",\"Illness\",\"Leave\"},[time_type_category]) then [time_type_category] else if [project_type] = null then \"Other\" else [project_type], type text),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Added Custom\", \"project_time_type_sort\", each if [project_time_type_combined] = \"CP\" then 1 else if [project_time_type_combined] = \"ACQ\" then 2 else if [project_time_type_combined] = \"INP\" then 3 else if [project_time_type_combined] = \"TRN\" then 4 else if [project_time_type_combined] = \"HR\" then 5 else if [project_time_type_combined] = \"Vacation\" then 6 else if [project_time_type_combined] = \"Leave\" then 7 else if [project_time_type_combined] = \"Illness\" then 8 else if [project_time_type_combined] = \"MKT\" then 9 else if [project_time_type_combined] = \"Other\" then 10 else 99, Int64.Type)\nin\n    #\"Added Conditional Column\""
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_T",
                            "expression": "let\n    Source = #\"msr v_hr_employee_job_matrix_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each Date.IsInCurrentYear([key_date]) or Date.IsInPreviousYear([key_date])),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Filtered Rows\", {\"job_code\"}, Jobcodes, {\"Jobcode\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Im Scope\", \"Bezeichnung\", \"Kurz-Bezeichnung\", \"JobGroup\", \"Jobcode_Excel\"}, {\"job.Im Scope\", \"job.Bezeichnung\", \"job.Kurz-Bezeichnung\", \"job.JobGroup\", \"job.Jobcode_Excel\"}),\n    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded Jobcodes\", each ([job.Im Scope] = \"x\")),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Filtered Rows1\", {\"job_code\", \"company_id_byd\"}, #\"msr v_byd_daily_rates\", {\"jobcode_id\", \"company_id\"}, \"msr v_byd_daily_rates\", JoinKind.LeftOuter),\n    #\"Expanded msr v_byd_daily_rates\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"msr v_byd_daily_rates\", {\"amount_eur\"}, {\"daily_rate_eur\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded msr v_byd_daily_rates\", {\"job_code\", \"country_code_iso3\"}, utilization_budgets, {\"jobcode_id\", \"country_code_iso3\"}, \"utilization_budgets\", JoinKind.LeftOuter),\n    #\"Expanded utilization_budgets\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"utilization_budgets\", {\"utilization_target\"}, {\"utilization_target\"}),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Expanded utilization_budgets\",\"9900\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Replaced Value\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_name\", \"platform_1_name_short\", \"platform_1_sort\"}, {\"platform_1_name\", \"platform_1_name_short\", \"platform_1_sort\"}),\n    #\"Merged Queries4\" = Table.NestedJoin(#\"Expanded platform_sort\", {\"company_id_byd\"}, #\"pub v_ll_company_to_region\", {\"org_unit_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries4\", \"pub v_ll_company_to_region\", {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}, {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}),\n    #\"Merged Queries5\" = Table.NestedJoin(#\"Expanded pub v_ll_company_to_region\", {\"emp_id\"}, #\"rep v_hr_employee\", {\"emp_id\"}, \"rep v_hr_employee\", JoinKind.LeftOuter),\n    #\"Expanded rep v_hr_employee\" = Table.ExpandTableColumn(#\"Merged Queries5\", \"rep v_hr_employee\", {\"full_name\"}, {\"full_name\"}),\n    #\"Merged Queries6\" = Table.NestedJoin(#\"Expanded rep v_hr_employee\", {\"job_code\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries6\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"job_reporting_level1_sort\", \"job_reporting_level2_sort\", \"job_reporting_level3_sort\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries7\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"mentor_id\"}, #\"rep v_hr_employee\", {\"emp_id\"}, \"rep v_hr_employee\", JoinKind.LeftOuter),\n    #\"Expanded rep v_hr_employee1\" = Table.ExpandTableColumn(#\"Merged Queries7\", \"rep v_hr_employee\", {\"full_name\"}, {\"mentor_full_name\"})\nin\n    #\"Expanded rep v_hr_employee1\""
                        },
                        {
                            "name": "rep v_hr_employee_T",
                            "expression": "let\n    Source = #\"rep v_hr_employee_E\",\n    #\"Filtered Rows\" = Table.SelectRows(Source, each [ter_max_date] > #date(2022, 12, 31)),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows\",\"Junior Consultant 1##\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Junior Consultant 1#\",\"Junior Consultant 1\",Replacer.ReplaceText,{\"jobcode\"}),\n    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Group Function RB N3XT\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"}),\n    #\"Merged Queries1\" = Table.NestedJoin(#\"Replaced Value2\", {\"jobcode_id\"}, #\"sec ll_job\", {\"jobcode_id\"}, \"sec ll_job\", JoinKind.LeftOuter),\n    #\"Expanded sec ll_job\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"sec ll_job\", {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}, {\"job_reporting_level1\", \"job_reporting_level1_sort\", \"job_reporting_level2\", \"job_reporting_level2_sort\", \"job_reporting_level3\", \"job_reporting_level3_sort\", \"job_reporting_level4\", \"job_reporting_level4_sort\"}),\n    #\"Merged Queries2\" = Table.NestedJoin(#\"Expanded sec ll_job\", {\"company_id\"}, #\"pub v_ll_company_to_region\", {\"company_id\"}, \"pub v_ll_company_to_region\", JoinKind.LeftOuter),\n    #\"Expanded pub v_ll_company_to_region\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"pub v_ll_company_to_region\", {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}, {\"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\", \"region_reporting_level1_sort\"}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Expanded pub v_ll_company_to_region\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Merged Queries3\" = Table.NestedJoin(#\"Reordered Columns\", {\"platform_1_id\"}, platform_sort, {\"platform_1_id\"}, \"platform_sort\", JoinKind.LeftOuter),\n    #\"Expanded platform_sort\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"platform_sort\", {\"platform_1_id\", \"platform_1_sort\"}, {\"platform_1_id.1\", \"platform_1_sort\"}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Expanded platform_sort\",{\"emp_id\", \"last_name\", \"first_name\", \"full_name\", \"last_hire_date\", \"ter_max_date\", \"jobcode_id\", \"jobcode\", \"jobfunction_id\", \"jobfunction\", \"work_location\", \"company_id\", \"company\", \"cc_id\", \"cc_name\", \"mentor_emp_id\", \"mentor_last_name\", \"pa_emp_id\", \"pa_emp_last_name\", \"emp_status\", \"sex\", \"accounting_cat\", \"email\", \"country_code\", \"job_start_date\", \"country\", \"per_org\", \"cost_center_id\", \"platform_1_id\", \"platform_1_name\", \"platform_1_sort\", \"platform_2_id\", \"platform_2_name\", \"fte\", \"platform_DACH_name\", \"cost_center\", \"phone\", \"supervisor_emp_id\", \"supervisor_full_name\", \"approver_emp_id\", \"approver_full_name\", \"phone_mobile\", \"name_prefix\", \"office\", \"title\", \"org_unit_id\", \"full_name_display\", \"nickname\", \"last_name_ad\", \"first_name_ad\", \"full_name_ad\", \"job_display_name\", \"jobcode_manager_level\", \"accounting_category\", \"country_code_iso2\", \"country_code_iso3\", \"work_location_name\", \"office_location_name\", \"gender\", \"empl_class_descr\", \"toe_id\", \"national_name\", \"middle_name\", \"maiden_name\", \"modify_date\", \"mentor_first_name\", \"job_category\", \"toe_description\", \"mentor_full_name\", \"fax\", \"region\", \"toe_id_ps\", \"legal_entity\", \"job_reporting_level1\", \"job_reporting_level2\", \"job_reporting_level3\", \"job_reporting_level4\", \"region_reporting_level1\", \"region_reporting_level2\", \"region_reporting_level3\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns1\",{{\"region\", \"region.old\"}}),\n    #\"Cleaned Text\" = Table.TransformColumns(#\"Renamed Columns\",{{\"job_reporting_level2\", Text.Clean, type text}}),\n    #\"Trimmed Text\" = Table.TransformColumns(#\"Cleaned Text\",{{\"job_reporting_level2\", Text.Trim, type text}}),\n    #\"Replaced Value5\" = Table.ReplaceValue(#\"Trimmed Text\",null,9,Replacer.ReplaceValue,{\"platform_1_sort\"}),\n    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value5\",\"9720\",\"9000\",Replacer.ReplaceText,{\"platform_1_id\"}),\n    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Group Function F&C\",\"General\",Replacer.ReplaceText,{\"platform_1_name\"})\nin\n    #\"Replaced Value4\""
                        },
                        {
                            "name": "Jobcodes_T",
                            "expression": "let\n    Source = Jobcodes_E,\n    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Im Scope\", type text}, {\"Jobcode\", type text}, {\"Bezeichnung\", type text}, {\"Kurz-Bezeichnung\", type text}, {\"JobGroup\", type text}}),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([Im Scope] = \"x\")),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"Utilization Target Rate\", type number}, {\"Manual\", type text}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type1\", {\"Jobcode\"}, Jobcodes_Excel, {\"Jobcode_Excel\"}, \"Jobcodes_Excel\", JoinKind.FullOuter),\n    #\"Expanded Jobcodes_Excel\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes_Excel\", {\"Jobcode_Excel\"}, {\"Jobcode_Excel\"})\nin\n    #\"Expanded Jobcodes_Excel\""
                        },
                        {
                            "name": "xlsx utilization_targets_T",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_E\",\n    #\"Promoted Headers\" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Column1\", type any}, {\"2023 Utilization & Capture rate Budget\", type text}, {\"Column3\", type any}, {\"Column4\", type any}, {\"Column5\", type any}, {\"Column6\", type any}, {\"Column7\", type any}, {\"Column8\", type any}, {\"Column9\", type any}, {\"Column10\", type any}, {\"Column11\", type any}, {\"Column12\", type any}, {\"Column13\", type any}, {\"Column14\", type any}, {\"Column15\", type any}, {\"Column16\", type any}, {\"Column17\", type any}, {\"Column18\", type any}, {\"Column19\", type any}, {\"Column20\", type any}, {\"Column21\", type any}, {\"Column22\", type any}, {\"Column23\", type any}, {\"Column24\", type any}, {\"Column25\", type any}, {\"Column26\", type any}, {\"Column27\", type any}, {\"Column28\", type any}, {\"Column29\", type any}, {\"Column30\", type any}, {\"Column31\", type any}, {\"Column32\", type any}, {\"Column33\", type any}, {\"Column34\", type any}, {\"Column35\", type any}, {\"Column36\", type any}, {\"Column37\", type any}, {\"Column38\", type any}, {\"Column39\", type any}, {\"Column40\", type any}, {\"Column41\", type any}, {\"Column42\", type any}, {\"Column43\", type any}, {\"Column44\", type any}, {\"Column45\", type any}, {\"Column46\", type any}, {\"Column47\", type any}, {\"Column48\", type any}, {\"Column49\", type any}, {\"Column50\", type any}, {\"Column51\", type any}, {\"Column52\", type any}, {\"Column53\", type any}, {\"Column54\", type any}, {\"Column55\", type any}, {\"Column56\", type any}, {\"Column57\", type any}, {\"Column58\", type any}, {\"Column59\", type any}, {\"Column60\", type any}, {\"Column61\", type any}, {\"Column62\", Int64.Type}, {\"Column63\", type any}}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Column1\"}),\n    #\"Removed Top Rows\" = Table.Skip(#\"Removed Columns\",5),\n    #\"Kept First Rows\" = Table.FirstN(#\"Removed Top Rows\",16),\n    #\"Promoted Headers1\" = Table.PromoteHeaders(#\"Kept First Rows\", [PromoteAllScalars=true]),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Promoted Headers1\",{{\"Column1\", type text}, {\"BEL\", type number}, {\"ME\", type number}, {\"QAT\", type number}, {\"BHR/KSA/UAE\", type number}, {\"BHR\", type number}, {\"KSA\", type number}, {\"UAE\", type number}, {\"CIS\", type number}, {\"RUS\", Int64.Type}, {\"UKR\", type number}, {\"DACH\", type number}, {\"GER\", type number}, {\"AUT\", type number}, {\"CHE\", type number}, {\"OLD CHE\", Int64.Type}, {\"ESP\", type number}, {\"FRA\", type number}, {\"HUN\", type number}, {\"ITA\", type number}, {\"MOR\", type number}, {\"NLD\", type number}, {\"NOR\", type number}, {\"PRT\", type number}, {\"ROU\", type number}, {\"UK\", type number}, {\"CEE\", type number}, {\"CZE\", type number}, {\"CRO\", type number}, {\"POL\", type number}, {\"EMEA\", type number}, {\"BRA\", type number}, {\"CAN\", type number}, {\"USA\", type number}, {\"MEX\", type any}, {\"Americas\", type number}, {\"CHN\", type number}, {\"CHN_1\", type number}, {\"HKG\", type number}, {\"IND\", type number}, {\"JPN\", type number}, {\"KOR\", type number}, {\"SEA\", type number}, {\"IDN\", type number}, {\"MMR\", Int64.Type}, {\"MYS\", type number}, {\"SGP\", type number}, {\"THA\", type number}, {\"VNM\", type number}, {\"Asia\", type number}, {\"Polarix\", type number}, {\"PX Partner\", type any}, {\"PX Engineers\", type any}, {\"PX America\", type any}, {\"TMG\", type any}, {\"Placeholder\", type any}, {\"Other RB companies\", type any}, {\"Subtotal\", type number}, {\"HOL\", type number}, {\"Total\", Int64.Type}, {\"Column61\", Int64.Type}, {\"Column62\", type any}}),\n    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type1\", \"Column1\", Splitter.SplitTextByEachDelimiter({\" \"}, QuoteStyle.Csv, false), {\"Column1.1\", \"Column1.2\"}),\n    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Column1.1\", type text}, {\"Column1.2\", type text}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Changed Type2\",{\"Column1.2\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns1\",{{\"Column1.1\", \"job_short\"}}),\n    #\"Removed Other Columns\" = Table.SelectColumns(#\"Renamed Columns\",{\"job_short\", \"BEL\", \"QAT\", \"BHR\", \"KSA\", \"UAE\", \"CIS\", \"RUS\", \"UKR\", \"ESP\", \"FRA\", \"HUN\", \"ITA\", \"MOR\", \"NLD\", \"NOR\", \"PRT\", \"ROU\", \"UK\", \"CEE\", \"CZE\", \"CRO\", \"POL\", \"BRA\", \"CAN\", \"USA\", \"MEX\", \"CHN_1\", \"HKG\", \"IND\", \"JPN\", \"KOR\", \"IDN\", \"MMR\", \"MYS\", \"SGP\", \"THA\", \"VNM\", \"Polarix\"}),\n    #\"Renamed Columns4\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"CHN_1\", \"CHN\"}}),\n    #\"Replace Null with 0\" = Table.TransformColumns(#\"Renamed Columns4\",{},(x) => Replacer.ReplaceValue(x,null,0)),\n    #\"Unpivoted Other Columns\" = Table.UnpivotOtherColumns(#\"Replace Null with 0\", {\"job_short\"}, \"Attribute\", \"Value\"),\n    #\"Replace 0 with Null\" = Table.TransformColumns(#\"Unpivoted Other Columns\",{},(x) => Replacer.ReplaceValue(x,0,null)),\n    #\"Changed Type4\" = Table.TransformColumnTypes(#\"Replace 0 with Null\",{{\"job_short\", type text}, {\"Attribute\", type text}, {\"Value\", type number}}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type4\",{{\"Attribute\", \"country_code_iso3\"}, {\"Value\", \"utilization_target\"}}),\n    #\"Changed Type3\" = Table.TransformColumnTypes(#\"Renamed Columns1\",{{\"utilization_target\", type number}}),\n    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type3\", {\"job_short\"}, Jobcodes, {\"Kurz-Bezeichnung\"}, \"Jobcodes\", JoinKind.LeftOuter),\n    #\"Expanded Jobcodes\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Jobcodes\", {\"Jobcode\", \"Bezeichnung\"}, {\"Jobcode\", \"Bezeichnung\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded Jobcodes\",{{\"Bezeichnung\", \"jobcode\"}}),\n    #\"Reordered Columns\" = Table.ReorderColumns(#\"Renamed Columns2\",{\"country_code_iso3\", \"jobcode\", \"job_short\", \"utilization_target\"}),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Reordered Columns\",{{\"Jobcode\", \"jobcode_id\"}}),\n    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Renamed Columns3\",{\"country_code_iso3\", \"jobcode_id\", \"jobcode\", \"job_short\", \"utilization_target\"}),\n    #\"Appended Query\" = Table.Combine({#\"Reordered Columns1\", #\"xlsx utilization_targets_dach_ger\"}),\n    #\"Appended Query1\" = Table.Combine({#\"Appended Query\", #\"xlsx utilization_targets_dach_aut\"}),\n    #\"Appended Query2\" = Table.Combine({#\"Appended Query1\", #\"xlsx utilization_targets_dach_che\"})\nin\n    #\"Appended Query2\""
                        },
                        {
                            "name": "msr v_employee_utilization_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_utilization = datahub{[Schema=\"msr\",Item=\"v_employee_utilization\"]}[Data]\nin\n    msr_v_employee_utilization"
                        },
                        {
                            "name": "msr v_employee_project_hours_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_employee_project_hours = datahub{[Schema=\"msr\",Item=\"v_employee_project_hours\"]}[Data]\nin\n    msr_v_employee_project_hours"
                        },
                        {
                            "name": "msr v_hr_employee_job_matrix_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    msr_v_hr_employee_job_matrix = datahub{[Schema=\"msr\",Item=\"v_hr_employee_job_matrix\"]}[Data]\nin\n    msr_v_hr_employee_job_matrix"
                        },
                        {
                            "name": "rep v_hr_employee_E",
                            "expression": "let\n    Source = Sql.Databases(\"muc-mssql-2\"),\n    datahub = Source{[Name=\"datahub\"]}[Data],\n    rep_v_hr_employee = datahub{[Schema=\"rep\",Item=\"v_hr_employee\"]}[Data]\nin\n    rep_v_hr_employee"
                        },
                        {
                            "name": "Jobcodes_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx\"), null, true),\n    Jobcodes_Table = Source{[Item=\"Jobcodes\",Kind=\"Table\"]}[Data]\nin\n    Jobcodes_Table"
                        },
                        {
                            "name": "xlsx utilization_targets_E",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/2023_Budget_Utilization_Capture%20rate.xlsx\"), null, true),\n    #\"Utilization & Cap. Rate Bdg23_Sheet\" = Source{[Item=\"Utilization & Cap. Rate Bdg23\",Kind=\"Sheet\"]}[Data]\nin\n    #\"Utilization & Cap. Rate Bdg23_Sheet\""
                        },
                        {
                            "name": "sec ll_job (2)",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Name] = \"rep.ll_job_reporting_level1\" or [Name] = \"rep.ll_job_reporting_level2\" or [Name] = \"rep.ll_job_reporting_level3\" or [Name] = \"rep.ll_job_reporting_level4\")),\n    rep_ll_job_reporting_level1 = #\"Filtered Rows\"{[Schema=\"rep\",Item=\"ll_job_reporting_level1\"]}[Data],\n    Consulting = rep_ll_job_reporting_level1{[job_reporting_level1=\"Consulting\"]}[sec.ll_job]\nin\n    Consulting"
                        },
                        {
                            "name": "rep v_ll_head_region",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_region = Source{[Schema=\"rep\",Item=\"v_ll_head_region\"]}[Data]\nin\n    rep_v_ll_head_region"
                        },
                        {
                            "name": "rep v_ll_head_country",
                            "expression": "let\n    Source = Sql.Database(\"muc-mssql-2\", \"datahub\"),\n    rep_v_ll_head_country = Source{[Schema=\"rep\",Item=\"v_ll_head_country\"]}[Data],\n    #\"Renamed Columns\" = Table.RenameColumns(rep_v_ll_head_country,{{\"emp_id_head\", \"emp_id\"}, {\"email_head\", \"email\"}})\nin\n    #\"Renamed Columns\""
                        },
                        {
                            "name": "platform_sort",
                            "expression": "let\n    Source = Excel.Workbook(Web.Contents(\"https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx\"), null, true),\n    platform_sort_Table = Source{[Item=\"platform_sort\",Kind=\"Table\"]}[Data],\n    #\"Changed Type\" = Table.TransformColumnTypes(platform_sort_Table,{{\"platform_1_name\", type text}, {\"platform_1_id\", type text}, {\"platform_1_sort\", Int64.Type}, {\"platform_1_name_short\", type text}})\nin\n    #\"Changed Type\""
                        },
                        {
                            "name": "xlsx utilization_targets",
                            "expression": "let\n    Source = #\"xlsx utilization_targets_T\",\n    Publish = Source\nin\n    Publish"
                        }
                    ],
                    "roles": [
                        {
                            "name": "Admin",
                            "modelPermission": "Read",
                            "members": [
                                {
                                    "memberName": "lion.barone@rolandberger.com",
                                    "memberId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                }
                            ]
                        },
                        {
                            "name": "RLS restricted",
                            "modelPermission": "Read",
                            "members": [
                                {
                                    "memberName": "Felix.Hubmann@rolandberger.com",
                                    "memberId": "fd80f83f-5df8-4843-bc7e-114359e41a51",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Fang.Qian@rolandberger.com",
                                    "memberId": "8cc5db76-3bc7-4569-aea9-40195285c32f",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "gabriel.teoh@rolandberger.com",
                                    "memberId": "f29019f7-2354-42e0-b160-c18e3165faaa",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "peiling.ng@rolandberger.com",
                                    "memberId": "8de2dd2e-86c0-45ca-b58f-46ae475e79e7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sudhir.kumar@rolandberger.com",
                                    "memberId": "44303d72-70ec-4588-a587-482a675301fa",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "gabriele.hayek@rolandberger.com",
                                    "memberId": "7276f27d-4b78-48bd-97db-2e93a457c11c",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "jennifer.jotz@rolandberger.com",
                                    "memberId": "bc7f48e1-28a6-4663-a7f0-6cad39dd8263",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "nuno.gomes@rolandberger.com",
                                    "memberId": "ec01d1bf-0270-4179-8384-1ede373a1018",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "Carlos.Isla@rolandberger.com",
                                    "memberId": "3092f424-3800-4eb5-ab27-2ccee8b03923",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "florian.welte@rolandberger.com",
                                    "memberId": "5284d013-644a-48d2-b93b-0d37177c5993",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "eva.tippl@rolandberger.com",
                                    "memberId": "d3eeac2c-22d8-40ac-8cd3-2a8d8efa56fd",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "szilvia.lang@rolandberger.com",
                                    "memberId": "acf73dc8-fa0e-4779-8631-5907bf0a32f5",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "mariella.distasi@rolandberger.com",
                                    "memberId": "e91109be-de47-407c-aee9-26ba6109a164",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "johan.vanderzande@rolandberger.com",
                                    "memberId": "d4a8c011-d118-4680-af76-789a40422703",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "magnus.ljungberg@rolandberger.com",
                                    "memberId": "f381ddab-307c-4bc2-91fa-4e7aa6b4e24d",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "arifur.ali@rolandberger.com",
                                    "memberId": "6a03ce70-cefb-4802-8e48-3af6ac2626be",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "brandon.smith@rolandberger.com",
                                    "memberId": "7dbf35b7-f2bc-4e79-b9f6-0806e45f7bc6",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "yulia.abramova@rolandberger.com",
                                    "memberId": "32960877-96f2-4d53-bdcb-982a0468a593",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "philippe.chamagne@rolandberger.com",
                                    "memberId": "7affea56-0ec3-46f6-8add-99b787d7fc26",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "angelika.binder@rolandberger.com",
                                    "memberId": "de65a0a4-26db-41e1-916b-ce0a2c2ed1c6",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "markus.meyer@rolandberger.com",
                                    "memberId": "36f44e01-df99-4098-8b31-205058aaf9bb",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "alexander.gabriel@rolandberger.com",
                                    "memberId": "4819480e-4408-48ed-9be5-b35cfa715414",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "maria.rudenko@rolandberger.com",
                                    "memberId": "cd7a4ef8-4910-442c-b4dc-695cd87de59c",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "vivien.graf@rolandberger.com",
                                    "memberId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "michael.gold@rolandberger.com",
                                    "memberId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "juergen.stubert@rolandberger.com",
                                    "memberId": "1aaebf31-8165-4276-8eb4-d4769616c509",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "julia.herzog@rolandberger.com",
                                    "memberId": "d511f8bb-ea42-4144-91fa-52f74230df26",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sebastian.weber2@rolandberger.com",
                                    "memberId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "samir.ouangar@rolandberger.com",
                                    "memberId": "eec84e37-061c-4d67-bb90-39aa55adbf0d",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "juliane.schuetze@rolandberger.com",
                                    "memberId": "79279619-938b-4ece-8526-e640e3d90c5c",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "alexander.zuwaldeck@rolandberger.com",
                                    "memberId": "0742b8bb-85bf-467b-a2fd-5c2d7cf40f05",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "tom.oudendijk@rolandberger.com",
                                    "memberId": "5457d0fd-75bd-4d97-8cef-b94d06724dc5",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "svetlana.bolbocean@rolandberger.com",
                                    "memberId": "0c7455a5-3805-4580-a74a-38996b0577df",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "adalberto.brinez@rolandberger.com",
                                    "memberId": "b5e918f5-0bd4-4cdc-b382-1f49d8295c54",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "aymann.ahmed@rolandberger.com",
                                    "memberId": "0cf0e6a9-f961-475a-bd1f-c4ac8ac744bb",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "yoshio.kawai@rolandberger.com",
                                    "memberId": "5a9ae0e0-5847-450f-8f94-95655a1fdcfc",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "chris.breitenfeld@rolandberger.com",
                                    "memberId": "ee7ad42c-e748-4794-bc2c-44bf2bf9e7a7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sascha.schuster@rolandberger.com",
                                    "memberId": "89801aa1-3805-4a3a-8da7-651c7b11f4bc",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "markus.schack@rolandberger.com",
                                    "memberId": "92d763c8-8e4b-445c-867c-348db8167fe7",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "robert.karam@rolandberger.com",
                                    "memberId": "21a6b6dd-b508-4733-9327-8377c1c8025a",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sonal.agarwal@rolandberger.com",
                                    "memberId": "318a5595-1da4-46a7-888f-79cfd18219cc",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "ryan.streetman@rolandberger.com",
                                    "memberId": "c533fc01-d6f1-4125-aecc-2f4d461e44f9",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "josh.salamon@rolandberger.com",
                                    "memberId": "79c0ccda-b265-4b91-985e-9957069b6116",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "till.friedel@rolandberger.com",
                                    "memberId": "f8b188bb-a995-46df-aa4c-161d2fdcd608",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "sungmin.lee@rolandberger.com",
                                    "memberId": "83876473-f201-4a16-87bd-4ab63e6df802",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                },
                                {
                                    "memberName": "hiromichi.kamijima@rolandberger.com",
                                    "memberId": "714b6687-537f-401f-8f50-fed64e1a4b8c",
                                    "memberType": "User",
                                    "identityProvider": "AzureAD"
                                }
                            ],
                            "tablePermissions": [
                                {
                                    "name": "rep v_II_head_region_country",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_ll_head_platform",
                                    "filterExpression": "[email] = username()"
                                },
                                {
                                    "name": "rep v_ll_head_platform_DACH",
                                    "filterExpression": "[email] = username()"
                                }
                            ]
                        },
                        {
                            "name": "General Head",
                            "modelPermission": "Read",
                            "tablePermissions": [
                                {
                                    "name": "msr v_employee_utilization",
                                    "filterExpression": "[platform_1_name] = \"General\""
                                }
                            ]
                        }
                    ],
                    "configuredBy": "matthias.gessenay@org.rolandberger.com",
                    "configuredById": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "isEffectiveIdentityRequired": true,
                    "isEffectiveIdentityRolesRequired": true,
                    "targetStorageMode": "Abf",
                    "createdDate": "2023-09-11T13:51:50.08",
                    "contentProviderType": "PbixInImportMode",
                    "misconfiguredDatasourceUsages": [
                        {
                            "datasourceInstanceId": "918fd35f-ba7f-42d9-af7a-e372ca4eeab9"
                        },
                        {
                            "datasourceInstanceId": "2509d929-2298-4623-8a0e-dc5e3181de05"
                        },
                        {
                            "datasourceInstanceId": "3e436f3a-a73f-410d-87f2-027dda870b3c"
                        },
                        {
                            "datasourceInstanceId": "3336848e-4278-4d97-8038-83d48054a6c5"
                        }
                    ],
                    "users": [
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Bernd.Reiser@rolandberger.com",
                            "displayName": "Bernd Reiser",
                            "identifier": "Bernd.Reiser@rolandberger.com",
                            "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "Yi.Faber@rolandberger.com",
                            "displayName": "Yi Faber",
                            "identifier": "Yi.Faber@rolandberger.com",
                            "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "michael.gold@rolandberger.com",
                            "displayName": "Michael Gold",
                            "identifier": "michael.gold@rolandberger.com",
                            "graphId": "3ee0f4d8-d56f-41b1-82c9-098ddf0136b7",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "lion.barone@rolandberger.com",
                            "displayName": "Lion Barone",
                            "identifier": "lion.barone@rolandberger.com",
                            "graphId": "210f387c-5a3f-41a8-9887-363dfad8c438",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christoph.kecht@rolandberger.com",
                            "displayName": "Christoph Kecht",
                            "identifier": "christoph.kecht@rolandberger.com",
                            "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "michael.mueller@rolandberger.com",
                            "displayName": "Michael Mueller",
                            "identifier": "michael.mueller@rolandberger.com",
                            "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "vivien.graf@rolandberger.com",
                            "displayName": "Vivien Graf",
                            "identifier": "vivien.graf@rolandberger.com",
                            "graphId": "5e4caf05-f1fc-45f8-9b17-bdfad4463655",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "matthias.gessenay@org.rolandberger.com",
                            "displayName": "Matthias Gessenay",
                            "identifier": "matthias.gessenay@org.rolandberger.com",
                            "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "Read",
                            "emailAddress": "sebastian.weber2@rolandberger.com",
                            "displayName": "Sebastian Weber2",
                            "identifier": "sebastian.weber2@rolandberger.com",
                            "graphId": "3a70fcfb-b20c-4944-b783-4cd7bf094cc8",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "noah.zani@org.rolandberger.com",
                            "displayName": "Noah Zani",
                            "identifier": "noah.zani@org.rolandberger.com",
                            "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                            "principalType": "User",
                            "userType": "Member"
                        },
                        {
                            "datasetUserAccessRight": "ReadWriteReshareExplore",
                            "emailAddress": "christian.filliger@org.rolandberger.com",
                            "displayName": "Christian Filliger",
                            "identifier": "christian.filliger@org.rolandberger.com",
                            "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                            "principalType": "User",
                            "userType": "Member"
                        }
                    ]
                }
            ],
            "dataflows": [],
            "datamarts": [],
            "users": [
                {
                    "groupUserAccessRight": "Admin",
                    "emailAddress": "Bernd.Reiser@rolandberger.com",
                    "displayName": "Bernd Reiser",
                    "identifier": "Bernd.Reiser@rolandberger.com",
                    "graphId": "805a003f-adc5-4aa1-87e4-5492e9cf3953",
                    "principalType": "User",
                    "userType": "Member"
                },
                {
                    "groupUserAccessRight": "Admin",
                    "emailAddress": "matthias.gessenay@org.rolandberger.com",
                    "displayName": "Matthias Gessenay",
                    "identifier": "matthias.gessenay@org.rolandberger.com",
                    "graphId": "7e106b26-ce9f-42cc-8cbc-e33aa5bff814",
                    "principalType": "User",
                    "userType": "Member"
                },
                {
                    "groupUserAccessRight": "Admin",
                    "emailAddress": "noah.zani@org.rolandberger.com",
                    "displayName": "Noah Zani",
                    "identifier": "noah.zani@org.rolandberger.com",
                    "graphId": "89b8131d-6d08-4a62-b354-86ca078accf1",
                    "principalType": "User",
                    "userType": "Member"
                },
                {
                    "groupUserAccessRight": "Admin",
                    "emailAddress": "christian.filliger@org.rolandberger.com",
                    "displayName": "Christian Filliger",
                    "identifier": "christian.filliger@org.rolandberger.com",
                    "graphId": "1035451a-4e46-4769-a9ff-af41811030f9",
                    "principalType": "User",
                    "userType": "Member"
                },
                {
                    "groupUserAccessRight": "Member",
                    "emailAddress": "michael.mueller@rolandberger.com",
                    "displayName": "Michael Mueller",
                    "identifier": "michael.mueller@rolandberger.com",
                    "graphId": "b6e0ffb5-3977-4713-8981-0107335abd50",
                    "principalType": "User",
                    "userType": "Member"
                },
                {
                    "groupUserAccessRight": "Admin",
                    "emailAddress": "Yi.Faber@rolandberger.com",
                    "displayName": "Yi Faber",
                    "identifier": "Yi.Faber@rolandberger.com",
                    "graphId": "9265d727-f2f5-4266-8763-f44f81a3d433",
                    "principalType": "User",
                    "userType": "Member"
                },
                {
                    "groupUserAccessRight": "Member",
                    "emailAddress": "christoph.kecht@rolandberger.com",
                    "displayName": "Christoph Kecht",
                    "identifier": "christoph.kecht@rolandberger.com",
                    "graphId": "fd7e4496-6ec7-4837-a5dd-fab3a3f31ef5",
                    "principalType": "User",
                    "userType": "Member"
                }
            ]
        }
    ],
    "datasourceInstances": [
        {
            "datasourceType": "Sql",
            "connectionDetails": {
                "server": "muc-mssql-2",
                "database": "datahub"
            },
            "datasourceId": "9fbc6fc2-1774-4c3e-bd82-9e86586a6e47",
            "gatewayId": "9fc8f123-0637-44d3-b5a4-073363b4a65e"
        },
        {
            "datasourceType": "OData",
            "connectionDetails": {
                "url": "https://rolandberger.crm4.dynamics.com/api/data/v9.1"
            },
            "datasourceId": "2201b887-267a-420e-8fcb-eb0ddd824d37",
            "gatewayId": "5918478d-4a89-4924-88ae-4f7c02c55128"
        },
        {
            "datasourceType": "Web",
            "connectionDetails": {
                "url": "https://rberger.sharepoint.com/sites/Reports/Shared%20Documents/General/Master%20Data/2023-08-22_Subplatforms.xlsx"
            },
            "datasourceId": "946ea439-62e4-4715-b0ef-ccbeadf8383d",
            "gatewayId": "5918478d-4a89-4924-88ae-4f7c02c55128"
        },
        {
            "datasourceType": "Web",
            "connectionDetails": {
                "url": "https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx"
            },
            "datasourceId": "a00f9229-1b18-4574-9723-2a588b5c3162",
            "gatewayId": "5918478d-4a89-4924-88ae-4f7c02c55128"
        },
        {
            "datasourceType": "Web",
            "connectionDetails": {
                "url": "https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx"
            },
            "datasourceId": "910b4c18-09ce-47b5-b0a8-0da232572ada",
            "gatewayId": "5918478d-4a89-4924-88ae-4f7c02c55128"
        }
    ],
    "misconfiguredDatasourceInstances": [
        {
            "datasourceType": "Web",
            "connectionDetails": {
                "url": "https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/platform_sort.xlsx"
            },
            "datasourceId": "3e436f3a-a73f-410d-87f2-027dda870b3c"
        },
        {
            "datasourceType": "Web",
            "connectionDetails": {
                "url": "https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/utilization_budgets.xlsx"
            },
            "datasourceId": "918fd35f-ba7f-42d9-af7a-e372ca4eeab9"
        },
        {
            "datasourceType": "Web",
            "connectionDetails": {
                "url": "https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/Jobcodes_for_Scope.xlsx"
            },
            "datasourceId": "2509d929-2298-4623-8a0e-dc5e3181de05"
        },
        {
            "datasourceType": "Sql",
            "connectionDetails": {
                "server": "muc-mssql-2",
                "database": "datahub"
            },
            "datasourceId": "3336848e-4278-4d97-8038-83d48054a6c5"
        },
        {
            "datasourceType": "Web",
            "connectionDetails": {
                "url": "https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/job_sort.xlsx"
            },
            "datasourceId": "ad83fa59-55a1-4038-b8d2-5b11b07a4fad"
        },
        {
            "datasourceType": "Web",
            "connectionDetails": {
                "url": "https://rberger.sharepoint.com/sites/Reports-Report_OI/Shared%20Documents/Report_OI/Data/OI%20Budgets_monthly_vPowerBI.xlsx"
            },
            "datasourceId": "ff1b8dd4-104b-42c8-82f7-6f9e3ac19c95"
        },
        {
            "datasourceType": "Web",
            "connectionDetails": {
                "url": "https://rberger.sharepoint.com/sites/Reports-Utilization/Shared%20Documents/Report_Utilization/Data/2023_Budget_Utilization_Capture%20rate.xlsx"
            },
            "datasourceId": "a2d4d68a-cbbf-446f-b298-9925e59e44d6"
        }
    ],
    "lastScanDate": "September 18, 2023 08:48:02"
}